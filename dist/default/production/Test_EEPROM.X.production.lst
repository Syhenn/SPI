

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Dec 20 10:55:27 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 21/07/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K83 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _SPI1STATUSbits	set	15639
    91   000000                     _SPI1CON2bits	set	15638
    92   000000                     _SPI1TCNTH	set	15635
    93   000000                     _SPI1TWIDTH	set	15640
    94   000000                     _SPI1CON1	set	15637
    95   000000                     _I2C2SDAPPS	set	15078
    96   000000                     _U1CON0bits	set	15858
    97   000000                     _SPI1CON0bits	set	15636
    98   000000                     _PORTCbits	set	16332
    99   000000                     _PORTBbits	set	16331
   100   000000                     _RB1PPS	set	14857
   101   000000                     _RC6PPS	set	14870
   102   000000                     _ANSELA	set	14912
   103   000000                     _TRISA	set	16322
   104   000000                     _PORTAbits	set	16330
   105   000000                     _PORTC	set	16332
   106   000000                     _PORTB	set	16331
   107   000000                     _TRISC	set	16324
   108   000000                     _TRISB	set	16323
   109   000000                     _ANSELB	set	14928
   110   000000                     _ODCONB	set	14930
   111   000000                     _ANSELC	set	14944
   112   000000                     _SPI1SDIPPS	set	15073
   113   000000                     _I2C2SCLPPS	set	15077
   114   000000                     _U1RXPPS	set	15079
   115   000000                     _SPI1RXB	set	15632
   116   000000                     _SPI1TXB	set	15633
   117   000000                     _SPI1TCNTL	set	15634
   118   000000                     _SPI1CON0	set	15636
   119   000000                     _I2C2CON0	set	15709
   120   000000                     _U1CON0	set	15858
   121   000000                     _RC3PPS	set	14867
   122   000000                     _RC5PPS	set	14869
   123   000000                     _RB2PPS	set	14858
   124   000000                     _U1BRG	set	15861
   125   000000                     _U1FIFObits	set	15863
   126   000000                     _U1CON2	set	15860
   127   000000                     _U1CON1	set	15859
   128   000000                     _I2C2CLK	set	15717
   129   000000                     _SPI1BAUD	set	15641
   130   000000                     _SPI1CLK	set	15644
   131                           
   132                           	psect	smallconst
   133   001000                     __psmallconst:
   134                           	callstack 0
   135   001000  00                 	db	0
   136   001001                     STR_2:
   137   001001  64                 	db	100	;'d'
   138   001002  65                 	db	101	;'e'
   139   001003  6C                 	db	108	;'l'
   140   001004  65                 	db	101	;'e'
   141   001005  74                 	db	116	;'t'
   142   001006  65                 	db	101	;'e'
   143   001007  3D                 	db	61	;'='
   144   001008  20                 	db	32
   145   001009  25                 	db	37
   146   00100A  64                 	db	100	;'d'
   147   00100B  00                 	db	0
   148   00100C                     STR_1:
   149   00100C  76                 	db	118	;'v'
   150   00100D  61                 	db	97	;'a'
   151   00100E  6C                 	db	108	;'l'
   152   00100F  3D                 	db	61	;'='
   153   001010  20                 	db	32
   154   001011  25                 	db	37
   155   001012  2E                 	db	46
   156   001013  32                 	db	50	;'2'
   157   001014  66                 	db	102	;'f'
   158   001015  00                 	db	0
   159   001016                     STR_3:
   160   001016  69                 	db	105	;'i'
   161   001017  6E                 	db	110	;'n'
   162   001018  66                 	db	102	;'f'
   163   001019  00                 	db	0
   164   00101A                     STR_6:
   165   00101A  6E                 	db	110	;'n'
   166   00101B  61                 	db	97	;'a'
   167   00101C  6E                 	db	110	;'n'
   168   00101D  00                 	db	0
   169   00101E  00                 	db	0	; dummy byte at the end
   170   000000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174   003F6A                     __pcinit:
   175                           	callstack 0
   176   003F6A                     start_initialization:
   177                           	callstack 0
   178   003F6A                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Clear objects allocated to BANK1 (80 bytes)
   182   003F6A  EE00  F100         	lfsr	0,__pbssBANK1
   183   003F6E  0E50               	movlw	80
   184   003F70                     clear_0:
   185   003F70  6AEE               	clrf	postinc0,c
   186   003F72  06E8               	decf	wreg,f,c
   187   003F74  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to COMRAM (13 bytes)
   190   003F76  EE00  F051         	lfsr	0,__pbssCOMRAM
   191   003F7A  0E0D               	movlw	13
   192   003F7C                     clear_1:
   193   003F7C  6AEE               	clrf	postinc0,c
   194   003F7E  06E8               	decf	wreg,f,c
   195   003F80  E1FD               	bnz	clear_1
   196   003F82                     end_of_initialization:
   197                           	callstack 0
   198   003F82                     __end_of__initialization:
   199                           	callstack 0
   200   003F82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   201   003F84  6EF8               	movwf	tblptru,c
   202   003F86  0100               	movlb	0
   203   003F88  EFB2  F014         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206   000051                     __pbssCOMRAM:
   207                           	callstack 0
   208   000051                     floorf@F521:
   209                           	callstack 0
   210   000051                     	ds	4
   211   000055                     ___fpclassifyf@F465:
   212                           	callstack 0
   213   000055                     	ds	4
   214   000059                     _width:
   215                           	callstack 0
   216   000059                     	ds	2
   217   00005B                     _prec:
   218                           	callstack 0
   219   00005B                     	ds	2
   220   00005D                     _flags:
   221                           	callstack 0
   222   00005D                     	ds	1
   223                           
   224                           	psect	bssBANK1
   225   000100                     __pbssBANK1:
   226                           	callstack 0
   227   000100                     _dbuf:
   228                           	callstack 0
   229   000100                     	ds	80
   230                           
   231                           	psect	cstackBANK0
   232   000060                     __pcstackBANK0:
   233                           	callstack 0
   234   000060                     efgtoa@ne:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238   000060                     	ds	2
   239   000062                     efgtoa@p:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x2
   243   000062                     	ds	2
   244   000064                     efgtoa@t:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248   000064                     	ds	2
   249   000066                     _efgtoa$1089:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x6
   253   000066                     	ds	2
   254   000068                     efgtoa@pp:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x8
   258   000068                     	ds	1
   259   000069                     efgtoa@mode:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x9
   263   000069                     	ds	1
   264   00006A                     efgtoa@nmode:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0xA
   268   00006A                     	ds	1
   269   00006B                     efgtoa@d:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0xB
   273   00006B                     	ds	2
   274   00006D                     efgtoa@m:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0xD
   278   00006D                     	ds	2
   279   00006F                     efgtoa@e:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0xF
   283   00006F                     	ds	2
   284   000071                     efgtoa@w:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x11
   288   000071                     	ds	2
   289   000073                     efgtoa@ou:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x13
   293   000073                     	ds	4
   294   000077                     efgtoa@i:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x17
   298   000077                     	ds	2
   299   000079                     efgtoa@h:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x19
   303   000079                     	ds	4
   304   00007D                     efgtoa@l:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x1D
   308   00007D                     	ds	4
   309   000081                     efgtoa@sign:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x21
   313   000081                     	ds	1
   314   000082                     efgtoa@g:
   315                           	callstack 0
   316                           
   317                           ; 4 bytes @ 0x22
   318   000082                     	ds	4
   319   000086                     efgtoa@n:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x26
   323   000086                     	ds	2
   324   000088                     efgtoa@u:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x28
   328   000088                     	ds	4
   329   00008C                     ?_vfprintf:
   330                           	callstack 0
   331   00008C                     vfprintf@fp:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x2C
   335   00008C                     	ds	1
   336   00008D                     vfprintf@fmt:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x2D
   340   00008D                     	ds	1
   341   00008E                     vfprintf@ap:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x2E
   345   00008E                     	ds	1
   346   00008F                     ?_sprintf:
   347                           	callstack 0
   348   00008F                     sprintf@s:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x2F
   352   00008F                     	ds	1
   353   000090                     sprintf@fmt:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x30
   357   000090                     	ds	5
   358   000095                     main@ligne1:
   359                           	callstack 0
   360                           
   361                           ; 64 bytes @ 0x35
   362   000095                     	ds	64
   363   0000D5                     main@valeurTest:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x75
   367   0000D5                     	ds	4
   368   0000D9                     main@affiche16:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x79
   372   0000D9                     	ds	4
   373   0000DD                     main@deletedData:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x7D
   377   0000DD                     	ds	4
   378                           
   379                           	psect	cstackCOMRAM
   380   000001                     __pcstackCOMRAM:
   381                           	callstack 0
   382   000001                     ??_deleteAll:
   383   000001                     ?_loadData:
   384                           	callstack 0
   385   000001                     ?___fpclassifyf:
   386                           	callstack 0
   387   000001                     ?___wmul:
   388                           	callstack 0
   389   000001                     ?___awdiv:
   390                           	callstack 0
   391   000001                     ?___awmod:
   392                           	callstack 0
   393   000001                     ?___fladd:
   394                           	callstack 0
   395   000001                     ?___fldiv:
   396                           	callstack 0
   397   000001                     ?___flmul:
   398                           	callstack 0
   399   000001                     ?_labs:
   400                           	callstack 0
   401   000001                     ?___flneg:
   402                           	callstack 0
   403   000001                     Lcd_Port@a:
   404                           	callstack 0
   405   000001                     writeData@data:
   406                           	callstack 0
   407   000001                     loadData@address:
   408                           	callstack 0
   409   000001                     ___wmul@multiplier:
   410                           	callstack 0
   411   000001                     ___awdiv@dividend:
   412                           	callstack 0
   413   000001                     ___awmod@dividend:
   414                           	callstack 0
   415   000001                     memcpy@d1:
   416                           	callstack 0
   417   000001                     fputc@c:
   418                           	callstack 0
   419   000001                     strcpy@dest:
   420                           	callstack 0
   421   000001                     ___fleq@ff1:
   422                           	callstack 0
   423   000001                     ___flneg@f1:
   424                           	callstack 0
   425   000001                     ___fladd@b:
   426                           	callstack 0
   427   000001                     ___fldiv@b:
   428                           	callstack 0
   429   000001                     ___flmul@b:
   430                           	callstack 0
   431   000001                     ___fpclassifyf@x:
   432                           	callstack 0
   433   000001                     labs@a:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x0
   437   000001                     	ds	1
   438   000002                     ??_Lcd_Cmd:
   439   000002                     Lcd_Write_Char@temp:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x1
   443   000002                     	ds	1
   444   000003                     ??_loadData:
   445   000003                     Lcd_Cmd@a:
   446                           	callstack 0
   447   000003                     Lcd_Write_Char@y:
   448                           	callstack 0
   449   000003                     fputc@fp:
   450                           	callstack 0
   451   000003                     strcpy@src:
   452                           	callstack 0
   453   000003                     writeData@address:
   454                           	callstack 0
   455   000003                     ___wmul@multiplicand:
   456                           	callstack 0
   457   000003                     ___awdiv@divisor:
   458                           	callstack 0
   459   000003                     ___awmod@divisor:
   460                           	callstack 0
   461   000003                     memcpy@s1:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x2
   465   000003                     	ds	1
   466   000004                     ??_fputc:
   467   000004                     ??_strcpy:
   468   000004                     ??_Lcd_Init:
   469   000004                     Lcd_Set_Cursor@b:
   470                           	callstack 0
   471   000004                     Lcd_Write_Char@a:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x3
   475   000004                     	ds	1
   476   000005                     ??___fpclassifyf:
   477   000005                     ??_labs:
   478   000005                     ??_writeData:
   479   000005                     Lcd_Set_Cursor@a:
   480                           	callstack 0
   481   000005                     Lcd_Write_String@a:
   482                           	callstack 0
   483   000005                     ___awdiv@counter:
   484                           	callstack 0
   485   000005                     ___awmod@counter:
   486                           	callstack 0
   487   000005                     ___wmul@product:
   488                           	callstack 0
   489   000005                     memcpy@n:
   490                           	callstack 0
   491   000005                     strcpy@d:
   492                           	callstack 0
   493   000005                     ___fleq@ff2:
   494                           	callstack 0
   495   000005                     ___fladd@a:
   496                           	callstack 0
   497   000005                     ___fldiv@a:
   498                           	callstack 0
   499   000005                     ___flmul@a:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x4
   503   000005                     	ds	1
   504   000006                     Lcd_Set_Cursor@z:
   505                           	callstack 0
   506   000006                     loadData@valEEPROM:
   507                           	callstack 0
   508   000006                     ___awdiv@sign:
   509                           	callstack 0
   510   000006                     ___awmod@sign:
   511                           	callstack 0
   512   000006                     Lcd_Write_String@i:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x5
   516   000006                     	ds	1
   517   000007                     ?_abs:
   518                           	callstack 0
   519   000007                     ?_read_prec_or_width:
   520                           	callstack 0
   521   000007                     Lcd_Set_Cursor@y:
   522                           	callstack 0
   523   000007                     loadData@valEEPROM2:
   524                           	callstack 0
   525   000007                     read_prec_or_width@fmt:
   526                           	callstack 0
   527   000007                     memcpy@tmp:
   528                           	callstack 0
   529   000007                     ___awdiv@quotient:
   530                           	callstack 0
   531   000007                     abs@a:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x6
   535   000007                     	ds	1
   536   000008                     Lcd_Set_Cursor@temp:
   537                           	callstack 0
   538   000008                     loadData@valEEPROM3:
   539                           	callstack 0
   540   000008                     read_prec_or_width@ap:
   541                           	callstack 0
   542   000008                     memcpy@d:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x7
   546   000008                     	ds	1
   547   000009                     ??___fladd:
   548   000009                     ??___fldiv:
   549   000009                     ??___flmul:
   550   000009                     ??_abs:
   551   000009                     ??___fleq:
   552   000009                     ?___xxtofl:
   553                           	callstack 0
   554   000009                     read_prec_or_width@c:
   555                           	callstack 0
   556   000009                     ___fpclassifyf@e:
   557                           	callstack 0
   558   000009                     fputs@s:
   559                           	callstack 0
   560   000009                     ___xxtofl@val:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x8
   564   000009                     	ds	1
   565   00000A                     read_prec_or_width@n:
   566                           	callstack 0
   567   00000A                     memcpy@s:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x9
   571   00000A                     	ds	1
   572   00000B                     fputs@fp:
   573                           	callstack 0
   574   00000B                     ___fpclassifyf@u:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0xA
   578   00000B                     	ds	1
   579   00000C                     fputs@c:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0xB
   583   00000C                     	ds	1
   584   00000D                     ??___xxtofl:
   585   00000D                     ___fladd@signs:
   586                           	callstack 0
   587   00000D                     ___flmul@sign:
   588                           	callstack 0
   589   00000D                     fputs@i:
   590                           	callstack 0
   591   00000D                     ___fldiv@rem:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0xC
   595   00000D                     	ds	1
   596   00000E                     ___fladd@aexp:
   597                           	callstack 0
   598   00000E                     ___flmul@grs:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0xD
   602   00000E                     	ds	1
   603   00000F                     ___fladd@bexp:
   604                           	callstack 0
   605   00000F                     pad@fp:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xE
   609   00000F                     	ds	1
   610   000010                     ___fladd@grs:
   611                           	callstack 0
   612   000010                     pad@buf:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xF
   616   000010                     	ds	1
   617   000011                     ___fldiv@sign:
   618                           	callstack 0
   619   000011                     ___xxtofl@sign:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x10
   623   000011                     	ds	1
   624   000012                     ___flmul@aexp:
   625                           	callstack 0
   626   000012                     ___xxtofl@exp:
   627                           	callstack 0
   628   000012                     ___fldiv@new_exp:
   629                           	callstack 0
   630   000012                     pad@p:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x11
   634   000012                     	ds	1
   635   000013                     ___flmul@bexp:
   636                           	callstack 0
   637   000013                     ___xxtofl@arg:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x12
   641   000013                     	ds	1
   642   000014                     ??_pad:
   643   000014                     ___fldiv@grs:
   644                           	callstack 0
   645   000014                     ___flmul@prod:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x13
   649   000014                     	ds	1
   650   000015                     pad@i:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x14
   654   000015                     	ds	2
   655   000017                     dtoa@fp:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x16
   659   000017                     	ds	1
   660   000018                     ___fldiv@bexp:
   661                           	callstack 0
   662   000018                     ___flmul@temp:
   663                           	callstack 0
   664   000018                     dtoa@d:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x17
   668   000018                     	ds	1
   669   000019                     ___fldiv@aexp:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x18
   673   000019                     	ds	1
   674   00001A                     ?_loadData16:
   675                           	callstack 0
   676   00001A                     ?___flsub:
   677                           	callstack 0
   678   00001A                     ?_floorf:
   679                           	callstack 0
   680   00001A                     ?___fltol:
   681                           	callstack 0
   682   00001A                     loadData16@address:
   683                           	callstack 0
   684   00001A                     _dtoa$1058:
   685                           	callstack 0
   686   00001A                     ___flge@ff1:
   687                           	callstack 0
   688   00001A                     ___fltol@f1:
   689                           	callstack 0
   690   00001A                     ___flsub@b:
   691                           	callstack 0
   692   00001A                     floorf@x:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x19
   696   00001A                     	ds	2
   697   00001C                     dtoa@w:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x1B
   701   00001C                     	ds	2
   702   00001E                     ??_loadData16:
   703   00001E                     ??_floorf:
   704   00001E                     ??___fltol:
   705   00001E                     dtoa@p:
   706                           	callstack 0
   707   00001E                     ___flge@ff2:
   708                           	callstack 0
   709   00001E                     ___flsub@a:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x1D
   713   00001E                     	ds	2
   714   000020                     dtoa@s:
   715                           	callstack 0
   716   000020                     loadData16@floatValue:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x1F
   720   000020                     	ds	1
   721   000021                     dtoa@i:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x20
   725   000021                     	ds	1
   726   000022                     ??___flge:
   727   000022                     ___fltol@sign1:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x21
   731   000022                     	ds	1
   732   000023                     ___fltol@exp1:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x22
   736   000023                     	ds	1
   737   000024                     writeData16@floatData:
   738                           	callstack 0
   739   000024                     loadData16@valFinale:
   740                           	callstack 0
   741   000024                     floorf@m:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x23
   745   000024                     	ds	4
   746   000028                     writeData16@address:
   747                           	callstack 0
   748   000028                     loadData16@addressLowValue:
   749                           	callstack 0
   750   000028                     floorf@e:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x27
   754   000028                     	ds	2
   755   00002A                     ??_writeData16:
   756   00002A                     loadData16@addressHighValue:
   757                           	callstack 0
   758   00002A                     floorf@u:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x29
   762   00002A                     	ds	2
   763   00002C                     writeData16@low:
   764                           	callstack 0
   765   00002C                     loadData16@val:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x2B
   769   00002C                     	ds	2
   770   00002E                     efgtoa@fp:
   771                           	callstack 0
   772   00002E                     writeData16@high:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x2D
   776   00002E                     	ds	1
   777   00002F                     efgtoa@f:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x2E
   781   00002F                     	ds	1
   782   000030                     writeData16@data:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x2F
   786   000030                     	ds	3
   787   000033                     efgtoa@c:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x32
   791   000033                     	ds	1
   792   000034                     ??_efgtoa:
   793                           
   794                           ; 1 bytes @ 0x33
   795   000034                     	ds	2
   796   000036                     vfpfcnvrt@fp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x35
   800   000036                     	ds	1
   801   000037                     vfpfcnvrt@fmt:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x36
   805   000037                     	ds	1
   806   000038                     vfpfcnvrt@ap:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x37
   810   000038                     	ds	1
   811   000039                     ??_vfpfcnvrt:
   812                           
   813                           ; 1 bytes @ 0x38
   814   000039                     	ds	2
   815   00003B                     vfpfcnvrt@convarg:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x3A
   819   00003B                     	ds	4
   820   00003F                     vfpfcnvrt@c:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x3E
   824   00003F                     	ds	1
   825   000040                     vfpfcnvrt@cp:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x3F
   829   000040                     	ds	1
   830   000041                     vfprintf@cfmt:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x40
   834   000041                     	ds	1
   835   000042                     sprintf@ap:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x41
   839   000042                     	ds	1
   840   000043                     sprintf@f:
   841                           	callstack 0
   842                           
   843                           ; 12 bytes @ 0x42
   844   000043                     	ds	12
   845   00004F                     ??_main:
   846                           
   847                           ; 1 bytes @ 0x4E
   848   00004F                     	ds	2
   849                           
   850 ;;
   851 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   852 ;;
   853 ;; *************** function _main *****************
   854 ;; Defined at:
   855 ;;		line 107 in file "SPI26K83.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  deletedData     4  125[BANK0 ] float 
   860 ;;  affiche16       4  121[BANK0 ] float 
   861 ;;  ligne1         64   53[BANK0 ] PTR unsigned char [32]
   862 ;;  valeurTest      4  117[BANK0 ] float 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Locals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Totals:         2      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;Total ram usage:       78 bytes
   877 ;; Hardware stack levels required when called: 8
   878 ;; This function calls:
   879 ;;		_Lcd_Clear
   880 ;;		_Lcd_Init
   881 ;;		_Lcd_Set_Cursor
   882 ;;		_Lcd_Write_String
   883 ;;		___xxtofl
   884 ;;		_deleteAll
   885 ;;		_loadData
   886 ;;		_loadData16
   887 ;;		_sprintf
   888 ;;		_writeData16
   889 ;; This function is called by:
   890 ;;		Startup code after reset
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text0
   895   002964                     __ptext0:
   896                           	callstack 0
   897   002964                     _main:
   898                           	callstack 23
   899   002964                     
   900                           ;SPI26K83.c: 109:     char* ligne1[32];;SPI26K83.c: 111:     TRISA = 0b11000000;
   901   002964  0EC0               	movlw	192
   902   002966  6EC2               	movwf	194,c	;volatile
   903                           
   904                           ;SPI26K83.c: 112:     TRISB = 0;
   905   002968  0E00               	movlw	0
   906   00296A  6EC3               	movwf	195,c	;volatile
   907                           
   908                           ;SPI26K83.c: 113:     TRISC = 0b10010011;
   909   00296C  0E93               	movlw	147
   910   00296E  6EC4               	movwf	196,c	;volatile
   911                           
   912                           ;SPI26K83.c: 116:     ANSELA = 0;
   913   002970  0E00               	movlw	0
   914   002972  013A               	movlb	58	; () banked
   915   002974  6F40               	movwf	64,b	;volatile
   916                           
   917                           ;SPI26K83.c: 117:     ANSELB = 0;
   918   002976  0E00               	movlw	0
   919   002978  6F50               	movwf	80,b	;volatile
   920                           
   921                           ;SPI26K83.c: 118:     ANSELC = 0;
   922   00297A  0E00               	movlw	0
   923   00297C  6F60               	movwf	96,b	;volatile
   924                           
   925                           ;SPI26K83.c: 119:     ODCONB = 0b00000110;
   926   00297E  0E06               	movlw	6
   927   002980  6F52               	movwf	82,b	;volatile
   928                           
   929                           ;SPI26K83.c: 120:     PORTB = 0;
   930   002982  0E00               	movlw	0
   931   002984  6ECB               	movwf	203,c	;volatile
   932                           
   933                           ;SPI26K83.c: 121:     PORTC = 0;
   934   002986  0E00               	movlw	0
   935   002988  6ECC               	movwf	204,c	;volatile
   936   00298A                     
   937                           ; BSR set to: 58
   938                           ;SPI26K83.c: 122:     PORTBbits.RB3 = 0;
   939   00298A  96CB               	bcf	203,3,c	;volatile
   940                           
   941                           ;SPI26K83.c: 126:     U1RXPPS = 0b00010111;
   942   00298C  0E17               	movlw	23
   943   00298E  6FE7               	movwf	231,b	;volatile
   944                           
   945                           ;SPI26K83.c: 127:     RC6PPS = 0b00010011;
   946   002990  0E13               	movlw	19
   947   002992  6F16               	movwf	22,b	;volatile
   948                           
   949                           ;SPI26K83.c: 129:     I2C2SCLPPS = 0b00001001;
   950   002994  0E09               	movlw	9
   951   002996  6FE5               	movwf	229,b	;volatile
   952                           
   953                           ;SPI26K83.c: 130:     I2C2SDAPPS = 0b00001010;
   954   002998  0E0A               	movlw	10
   955   00299A  6FE6               	movwf	230,b	;volatile
   956                           
   957                           ;SPI26K83.c: 131:     RB1PPS = 0b00100011;
   958   00299C  0E23               	movlw	35
   959   00299E  6F09               	movwf	9,b	;volatile
   960                           
   961                           ;SPI26K83.c: 132:     RB2PPS = 0b00100100;
   962   0029A0  0E24               	movlw	36
   963   0029A2  6F0A               	movwf	10,b	;volatile
   964                           
   965                           ;SPI26K83.c: 134:     SPI1SDIPPS = 0b00010100;
   966   0029A4  0E14               	movlw	20
   967   0029A6  6FE1               	movwf	225,b	;volatile
   968                           
   969                           ;SPI26K83.c: 135:     RC5PPS = 0b00011111;
   970   0029A8  0E1F               	movlw	31
   971   0029AA  6F15               	movwf	21,b	;volatile
   972                           
   973                           ;SPI26K83.c: 136:     RC3PPS = 0b00011110;
   974   0029AC  0E1E               	movlw	30
   975   0029AE  6F13               	movwf	19,b	;volatile
   976                           
   977                           ;SPI26K83.c: 139:     U1CON0 = 0b10100000;
   978   0029B0  0EA0               	movlw	160
   979   0029B2  013D               	movlb	61	; () banked
   980   0029B4  6FF2               	movwf	242,b	;volatile
   981                           
   982                           ;SPI26K83.c: 140:     U1CON1 = 0b10000000;
   983   0029B6  0E80               	movlw	128
   984   0029B8  6FF3               	movwf	243,b	;volatile
   985                           
   986                           ;SPI26K83.c: 141:     U1CON2 = 0;
   987   0029BA  0E00               	movlw	0
   988   0029BC  6FF4               	movwf	244,b	;volatile
   989                           
   990                           ;SPI26K83.c: 142:     U1BRG = 1666;
   991   0029BE  0E06               	movlw	6
   992   0029C0  6FF6               	movwf	246,b	;volatile
   993   0029C2  0E82               	movlw	130
   994   0029C4  6FF5               	movwf	245,b	;volatile
   995                           
   996                           ;SPI26K83.c: 146:     I2C2CON0 = 0b10000100;
   997   0029C6  0E84               	movlw	132
   998   0029C8  6F5D               	movwf	93,b	;volatile
   999                           
  1000                           ;SPI26K83.c: 147:     I2C2CLK = 0b00000000;
  1001   0029CA  0E00               	movlw	0
  1002   0029CC  6F65               	movwf	101,b	;volatile
  1003                           
  1004                           ;SPI26K83.c: 151:     SPI1CON0 = 0b00000010;
  1005   0029CE  0E02               	movlw	2
  1006   0029D0  6F14               	movwf	20,b	;volatile
  1007                           
  1008                           ;SPI26K83.c: 152:     SPI1CON1 = 0b11000000;
  1009   0029D2  0EC0               	movlw	192
  1010   0029D4  6F15               	movwf	21,b	;volatile
  1011                           
  1012                           ;SPI26K83.c: 154:     SPI1TWIDTH = 0;
  1013   0029D6  0E00               	movlw	0
  1014   0029D8  6F18               	movwf	24,b	;volatile
  1015                           
  1016                           ;SPI26K83.c: 155:     SPI1TCNTL = 0;
  1017   0029DA  0E00               	movlw	0
  1018   0029DC  6F12               	movwf	18,b	;volatile
  1019                           
  1020                           ;SPI26K83.c: 156:     SPI1TCNTH = 0;
  1021   0029DE  0E00               	movlw	0
  1022   0029E0  6F13               	movwf	19,b	;volatile
  1023                           
  1024                           ;SPI26K83.c: 158:     SPI1CLK = 0b00000010;
  1025   0029E2  0E02               	movlw	2
  1026   0029E4  6F1C               	movwf	28,b	;volatile
  1027                           
  1028                           ;SPI26K83.c: 159:     SPI1BAUD = 100;
  1029   0029E6  0E64               	movlw	100
  1030   0029E8  6F19               	movwf	25,b	;volatile
  1031   0029EA                     
  1032                           ; BSR set to: 61
  1033                           ;SPI26K83.c: 162:     Lcd_Init();
  1034   0029EA  EC34  F01D         	call	_Lcd_Init	;wreg free
  1035   0029EE                     
  1036                           ;SPI26K83.c: 163:     Lcd_Clear();
  1037   0029EE  ECD6  F01F         	call	_Lcd_Clear	;wreg free
  1038   0029F2                     
  1039                           ;SPI26K83.c: 164:     PORTBbits.RB5 = 1;
  1040   0029F2  8ACB               	bsf	203,5,c	;volatile
  1041   0029F4                     
  1042                           ;SPI26K83.c: 165:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1043   0029F4  0E09               	movlw	9
  1044   0029F6  6E50               	movwf	(??_main+1)^0,c
  1045   0029F8  0E1E               	movlw	30
  1046   0029FA  6E4F               	movwf	??_main^0,c
  1047   0029FC  0EE4               	movlw	228
  1048   0029FE                     u5007:
  1049   0029FE  2EE8               	decfsz	wreg,f,c
  1050   002A00  D7FE               	bra	u5007
  1051   002A02  2E4F               	decfsz	??_main^0,f,c
  1052   002A04  D7FC               	bra	u5007
  1053   002A06  2E50               	decfsz	(??_main+1)^0,f,c
  1054   002A08  D7FA               	bra	u5007
  1055   002A0A  D000               	nop2	
  1056   002A0C                     
  1057                           ;SPI26K83.c: 167:     SPI1CON0bits.EN = 1;
  1058   002A0C  013D               	movlb	61	; () banked
  1059   002A0E  8F14               	bsf	20,7,b	;volatile
  1060   002A10                     
  1061                           ; BSR set to: 61
  1062                           ;SPI26K83.c: 170:     PORTBbits.RB3 = 1;
  1063   002A10  86CB               	bsf	203,3,c	;volatile
  1064   002A12                     
  1065                           ; BSR set to: 61
  1066                           ;SPI26K83.c: 171:     SPI1TWIDTH = 4;
  1067   002A12  0E04               	movlw	4
  1068   002A14  6F18               	movwf	24,b	;volatile
  1069   002A16                     
  1070                           ; BSR set to: 61
  1071                           ;SPI26K83.c: 172:     SPI1TCNTL = 1;
  1072   002A16  0E01               	movlw	1
  1073   002A18  6F12               	movwf	18,b	;volatile
  1074   002A1A                     
  1075                           ; BSR set to: 61
  1076                           ;SPI26K83.c: 173:     SPI1TCNTH = 0;
  1077   002A1A  0E00               	movlw	0
  1078   002A1C  6F13               	movwf	19,b	;volatile
  1079   002A1E                     
  1080                           ; BSR set to: 61
  1081                           ;SPI26K83.c: 174:     SPI1CON2bits.TXR = 1;
  1082   002A1E  8316               	bsf	22,1,b	;volatile
  1083   002A20                     
  1084                           ; BSR set to: 61
  1085                           ;SPI26K83.c: 175:     SPI1TXB = 0b10011000;
  1086   002A20  0E98               	movlw	152
  1087   002A22  6F11               	movwf	17,b	;volatile
  1088   002A24                     l140:
  1089                           
  1090                           ; BSR set to: 61
  1091   002A24  AB17               	btfss	23,5,b	;volatile
  1092   002A26  EF17  F015         	goto	u4971
  1093   002A2A  EF19  F015         	goto	u4970
  1094   002A2E                     u4971:
  1095   002A2E  EF12  F015         	goto	l140
  1096   002A32                     u4970:
  1097   002A32                     
  1098                           ; BSR set to: 61
  1099                           ;SPI26K83.c: 177:     SPI1TXB = 0b00001111;
  1100   002A32  0E0F               	movlw	15
  1101   002A34  6F11               	movwf	17,b	;volatile
  1102   002A36                     l143:
  1103                           
  1104                           ; BSR set to: 61
  1105   002A36  AB17               	btfss	23,5,b	;volatile
  1106   002A38  EF20  F015         	goto	u4981
  1107   002A3C  EF22  F015         	goto	u4980
  1108   002A40                     u4981:
  1109   002A40  EF1B  F015         	goto	l143
  1110   002A44                     u4980:
  1111   002A44                     
  1112                           ; BSR set to: 61
  1113                           ;SPI26K83.c: 179:     SPI1CON2bits.TXR = 0;
  1114   002A44  9316               	bcf	22,1,b	;volatile
  1115                           
  1116                           ;SPI26K83.c: 180:     PORTBbits.RB3 = 0;
  1117   002A46  96CB               	bcf	203,3,c	;volatile
  1118                           
  1119                           ;SPI26K83.c: 181:     SPI1CON0bits.EN = 0;
  1120   002A48  9F14               	bcf	20,7,b	;volatile
  1121   002A4A                     
  1122                           ; BSR set to: 61
  1123                           ;SPI26K83.c: 183:     float valeurTest = 18.68;
  1124   002A4A  0EA4               	movlw	164
  1125   002A4C  0100               	movlb	0	; () banked
  1126   002A4E  6FD5               	movwf	main@valeurTest& (0+255),b
  1127   002A50  0E70               	movlw	112
  1128   002A52  6FD6               	movwf	(main@valeurTest+1)& (0+255),b
  1129   002A54  0E95               	movlw	149
  1130   002A56  6FD7               	movwf	(main@valeurTest+2)& (0+255),b
  1131   002A58  0E41               	movlw	65
  1132   002A5A  6FD8               	movwf	(main@valeurTest+3)& (0+255),b
  1133   002A5C                     l4563:
  1134                           
  1135                           ;SPI26K83.c: 185:     {;SPI26K83.c: 186:         _delay((unsigned long)((100)*(64000000/
      +                          4000.0)));
  1136   002A5C  0E09               	movlw	9
  1137   002A5E  6E50               	movwf	(??_main+1)^0,c
  1138   002A60  0E1E               	movlw	30
  1139   002A62  6E4F               	movwf	??_main^0,c
  1140   002A64  0EE4               	movlw	228
  1141   002A66                     u5017:
  1142   002A66  2EE8               	decfsz	wreg,f,c
  1143   002A68  D7FE               	bra	u5017
  1144   002A6A  2E4F               	decfsz	??_main^0,f,c
  1145   002A6C  D7FC               	bra	u5017
  1146   002A6E  2E50               	decfsz	(??_main+1)^0,f,c
  1147   002A70  D7FA               	bra	u5017
  1148   002A72  D000               	nop2	
  1149   002A74                     
  1150                           ;SPI26K83.c: 188:         U1CON0bits.RXEN = 1;
  1151   002A74  013D               	movlb	61	; () banked
  1152   002A76  89F2               	bsf	242,4,b	;volatile
  1153   002A78                     
  1154                           ; BSR set to: 61
  1155                           ;SPI26K83.c: 189:         if (U1FIFObits.RXBE == 0)
  1156   002A78  B3F7               	btfsc	247,1,b	;volatile
  1157   002A7A  EF41  F015         	goto	u4991
  1158   002A7E  EF43  F015         	goto	u4990
  1159   002A82                     u4991:
  1160   002A82  EF2E  F015         	goto	l4563
  1161   002A86                     u4990:
  1162   002A86                     
  1163                           ; BSR set to: 61
  1164                           ;SPI26K83.c: 190:         {;SPI26K83.c: 191:             writeData16(valeurTest,1);
  1165   002A86  C0D5  F024         	movff	main@valeurTest,writeData16@floatData
  1166   002A8A  C0D6  F025         	movff	main@valeurTest+1,writeData16@floatData+1
  1167   002A8E  C0D7  F026         	movff	main@valeurTest+2,writeData16@floatData+2
  1168   002A92  C0D8  F027         	movff	main@valeurTest+3,writeData16@floatData+3
  1169   002A96  0E00               	movlw	0
  1170   002A98  6E29               	movwf	(writeData16@address+1)^0,c
  1171   002A9A  0E01               	movlw	1
  1172   002A9C  6E28               	movwf	writeData16@address^0,c
  1173   002A9E  ECE4  F01C         	call	_writeData16	;wreg free
  1174   002AA2                     
  1175                           ;SPI26K83.c: 192:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1176   002AA2  0E09               	movlw	9
  1177   002AA4  6E50               	movwf	(??_main+1)^0,c
  1178   002AA6  0E1E               	movlw	30
  1179   002AA8  6E4F               	movwf	??_main^0,c
  1180   002AAA  0EE4               	movlw	228
  1181   002AAC                     u5027:
  1182   002AAC  2EE8               	decfsz	wreg,f,c
  1183   002AAE  D7FE               	bra	u5027
  1184   002AB0  2E4F               	decfsz	??_main^0,f,c
  1185   002AB2  D7FC               	bra	u5027
  1186   002AB4  2E50               	decfsz	(??_main+1)^0,f,c
  1187   002AB6  D7FA               	bra	u5027
  1188   002AB8  D000               	nop2	
  1189   002ABA                     
  1190                           ;SPI26K83.c: 193:             float affiche16 = loadData16(1);
  1191   002ABA  0E00               	movlw	0
  1192   002ABC  6E1B               	movwf	(loadData16@address+1)^0,c
  1193   002ABE  0E01               	movlw	1
  1194   002AC0  6E1A               	movwf	loadData16@address^0,c
  1195   002AC2  EC39  F01C         	call	_loadData16	;wreg free
  1196   002AC6  C01A  F0D9         	movff	?_loadData16,main@affiche16
  1197   002ACA  C01B  F0DA         	movff	?_loadData16+1,main@affiche16+1
  1198   002ACE  C01C  F0DB         	movff	?_loadData16+2,main@affiche16+2
  1199   002AD2  C01D  F0DC         	movff	?_loadData16+3,main@affiche16+3
  1200   002AD6                     
  1201                           ;SPI26K83.c: 194:             Lcd_Clear();
  1202   002AD6  ECD6  F01F         	call	_Lcd_Clear	;wreg free
  1203   002ADA                     
  1204                           ;SPI26K83.c: 195:             sprintf(ligne1,"val= %.2f", affiche16);
  1205   002ADA  0E95               	movlw	low main@ligne1
  1206   002ADC  0100               	movlb	0	; () banked
  1207   002ADE  6F8F               	movwf	sprintf@s& (0+255),b
  1208   002AE0  0E0C               	movlw	low STR_1
  1209   002AE2  6F90               	movwf	sprintf@fmt& (0+255),b
  1210   002AE4  C0D9  F091         	movff	main@affiche16,?_sprintf+2
  1211   002AE8  C0DA  F092         	movff	main@affiche16+1,?_sprintf+3
  1212   002AEC  C0DB  F093         	movff	main@affiche16+2,?_sprintf+4
  1213   002AF0  C0DC  F094         	movff	main@affiche16+3,?_sprintf+5
  1214   002AF4  EC16  F01F         	call	_sprintf	;wreg free
  1215   002AF8                     
  1216                           ;SPI26K83.c: 196:             Lcd_Set_Cursor(1,1);
  1217   002AF8  0E01               	movlw	1
  1218   002AFA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1219   002AFC  0E01               	movlw	1
  1220   002AFE  ECD8  F01D         	call	_Lcd_Set_Cursor
  1221   002B02                     
  1222                           ;SPI26K83.c: 197:             Lcd_Write_String(ligne1);
  1223   002B02  0E95               	movlw	low main@ligne1
  1224   002B04  6E05               	movwf	Lcd_Write_String@a^0,c
  1225   002B06  EC4E  F01F         	call	_Lcd_Write_String	;wreg free
  1226   002B0A                     
  1227                           ;SPI26K83.c: 198:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1228   002B0A  0E52               	movlw	82
  1229   002B0C  6E50               	movwf	(??_main+1)^0,c
  1230   002B0E  0E2B               	movlw	43
  1231   002B10  6E4F               	movwf	??_main^0,c
  1232   002B12  0E00               	movlw	0
  1233   002B14                     u5037:
  1234   002B14  2EE8               	decfsz	wreg,f,c
  1235   002B16  D7FE               	bra	u5037
  1236   002B18  2E4F               	decfsz	??_main^0,f,c
  1237   002B1A  D7FC               	bra	u5037
  1238   002B1C  2E50               	decfsz	(??_main+1)^0,f,c
  1239   002B1E  D7FA               	bra	u5037
  1240   002B20  D000               	nop2	
  1241   002B22                     
  1242                           ;SPI26K83.c: 199:             deleteAll();
  1243   002B22  ECA5  F01D         	call	_deleteAll	;wreg free
  1244   002B26                     
  1245                           ;SPI26K83.c: 200:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1246   002B26  0E09               	movlw	9
  1247   002B28  6E50               	movwf	(??_main+1)^0,c
  1248   002B2A  0E1E               	movlw	30
  1249   002B2C  6E4F               	movwf	??_main^0,c
  1250   002B2E  0EE4               	movlw	228
  1251   002B30                     u5047:
  1252   002B30  2EE8               	decfsz	wreg,f,c
  1253   002B32  D7FE               	bra	u5047
  1254   002B34  2E4F               	decfsz	??_main^0,f,c
  1255   002B36  D7FC               	bra	u5047
  1256   002B38  2E50               	decfsz	(??_main+1)^0,f,c
  1257   002B3A  D7FA               	bra	u5047
  1258   002B3C  D000               	nop2	
  1259   002B3E                     
  1260                           ;SPI26K83.c: 201:             float deletedData = (int) loadData(1);
  1261   002B3E  0E00               	movlw	0
  1262   002B40  6E02               	movwf	(loadData@address+1)^0,c
  1263   002B42  0E01               	movlw	1
  1264   002B44  6E01               	movwf	loadData@address^0,c
  1265   002B46  EC09  F01A         	call	_loadData	;wreg free
  1266   002B4A  C001  F009         	movff	?_loadData,___xxtofl@val
  1267   002B4E  C002  F00A         	movff	?_loadData+1,___xxtofl@val+1
  1268   002B52  0E00               	movlw	0
  1269   002B54  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  1270   002B56  0EFF               	movlw	-1
  1271   002B58  6E0B               	movwf	(___xxtofl@val+2)^0,c
  1272   002B5A  6E0C               	movwf	(___xxtofl@val+3)^0,c
  1273   002B5C  0E01               	movlw	1
  1274   002B5E  ECEE  F016         	call	___xxtofl
  1275   002B62  C009  F0DD         	movff	?___xxtofl,main@deletedData
  1276   002B66  C00A  F0DE         	movff	?___xxtofl+1,main@deletedData+1
  1277   002B6A  C00B  F0DF         	movff	?___xxtofl+2,main@deletedData+2
  1278   002B6E  C00C  F0E0         	movff	?___xxtofl+3,main@deletedData+3
  1279   002B72                     
  1280                           ;SPI26K83.c: 202:             Lcd_Clear();
  1281   002B72  ECD6  F01F         	call	_Lcd_Clear	;wreg free
  1282   002B76                     
  1283                           ;SPI26K83.c: 203:             sprintf(ligne1,"delete= %d", deletedData);
  1284   002B76  0E95               	movlw	low main@ligne1
  1285   002B78  0100               	movlb	0	; () banked
  1286   002B7A  6F8F               	movwf	sprintf@s& (0+255),b
  1287   002B7C  0E01               	movlw	low STR_2
  1288   002B7E  6F90               	movwf	sprintf@fmt& (0+255),b
  1289   002B80  C0DD  F091         	movff	main@deletedData,?_sprintf+2
  1290   002B84  C0DE  F092         	movff	main@deletedData+1,?_sprintf+3
  1291   002B88  C0DF  F093         	movff	main@deletedData+2,?_sprintf+4
  1292   002B8C  C0E0  F094         	movff	main@deletedData+3,?_sprintf+5
  1293   002B90  EC16  F01F         	call	_sprintf	;wreg free
  1294   002B94                     
  1295                           ;SPI26K83.c: 204:             Lcd_Set_Cursor(1,1);
  1296   002B94  0E01               	movlw	1
  1297   002B96  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1298   002B98  0E01               	movlw	1
  1299   002B9A  ECD8  F01D         	call	_Lcd_Set_Cursor
  1300   002B9E                     
  1301                           ;SPI26K83.c: 205:             Lcd_Write_String(ligne1);
  1302   002B9E  0E95               	movlw	low main@ligne1
  1303   002BA0  6E05               	movwf	Lcd_Write_String@a^0,c
  1304   002BA2  EC4E  F01F         	call	_Lcd_Write_String	;wreg free
  1305   002BA6                     
  1306                           ;SPI26K83.c: 207:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1307   002BA6  0E52               	movlw	82
  1308   002BA8  6E50               	movwf	(??_main+1)^0,c
  1309   002BAA  0E2B               	movlw	43
  1310   002BAC  6E4F               	movwf	??_main^0,c
  1311   002BAE  0E00               	movlw	0
  1312   002BB0                     u5057:
  1313   002BB0  2EE8               	decfsz	wreg,f,c
  1314   002BB2  D7FE               	bra	u5057
  1315   002BB4  2E4F               	decfsz	??_main^0,f,c
  1316   002BB6  D7FC               	bra	u5057
  1317   002BB8  2E50               	decfsz	(??_main+1)^0,f,c
  1318   002BBA  D7FA               	bra	u5057
  1319   002BBC  D000               	nop2	
  1320   002BBE                     
  1321                           ;SPI26K83.c: 208:             U1CON0bits.RXEN = 0;
  1322   002BBE  013D               	movlb	61	; () banked
  1323   002BC0  99F2               	bcf	242,4,b	;volatile
  1324   002BC2  EF2E  F015         	goto	l4563
  1325   002BC6  EFFE  F07F         	goto	start
  1326   002BCA                     __end_of_main:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _writeData16 *****************
  1330 ;; Defined at:
  1331 ;;		line 234 in file "SPI26K83.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  floatData       4   35[COMRAM] float 
  1334 ;;  address         2   39[COMRAM] int 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  data            2   47[COMRAM] int 
  1337 ;;  high            2   45[COMRAM] int 
  1338 ;;  low             2   43[COMRAM] int 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;Total ram usage:       14 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 1
  1355 ;; This function calls:
  1356 ;;		___flmul
  1357 ;;		___fltol
  1358 ;;		_writeData
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text1
  1365   0039C8                     __ptext1:
  1366                           	callstack 0
  1367   0039C8                     _writeData16:
  1368                           	callstack 29
  1369   0039C8                     
  1370                           ;SPI26K83.c: 235:     int data = floatData * 100;
  1371   0039C8  0E00               	movlw	0
  1372   0039CA  6E05               	movwf	___flmul@a^0,c
  1373   0039CC  0E00               	movlw	0
  1374   0039CE  6E06               	movwf	(___flmul@a+1)^0,c
  1375   0039D0  0EC8               	movlw	200
  1376   0039D2  6E07               	movwf	(___flmul@a+2)^0,c
  1377   0039D4  0E42               	movlw	66
  1378   0039D6  6E08               	movwf	(___flmul@a+3)^0,c
  1379   0039D8  C024  F001         	movff	writeData16@floatData,___flmul@b
  1380   0039DC  C025  F002         	movff	writeData16@floatData+1,___flmul@b+1
  1381   0039E0  C026  F003         	movff	writeData16@floatData+2,___flmul@b+2
  1382   0039E4  C027  F004         	movff	writeData16@floatData+3,___flmul@b+3
  1383   0039E8  EC66  F00F         	call	___flmul	;wreg free
  1384   0039EC  C001  F01A         	movff	?___flmul,___fltol@f1
  1385   0039F0  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  1386   0039F4  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  1387   0039F8  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  1388   0039FC  EC85  F018         	call	___fltol	;wreg free
  1389   003A00  C01A  F030         	movff	?___fltol,writeData16@data
  1390   003A04  C01B  F031         	movff	?___fltol+1,writeData16@data+1
  1391   003A08                     
  1392                           ;SPI26K83.c: 236:     int low = data& 0XFF;
  1393   003A08  5030               	movf	writeData16@data^0,w,c
  1394   003A0A  6E2C               	movwf	writeData16@low^0,c
  1395   003A0C  6A2D               	clrf	(writeData16@low+1)^0,c
  1396   003A0E                     
  1397                           ;SPI26K83.c: 237:     writeData(low, address);
  1398   003A0E  C02C  F001         	movff	writeData16@low,writeData@data
  1399   003A12  C02D  F002         	movff	writeData16@low+1,writeData@data+1
  1400   003A16  C028  F003         	movff	writeData16@address,writeData@address
  1401   003A1A  C029  F004         	movff	writeData16@address+1,writeData@address+1
  1402   003A1E  ECD5  F01A         	call	_writeData	;wreg free
  1403                           
  1404                           ;SPI26K83.c: 238:     int high = (data >> 8) & 0xFF;
  1405   003A22  C031  F02A         	movff	writeData16@data+1,??_writeData16
  1406   003A26  6A2B               	clrf	(??_writeData16+1)^0,c
  1407   003A28  BE2A               	btfsc	??_writeData16^0,7,c
  1408   003A2A  682B               	setf	(??_writeData16+1)^0,c
  1409   003A2C  502A               	movf	??_writeData16^0,w,c
  1410   003A2E  6E2E               	movwf	writeData16@high^0,c
  1411   003A30  6A2F               	clrf	(writeData16@high+1)^0,c
  1412   003A32                     
  1413                           ;SPI26K83.c: 239:     address += 1;
  1414   003A32  4A28               	infsnz	writeData16@address^0,f,c
  1415   003A34  2A29               	incf	(writeData16@address+1)^0,f,c
  1416   003A36                     
  1417                           ;SPI26K83.c: 240:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1418   003A36  0ED0               	movlw	208
  1419   003A38  6E2A               	movwf	??_writeData16^0,c
  1420   003A3A  0ECA               	movlw	202
  1421   003A3C                     u5067:
  1422   003A3C  2EE8               	decfsz	wreg,f,c
  1423   003A3E  D7FE               	bra	u5067
  1424   003A40  2E2A               	decfsz	??_writeData16^0,f,c
  1425   003A42  D7FC               	bra	u5067
  1426   003A44                     
  1427                           ;SPI26K83.c: 241:     writeData(high, address);
  1428   003A44  C02E  F001         	movff	writeData16@high,writeData@data
  1429   003A48  C02F  F002         	movff	writeData16@high+1,writeData@data+1
  1430   003A4C  C028  F003         	movff	writeData16@address,writeData@address
  1431   003A50  C029  F004         	movff	writeData16@address+1,writeData@address+1
  1432   003A54  ECD5  F01A         	call	_writeData	;wreg free
  1433   003A58                     
  1434                           ;SPI26K83.c: 242:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1435   003A58  0ED0               	movlw	208
  1436   003A5A  6E2A               	movwf	??_writeData16^0,c
  1437   003A5C  0ECA               	movlw	202
  1438   003A5E                     u5077:
  1439   003A5E  2EE8               	decfsz	wreg,f,c
  1440   003A60  D7FE               	bra	u5077
  1441   003A62  2E2A               	decfsz	??_writeData16^0,f,c
  1442   003A64  D7FC               	bra	u5077
  1443   003A66  0012               	return		;funcret
  1444   003A68                     __end_of_writeData16:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _writeData *****************
  1448 ;; Defined at:
  1449 ;;		line 215 in file "SPI26K83.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  data            2    0[COMRAM] int 
  1452 ;;  address         2    2[COMRAM] int 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, prodl, prodh
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;Total ram usage:        7 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_writeData16
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text2
  1478   0035AA                     __ptext2:
  1479                           	callstack 0
  1480   0035AA                     _writeData:
  1481                           	callstack 29
  1482   0035AA                     
  1483                           ;SPI26K83.c: 216:     PORTBbits.RB3 = 1;
  1484   0035AA  86CB               	bsf	203,3,c	;volatile
  1485   0035AC                     
  1486                           ;SPI26K83.c: 217:     SPI1TWIDTH = 4;
  1487   0035AC  0E04               	movlw	4
  1488   0035AE  013D               	movlb	61	; () banked
  1489   0035B0  6F18               	movwf	24,b	;volatile
  1490                           
  1491                           ;SPI26K83.c: 218:     SPI1TCNTL = 2;
  1492   0035B2  0E02               	movlw	2
  1493   0035B4  6F12               	movwf	18,b	;volatile
  1494                           
  1495                           ;SPI26K83.c: 219:     SPI1TCNTH = 0;
  1496   0035B6  0E00               	movlw	0
  1497   0035B8  6F13               	movwf	19,b	;volatile
  1498   0035BA                     
  1499                           ; BSR set to: 61
  1500                           ;SPI26K83.c: 220:     SPI1CON2bits.TXR = 1;
  1501   0035BA  8316               	bsf	22,1,b	;volatile
  1502   0035BC                     
  1503                           ; BSR set to: 61
  1504                           ;SPI26K83.c: 221:     SPI1CON0bits.EN = 1;
  1505   0035BC  8F14               	bsf	20,7,b	;volatile
  1506   0035BE                     
  1507                           ; BSR set to: 61
  1508                           ;SPI26K83.c: 222:     SPI1TXB = 0b10100000 + (address >> 4);
  1509   0035BE  C003  F005         	movff	writeData@address,??_writeData
  1510   0035C2  C004  F006         	movff	writeData@address+1,??_writeData+1
  1511   0035C6  0E04               	movlw	4
  1512   0035C8  6E07               	movwf	(??_writeData+2)^0,c
  1513   0035CA                     u4185:
  1514   0035CA  3406               	rlcf	(??_writeData+1)^0,w,c
  1515   0035CC  3206               	rrcf	(??_writeData+1)^0,f,c
  1516   0035CE  3205               	rrcf	??_writeData^0,f,c
  1517   0035D0  2E07               	decfsz	(??_writeData+2)^0,f,c
  1518   0035D2  EFE5  F01A         	goto	u4185
  1519   0035D6  5005               	movf	??_writeData^0,w,c
  1520   0035D8  0FA0               	addlw	160
  1521   0035DA  6F11               	movwf	17,b	;volatile
  1522   0035DC                     l153:
  1523                           
  1524                           ; BSR set to: 61
  1525   0035DC  AB17               	btfss	23,5,b	;volatile
  1526   0035DE  EFF3  F01A         	goto	u4191
  1527   0035E2  EFF5  F01A         	goto	u4190
  1528   0035E6                     u4191:
  1529   0035E6  EFEE  F01A         	goto	l153
  1530   0035EA                     u4190:
  1531   0035EA                     
  1532                           ; BSR set to: 61
  1533                           ;SPI26K83.c: 224:     SPI1TXB = 0b00000000 + (address << 4) + (data >> 4);
  1534   0035EA  C001  F005         	movff	writeData@data,??_writeData
  1535   0035EE  C002  F006         	movff	writeData@data+1,??_writeData+1
  1536   0035F2  0E04               	movlw	4
  1537   0035F4  6E07               	movwf	(??_writeData+2)^0,c
  1538   0035F6                     u4205:
  1539   0035F6  3406               	rlcf	(??_writeData+1)^0,w,c
  1540   0035F8  3206               	rrcf	(??_writeData+1)^0,f,c
  1541   0035FA  3205               	rrcf	??_writeData^0,f,c
  1542   0035FC  2E07               	decfsz	(??_writeData+2)^0,f,c
  1543   0035FE  EFFB  F01A         	goto	u4205
  1544   003602  5003               	movf	writeData@address^0,w,c
  1545   003604  0D10               	mullw	16
  1546   003606  50F3               	movf	243,w,c
  1547   003608  2405               	addwf	??_writeData^0,w,c
  1548   00360A  6F11               	movwf	17,b	;volatile
  1549   00360C                     l156:
  1550                           
  1551                           ; BSR set to: 61
  1552   00360C  AB17               	btfss	23,5,b	;volatile
  1553   00360E  EF0B  F01B         	goto	u4211
  1554   003612  EF0D  F01B         	goto	u4210
  1555   003616                     u4211:
  1556   003616  EF06  F01B         	goto	l156
  1557   00361A                     u4210:
  1558   00361A                     
  1559                           ; BSR set to: 61
  1560                           ;SPI26K83.c: 226:     SPI1TXB = 0b00000000 + (data << 4) + 0000;
  1561   00361A  3801               	swapf	writeData@data^0,w,c
  1562   00361C  0BF0               	andlw	240
  1563   00361E  6F11               	movwf	17,b	;volatile
  1564   003620                     l159:
  1565                           
  1566                           ; BSR set to: 61
  1567   003620  AB17               	btfss	23,5,b	;volatile
  1568   003622  EF15  F01B         	goto	u4221
  1569   003626  EF17  F01B         	goto	u4220
  1570   00362A                     u4221:
  1571   00362A  EF10  F01B         	goto	l159
  1572   00362E                     u4220:
  1573   00362E                     
  1574                           ; BSR set to: 61
  1575                           ;SPI26K83.c: 228:     PORTBbits.RB5 = !PORTBbits.RB5;
  1576   00362E  AACB               	btfss	203,5,c	;volatile
  1577   003630  EF1C  F01B         	goto	u4231
  1578   003634  EF20  F01B         	goto	u4230
  1579   003638                     u4231:
  1580   003638  6A05               	clrf	??_writeData^0,c
  1581   00363A  2A05               	incf	??_writeData^0,f,c
  1582   00363C  EF21  F01B         	goto	u4248
  1583   003640                     u4230:
  1584   003640  6A05               	clrf	??_writeData^0,c
  1585   003642                     u4248:
  1586   003642  3A05               	swapf	??_writeData^0,f,c
  1587   003644  4605               	rlncf	??_writeData^0,f,c
  1588   003646  50CB               	movf	203,w,c	;volatile
  1589   003648  1805               	xorwf	??_writeData^0,w,c
  1590   00364A  0BDF               	andlw	-33
  1591   00364C  1805               	xorwf	??_writeData^0,w,c
  1592   00364E  6ECB               	movwf	203,c	;volatile
  1593   003650                     
  1594                           ;SPI26K83.c: 229:     SPI1CON2bits.TXR = 0;
  1595   003650  013D               	movlb	61	; () banked
  1596   003652  9316               	bcf	22,1,b	;volatile
  1597   003654                     
  1598                           ; BSR set to: 61
  1599                           ;SPI26K83.c: 230:     PORTBbits.RB3 = 0;
  1600   003654  96CB               	bcf	203,3,c	;volatile
  1601   003656                     
  1602                           ; BSR set to: 61
  1603                           ;SPI26K83.c: 231:     SPI1CON0bits.EN = 0;
  1604   003656  9F14               	bcf	20,7,b	;volatile
  1605   003658                     
  1606                           ; BSR set to: 61
  1607                           ;SPI26K83.c: 232:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1608   003658  0ED0               	movlw	208
  1609   00365A  6E05               	movwf	??_writeData^0,c
  1610   00365C  0ECA               	movlw	202
  1611   00365E                     u5087:
  1612   00365E  2EE8               	decfsz	wreg,f,c
  1613   003660  D7FE               	bra	u5087
  1614   003662  2E05               	decfsz	??_writeData^0,f,c
  1615   003664  D7FC               	bra	u5087
  1616   003666  0012               	return		;funcret
  1617   003668                     __end_of_writeData:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _sprintf *****************
  1621 ;; Defined at:
  1622 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  s               1   47[BANK0 ] PTR unsigned char 
  1625 ;;		 -> main@ligne1(64), 
  1626 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1627 ;;		 -> STR_2(11), STR_1(10), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  f              12   66[COMRAM] struct _IO_FILE
  1630 ;;  ret             2    0        int 
  1631 ;;  ap              1   65[COMRAM] PTR void [1]
  1632 ;;		 -> ?_sprintf(2), 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  2   47[BANK0 ] int 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1642 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Totals:        13       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;Total ram usage:       19 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 7
  1649 ;; This function calls:
  1650 ;;		_vfprintf
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text3
  1657   003E2C                     __ptext3:
  1658                           	callstack 0
  1659   003E2C                     _sprintf:
  1660                           	callstack 23
  1661   003E2C  0E91               	movlw	low (?_sprintf+2)
  1662   003E2E  6E42               	movwf	sprintf@ap^0,c
  1663   003E30  C08F  F043         	movff	sprintf@s,sprintf@f
  1664   003E34  0E00               	movlw	0
  1665   003E36  6E47               	movwf	(sprintf@f+4)^0,c
  1666   003E38  0E00               	movlw	0
  1667   003E3A  6E46               	movwf	(sprintf@f+3)^0,c
  1668   003E3C  0E00               	movlw	0
  1669   003E3E  6E4E               	movwf	(sprintf@f+11)^0,c
  1670   003E40  0E00               	movlw	0
  1671   003E42  6E4D               	movwf	(sprintf@f+10)^0,c
  1672   003E44  0E43               	movlw	low sprintf@f
  1673   003E46  0100               	movlb	0	; () banked
  1674   003E48  6F8C               	movwf	vfprintf@fp& (0+255),b
  1675   003E4A  C090  F08D         	movff	sprintf@fmt,vfprintf@fmt
  1676   003E4E  0E42               	movlw	low sprintf@ap
  1677   003E50  6F8E               	movwf	vfprintf@ap& (0+255),b
  1678   003E52  ECB4  F01E         	call	_vfprintf	;wreg free
  1679   003E56  0100               	movlb	0	; () banked
  1680   003E58  518F               	movf	sprintf@s& (0+255),w,b
  1681   003E5A  2446               	addwf	(sprintf@f+3)^0,w,c
  1682   003E5C  6ED9               	movwf	fsr2l,c
  1683   003E5E  6ADA               	clrf	fsr2h,c
  1684   003E60  6ADF               	clrf	indf2,c
  1685   003E62                     
  1686                           ; BSR set to: 0
  1687   003E62  0012               	return		;funcret
  1688   003E64                     __end_of_sprintf:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _vfprintf *****************
  1692 ;; Defined at:
  1693 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1696 ;;		 -> sprintf@f(12), 
  1697 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1698 ;;		 -> STR_2(11), STR_1(10), 
  1699 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1700 ;;		 -> sprintf@ap(1), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  cfmt            1   64[COMRAM] PTR unsigned char 
  1703 ;;		 -> STR_2(11), STR_1(10), 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2   44[BANK0 ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        4 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 6
  1720 ;; This function calls:
  1721 ;;		_vfpfcnvrt
  1722 ;; This function is called by:
  1723 ;;		_sprintf
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text4
  1728   003D68                     __ptext4:
  1729                           	callstack 0
  1730   003D68                     _vfprintf:
  1731                           	callstack 23
  1732   003D68                     
  1733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1734   003D68  C08D  F041         	movff	vfprintf@fmt,vfprintf@cfmt
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1737   003D6C  EFC0  F01E         	goto	l4515
  1738   003D70                     l4513:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1741   003D70  C08C  F036         	movff	vfprintf@fp,vfpfcnvrt@fp
  1742   003D74  0E41               	movlw	low vfprintf@cfmt
  1743   003D76  6E37               	movwf	vfpfcnvrt@fmt^0,c
  1744   003D78  C08E  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  1745   003D7C  EC5A  F013         	call	_vfpfcnvrt	;wreg free
  1746   003D80                     l4515:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1749   003D80  0060  F107  FFF6   	movff	vfprintf@cfmt,tblptrl
  1750   003D86                     	if	1	;There is more than 1 active tblptr byte
  1751   003D86  0E10               	movlw	high __smallconst
  1752   003D88  6EF7               	movwf	tblptrh,c
  1753   003D8A                     	endif
  1754   003D8A                     	if	0	;tblptru may be non-zero
  1755   003D8A                     	endif
  1756   003D8A                     	if	0	;tblptru may be non-zero
  1757   003D8A                     	endif
  1758   003D8A  0008               	tblrd		*
  1759   003D8C  50F5               	movf	tablat,w,c
  1760   003D8E  0900               	iorlw	0
  1761   003D90  A4D8               	btfss	status,2,c
  1762   003D92  EFCD  F01E         	goto	u4961
  1763   003D96  EFCF  F01E         	goto	u4960
  1764   003D9A                     u4961:
  1765   003D9A  EFB8  F01E         	goto	l4513
  1766   003D9E                     u4960:
  1767   003D9E                     
  1768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1769   003D9E  0E00               	movlw	0
  1770   003DA0  0100               	movlb	0	; () banked
  1771   003DA2  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1772   003DA4  0E00               	movlw	0
  1773   003DA6  6F8C               	movwf	?_vfprintf& (0+255),b
  1774   003DA8                     
  1775                           ; BSR set to: 0
  1776   003DA8  0012               	return		;funcret
  1777   003DAA                     __end_of_vfprintf:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _vfpfcnvrt *****************
  1781 ;; Defined at:
  1782 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  1785 ;;		 -> sprintf@f(12), 
  1786 ;;  fmt             1   54[COMRAM] PTR PTR unsigned char 
  1787 ;;		 -> vfprintf@cfmt(1), 
  1788 ;;  ap              1   55[COMRAM] PTR PTR void 
  1789 ;;		 -> sprintf@ap(1), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  convarg         4   58[COMRAM] struct .
  1792 ;;  cp              1   63[COMRAM] PTR unsigned char 
  1793 ;;		 -> STR_2(11), STR_1(10), 
  1794 ;;  c               1   62[COMRAM] unsigned char 
  1795 ;;  done            1    0        _Bool 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1805 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;Total ram usage:       11 bytes
  1810 ;; Hardware stack levels used: 1
  1811 ;; Hardware stack levels required when called: 5
  1812 ;; This function calls:
  1813 ;;		_dtoa
  1814 ;;		_efgtoa
  1815 ;;		_fputc
  1816 ;;		_read_prec_or_width
  1817 ;; This function is called by:
  1818 ;;		_vfprintf
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text5
  1823   0026B4                     __ptext5:
  1824                           	callstack 0
  1825   0026B4                     _vfpfcnvrt:
  1826                           	callstack 23
  1827   0026B4                     
  1828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1829   0026B4  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1830   0026B6  6ED9               	movwf	fsr2l,c
  1831   0026B8  6ADA               	clrf	fsr2h,c
  1832   0026BA  006F FF7F FFF6     	movff	indf2,tblptrl
  1833   0026C0                     	if	1	;There is more than 1 active tblptr byte
  1834   0026C0  0E10               	movlw	high __smallconst
  1835   0026C2  6EF7               	movwf	tblptrh,c
  1836   0026C4                     	endif
  1837   0026C4                     	if	0	;tblptru may be non-zero
  1838   0026C4                     	endif
  1839   0026C4                     	if	0	;tblptru may be non-zero
  1840   0026C4                     	endif
  1841   0026C4  0008               	tblrd		*
  1842   0026C6  50F5               	movf	tablat,w,c
  1843   0026C8  0A25               	xorlw	37
  1844   0026CA  A4D8               	btfss	status,2,c
  1845   0026CC  EF6A  F013         	goto	u4911
  1846   0026D0  EF6C  F013         	goto	u4910
  1847   0026D4                     u4911:
  1848   0026D4  EF9F  F014         	goto	l4493
  1849   0026D8                     u4910:
  1850   0026D8                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1852   0026D8  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1853   0026DA  6ED9               	movwf	fsr2l,c
  1854   0026DC  6ADA               	clrf	fsr2h,c
  1855   0026DE  2ADF               	incf	indf2,f,c
  1856   0026E0                     
  1857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1858   0026E0  0E00               	movlw	0
  1859   0026E2  6E5A               	movwf	(_width+1)^0,c
  1860   0026E4  0E00               	movlw	0
  1861   0026E6  6E59               	movwf	_width^0,c
  1862   0026E8  C059  F05D         	movff	_width,_flags
  1863   0026EC                     
  1864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1865   0026EC  685B               	setf	_prec^0,c
  1866   0026EE  685C               	setf	(_prec+1)^0,c
  1867   0026F0                     
  1868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1869   0026F0  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1870   0026F2  6ED9               	movwf	fsr2l,c
  1871   0026F4  6ADA               	clrf	fsr2h,c
  1872   0026F6  006F FF7F FFF6     	movff	indf2,tblptrl
  1873   0026FC                     	if	1	;There is more than 1 active tblptr byte
  1874   0026FC  0E10               	movlw	high __smallconst
  1875   0026FE  6EF7               	movwf	tblptrh,c
  1876   002700                     	endif
  1877   002700                     	if	0	;tblptru may be non-zero
  1878   002700                     	endif
  1879   002700                     	if	0	;tblptru may be non-zero
  1880   002700                     	endif
  1881   002700  0008               	tblrd		*
  1882   002702  50F5               	movf	tablat,w,c
  1883   002704  0A2E               	xorlw	46
  1884   002706  A4D8               	btfss	status,2,c
  1885   002708  EF88  F013         	goto	u4921
  1886   00270C  EF8A  F013         	goto	u4920
  1887   002710                     u4921:
  1888   002710  EF98  F013         	goto	l4441
  1889   002714                     u4920:
  1890   002714                     
  1891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1892   002714  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1893   002716  6ED9               	movwf	fsr2l,c
  1894   002718  6ADA               	clrf	fsr2h,c
  1895   00271A  2ADF               	incf	indf2,f,c
  1896   00271C                     
  1897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1898   00271C  C037  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1899   002720  C038  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1900   002724  EC8C  F01B         	call	_read_prec_or_width	;wreg free
  1901   002728  C007  F05B         	movff	?_read_prec_or_width,_prec
  1902   00272C  C008  F05C         	movff	?_read_prec_or_width+1,_prec+1
  1903   002730                     l4441:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1906   002730  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1907   002732  6ED9               	movwf	fsr2l,c
  1908   002734  6ADA               	clrf	fsr2h,c
  1909   002736  50DF               	movf	indf2,w,c
  1910   002738  6E40               	movwf	vfpfcnvrt@cp^0,c
  1911   00273A                     
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1913   00273A  0060  F103  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1914   002740                     	if	1	;There is more than 1 active tblptr byte
  1915   002740  0E10               	movlw	high __smallconst
  1916   002742  6EF7               	movwf	tblptrh,c
  1917   002744                     	endif
  1918   002744                     	if	0	;tblptru may be non-zero
  1919   002744                     	endif
  1920   002744                     	if	0	;tblptru may be non-zero
  1921   002744                     	endif
  1922   002744  0008               	tblrd		*
  1923   002746  50F5               	movf	tablat,w,c
  1924   002748  0A64               	xorlw	100
  1925   00274A  B4D8               	btfsc	status,2,c
  1926   00274C  EFAA  F013         	goto	u4931
  1927   002750  EFAC  F013         	goto	u4930
  1928   002754                     u4931:
  1929   002754  EFBB  F013         	goto	l4447
  1930   002758                     u4930:
  1931   002758  0060  F103  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1932   00275E                     	if	1	;There is more than 1 active tblptr byte
  1933   00275E  0E10               	movlw	high __smallconst
  1934   002760  6EF7               	movwf	tblptrh,c
  1935   002762                     	endif
  1936   002762                     	if	0	;tblptru may be non-zero
  1937   002762                     	endif
  1938   002762                     	if	0	;tblptru may be non-zero
  1939   002762                     	endif
  1940   002762  0008               	tblrd		*
  1941   002764  50F5               	movf	tablat,w,c
  1942   002766  0A69               	xorlw	105
  1943   002768  A4D8               	btfss	status,2,c
  1944   00276A  EFB9  F013         	goto	u4941
  1945   00276E  EFBB  F013         	goto	u4940
  1946   002772                     u4941:
  1947   002772  EFD8  F013         	goto	l4455
  1948   002776                     u4940:
  1949   002776                     l4447:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1952   002776  5038               	movf	vfpfcnvrt@ap^0,w,c
  1953   002778  6ED9               	movwf	fsr2l,c
  1954   00277A  6ADA               	clrf	fsr2h,c
  1955   00277C  0E02               	movlw	2
  1956   00277E  26DF               	addwf	indf2,f,c
  1957   002780  5CDF               	subwf	indf2,w,c
  1958   002782  6ED9               	movwf	fsr2l,c
  1959   002784  6ADA               	clrf	fsr2h,c
  1960   002786  006F FF78  F03B    	movff	postinc2,vfpfcnvrt@convarg
  1961   00278C  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg+1
  1962   002792                     
  1963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1964   002792  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1965   002794  6ED9               	movwf	fsr2l,c
  1966   002796  6ADA               	clrf	fsr2h,c
  1967   002798  2840               	incf	vfpfcnvrt@cp^0,w,c
  1968   00279A  6EDF               	movwf	indf2,c
  1969   00279C                     
  1970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1971   00279C  C036  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  1972   0027A0  C03B  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  1973   0027A4  C03C  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1974   0027A8  ECC8  F017         	call	_dtoa	;wreg free
  1975   0027AC  EFB1  F014         	goto	l986
  1976   0027B0                     l4455:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1979   0027B0  5037               	movf	vfpfcnvrt@fmt^0,w,c
  1980   0027B2  6ED9               	movwf	fsr2l,c
  1981   0027B4  6ADA               	clrf	fsr2h,c
  1982   0027B6  50DF               	movf	indf2,w,c
  1983   0027B8  6E40               	movwf	vfpfcnvrt@cp^0,c
  1984   0027BA                     
  1985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1986   0027BA  0060  F103  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1987   0027C0                     	if	1	;There is more than 1 active tblptr byte
  1988   0027C0  0E10               	movlw	high __smallconst
  1989   0027C2  6EF7               	movwf	tblptrh,c
  1990   0027C4                     	endif
  1991   0027C4                     	if	0	;tblptru may be non-zero
  1992   0027C4                     	endif
  1993   0027C4                     	if	0	;tblptru may be non-zero
  1994   0027C4                     	endif
  1995   0027C4  0008               	tblrd		*
  1996   0027C6  006F FFD4  F03F    	movff	tablat,vfpfcnvrt@c
  1997                           
  1998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1999   0027CC  EFF3  F013         	goto	l4467
  2000   0027D0                     l4459:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2003   0027D0  2A40               	incf	vfpfcnvrt@cp^0,f,c
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2006   0027D2  EF0C  F014         	goto	l4469
  2007   0027D6                     l4461:
  2008                           
  2009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2010   0027D6  0E6C               	movlw	108
  2011   0027D8  6E3F               	movwf	vfpfcnvrt@c^0,c
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2014   0027DA  EF0C  F014         	goto	l4469
  2015   0027DE                     l4463:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2018   0027DE  0E00               	movlw	0
  2019   0027E0  6E3F               	movwf	vfpfcnvrt@c^0,c
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2022   0027E2  EF0C  F014         	goto	l4469
  2023   0027E6                     l4467:
  2024   0027E6  503F               	movf	vfpfcnvrt@c^0,w,c
  2025   0027E8  6E39               	movwf	??_vfpfcnvrt^0,c
  2026   0027EA  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2027                           
  2028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2029                           ; Switch size 1, requested type "simple"
  2030                           ; Number of cases is 1, Range of values is 0 to 0
  2031                           ; switch strategies available:
  2032                           ; Name         Instructions Cycles
  2033                           ; simple_byte            4     3 (average)
  2034                           ;	Chosen strategy is simple_byte
  2035   0027EC  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2036   0027EE  0A00               	xorlw	0	; case 0
  2037   0027F0  B4D8               	btfsc	status,2,c
  2038   0027F2  EFFD  F013         	goto	l4663
  2039   0027F6  EFEF  F013         	goto	l4463
  2040   0027FA                     l4663:
  2041                           
  2042                           ; Switch size 1, requested type "simple"
  2043                           ; Number of cases is 3, Range of values is 76 to 108
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte           10     6 (average)
  2047                           ;	Chosen strategy is simple_byte
  2048   0027FA  5039               	movf	??_vfpfcnvrt^0,w,c
  2049   0027FC  0A4C               	xorlw	76	; case 76
  2050   0027FE  B4D8               	btfsc	status,2,c
  2051   002800  EFE8  F013         	goto	l4459
  2052   002804  0A2A               	xorlw	42	; case 102
  2053   002806  B4D8               	btfsc	status,2,c
  2054   002808  EFEB  F013         	goto	l4461
  2055   00280C  0A0A               	xorlw	10	; case 108
  2056   00280E  B4D8               	btfsc	status,2,c
  2057   002810  EFE8  F013         	goto	l4459
  2058   002814  EFEF  F013         	goto	l4463
  2059   002818                     l4469:
  2060   002818  0060  F103  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2061   00281E                     	if	1	;There is more than 1 active tblptr byte
  2062   00281E  0E10               	movlw	high __smallconst
  2063   002820  6EF7               	movwf	tblptrh,c
  2064   002822                     	endif
  2065   002822                     	if	0	;tblptru may be non-zero
  2066   002822                     	endif
  2067   002822                     	if	0	;tblptru may be non-zero
  2068   002822                     	endif
  2069   002822  0008               	tblrd		*
  2070   002824  50F5               	movf	tablat,w,c
  2071   002826  0A66               	xorlw	102
  2072   002828  A4D8               	btfss	status,2,c
  2073   00282A  EF19  F014         	goto	u4951
  2074   00282E  EF1B  F014         	goto	u4950
  2075   002832                     u4951:
  2076   002832  EF99  F014         	goto	l4489
  2077   002836                     u4950:
  2078   002836  EF4F  F014         	goto	l4477
  2079   00283A                     l4471:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2082   00283A  5038               	movf	vfpfcnvrt@ap^0,w,c
  2083   00283C  6ED9               	movwf	fsr2l,c
  2084   00283E  6ADA               	clrf	fsr2h,c
  2085   002840  006F FF7C  F039    	movff	indf2,??_vfpfcnvrt
  2086   002846  0E04               	movlw	4
  2087   002848  26DF               	addwf	indf2,f,c
  2088   00284A  5039               	movf	??_vfpfcnvrt^0,w,c
  2089   00284C  6ED9               	movwf	fsr2l,c
  2090   00284E  6ADA               	clrf	fsr2h,c
  2091   002850  006F FF78  F03B    	movff	postinc2,vfpfcnvrt@convarg
  2092   002856  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg+1
  2093   00285C  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+2
  2094   002862  006F FF78  F03E    	movff	postinc2,vfpfcnvrt@convarg+3
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2097   002868  EF64  F014         	goto	l4479
  2098   00286C                     l4473:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2101   00286C  5038               	movf	vfpfcnvrt@ap^0,w,c
  2102   00286E  6ED9               	movwf	fsr2l,c
  2103   002870  6ADA               	clrf	fsr2h,c
  2104   002872  006F FF7C  F039    	movff	indf2,??_vfpfcnvrt
  2105   002878  0E04               	movlw	4
  2106   00287A  26DF               	addwf	indf2,f,c
  2107   00287C  5039               	movf	??_vfpfcnvrt^0,w,c
  2108   00287E  6ED9               	movwf	fsr2l,c
  2109   002880  6ADA               	clrf	fsr2h,c
  2110   002882  006F FF78  F03B    	movff	postinc2,vfpfcnvrt@convarg
  2111   002888  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg+1
  2112   00288E  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+2
  2113   002894  006F FF78  F03E    	movff	postinc2,vfpfcnvrt@convarg+3
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2116   00289A  EF64  F014         	goto	l4479
  2117   00289E                     l4477:
  2118   00289E  503F               	movf	vfpfcnvrt@c^0,w,c
  2119   0028A0  6E39               	movwf	??_vfpfcnvrt^0,c
  2120   0028A2  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2121                           
  2122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 1, Range of values is 0 to 0
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte            4     3 (average)
  2128                           ;	Chosen strategy is simple_byte
  2129   0028A4  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2130   0028A6  0A00               	xorlw	0	; case 0
  2131   0028A8  B4D8               	btfsc	status,2,c
  2132   0028AA  EF59  F014         	goto	l4665
  2133   0028AE  EF64  F014         	goto	l4479
  2134   0028B2                     l4665:
  2135                           
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 2, Range of values is 76 to 108
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte            7     4 (average)
  2141                           ;	Chosen strategy is simple_byte
  2142   0028B2  5039               	movf	??_vfpfcnvrt^0,w,c
  2143   0028B4  0A4C               	xorlw	76	; case 76
  2144   0028B6  B4D8               	btfsc	status,2,c
  2145   0028B8  EF36  F014         	goto	l4473
  2146   0028BC  0A20               	xorlw	32	; case 108
  2147   0028BE  B4D8               	btfsc	status,2,c
  2148   0028C0  EF1D  F014         	goto	l4471
  2149   0028C4  EF64  F014         	goto	l4479
  2150   0028C8                     l4479:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2153   0028C8  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2154   0028CA  6ED9               	movwf	fsr2l,c
  2155   0028CC  6ADA               	clrf	fsr2h,c
  2156   0028CE  2840               	incf	vfpfcnvrt@cp^0,w,c
  2157   0028D0  6EDF               	movwf	indf2,c
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2160   0028D2  EF82  F014         	goto	l4487
  2161   0028D6                     l4481:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2164   0028D6  C036  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2165   0028DA  C03B  F02F         	movff	vfpfcnvrt@convarg,efgtoa@f
  2166   0028DE  C03C  F030         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2167   0028E2  C03D  F031         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2168   0028E6  C03E  F032         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2169   0028EA  0060  F103  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2170   0028F0                     	if	1	;There is more than 1 active tblptr byte
  2171   0028F0  0E10               	movlw	high __smallconst
  2172   0028F2  6EF7               	movwf	tblptrh,c
  2173   0028F4                     	endif
  2174   0028F4                     	if	0	;tblptru may be non-zero
  2175   0028F4                     	endif
  2176   0028F4                     	if	0	;tblptru may be non-zero
  2177   0028F4                     	endif
  2178   0028F4  0008               	tblrd		*
  2179   0028F6  006F FFD4  F033    	movff	tablat,efgtoa@c
  2180   0028FC  EC10  F008         	call	_efgtoa	;wreg free
  2181   002900  EFB1  F014         	goto	l986
  2182   002904                     l4487:
  2183   002904  0060  F103  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2184   00290A                     	if	1	;There is more than 1 active tblptr byte
  2185   00290A  0E10               	movlw	high __smallconst
  2186   00290C  6EF7               	movwf	tblptrh,c
  2187   00290E                     	endif
  2188   00290E                     	if	0	;tblptru may be non-zero
  2189   00290E                     	endif
  2190   00290E                     	if	0	;tblptru may be non-zero
  2191   00290E                     	endif
  2192   00290E  0008               	tblrd		*
  2193   002910  50F5               	movf	tablat,w,c
  2194   002912  6E39               	movwf	??_vfpfcnvrt^0,c
  2195   002914  6A3A               	clrf	(??_vfpfcnvrt+1)^0,c
  2196                           
  2197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 1, Range of values is 0 to 0
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte            4     3 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204   002916  503A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2205   002918  0A00               	xorlw	0	; case 0
  2206   00291A  B4D8               	btfsc	status,2,c
  2207   00291C  EF92  F014         	goto	l4667
  2208   002920  EF99  F014         	goto	l4489
  2209   002924                     l4667:
  2210                           
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 1, Range of values is 102 to 102
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            4     3 (average)
  2216                           ;	Chosen strategy is simple_byte
  2217   002924  5039               	movf	??_vfpfcnvrt^0,w,c
  2218   002926  0A66               	xorlw	102	; case 102
  2219   002928  B4D8               	btfsc	status,2,c
  2220   00292A  EF6B  F014         	goto	l4481
  2221   00292E  EF99  F014         	goto	l4489
  2222   002932                     l4489:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2225   002932  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2226   002934  6ED9               	movwf	fsr2l,c
  2227   002936  6ADA               	clrf	fsr2h,c
  2228   002938  2ADF               	incf	indf2,f,c
  2229   00293A  EFB1  F014         	goto	l986
  2230   00293E                     l4493:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2233   00293E  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2234   002940  6ED9               	movwf	fsr2l,c
  2235   002942  6ADA               	clrf	fsr2h,c
  2236   002944  006F FF7F FFF6     	movff	indf2,tblptrl
  2237   00294A                     	if	1	;There is more than 1 active tblptr byte
  2238   00294A  0E10               	movlw	high __smallconst
  2239   00294C  6EF7               	movwf	tblptrh,c
  2240   00294E                     	endif
  2241   00294E                     	if	0	;tblptru may be non-zero
  2242   00294E                     	endif
  2243   00294E                     	if	0	;tblptru may be non-zero
  2244   00294E                     	endif
  2245   00294E  0008               	tblrd		*
  2246   002950  50F5               	movf	tablat,w,c
  2247   002952  6E01               	movwf	fputc@c^0,c
  2248   002954  6A02               	clrf	(fputc@c+1)^0,c
  2249   002956  C036  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2250   00295A  ECE3  F01B         	call	_fputc	;wreg free
  2251   00295E  EF99  F014         	goto	l4489
  2252   002962                     l986:
  2253   002962  0012               	return		;funcret
  2254   002964                     __end_of_vfpfcnvrt:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _read_prec_or_width *****************
  2258 ;; Defined at:
  2259 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2262 ;;		 -> vfprintf@cfmt(1), 
  2263 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2264 ;;		 -> sprintf@ap(1), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  c               1    8[COMRAM] unsigned char 
  2267 ;;  n               2    9[COMRAM] int 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    6[COMRAM] int 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:        5 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 1
  2284 ;; This function calls:
  2285 ;;		___wmul
  2286 ;; This function is called by:
  2287 ;;		_vfpfcnvrt
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text6
  2292   003718                     __ptext6:
  2293                           	callstack 0
  2294   003718                     _read_prec_or_width:
  2295                           	callstack 26
  2296   003718                     
  2297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2298   003718  0E00               	movlw	0
  2299   00371A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2300   00371C  0E00               	movlw	0
  2301   00371E  6E0A               	movwf	read_prec_or_width@n^0,c
  2302   003720                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2304   003720  5007               	movf	read_prec_or_width@fmt^0,w,c
  2305   003722  6ED9               	movwf	fsr2l,c
  2306   003724  6ADA               	clrf	fsr2h,c
  2307   003726  006F FF7F FFF6     	movff	indf2,tblptrl
  2308   00372C                     	if	1	;There is more than 1 active tblptr byte
  2309   00372C  0E10               	movlw	high __smallconst
  2310   00372E  6EF7               	movwf	tblptrh,c
  2311   003730                     	endif
  2312   003730                     	if	0	;tblptru may be non-zero
  2313   003730                     	endif
  2314   003730                     	if	0	;tblptru may be non-zero
  2315   003730                     	endif
  2316   003730  0008               	tblrd		*
  2317   003732  50F5               	movf	tablat,w,c
  2318   003734  0A2A               	xorlw	42
  2319   003736  A4D8               	btfss	status,2,c
  2320   003738  EFA0  F01B         	goto	u4011
  2321   00373C  EFA2  F01B         	goto	u4010
  2322   003740                     u4011:
  2323   003740  EFCA  F01B         	goto	l3645
  2324   003744                     u4010:
  2325   003744                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2327   003744  5007               	movf	read_prec_or_width@fmt^0,w,c
  2328   003746  6ED9               	movwf	fsr2l,c
  2329   003748  6ADA               	clrf	fsr2h,c
  2330   00374A  2ADF               	incf	indf2,f,c
  2331   00374C                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2333   00374C  5008               	movf	read_prec_or_width@ap^0,w,c
  2334   00374E  6ED9               	movwf	fsr2l,c
  2335   003750  6ADA               	clrf	fsr2h,c
  2336   003752  0E02               	movlw	2
  2337   003754  26DF               	addwf	indf2,f,c
  2338   003756  5CDF               	subwf	indf2,w,c
  2339   003758  6ED9               	movwf	fsr2l,c
  2340   00375A  6ADA               	clrf	fsr2h,c
  2341   00375C  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  2342   003762  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2345   003768  EFDE  F01B         	goto	l974
  2346   00376C                     l3641:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2349   00376C  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2350   003770  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2351   003774  0E00               	movlw	0
  2352   003776  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2353   003778  0E0A               	movlw	10
  2354   00377A  6E03               	movwf	___wmul@multiplicand^0,c
  2355   00377C  ECA0  F01F         	call	___wmul	;wreg free
  2356   003780  5009               	movf	read_prec_or_width@c^0,w,c
  2357   003782  2401               	addwf	?___wmul^0,w,c
  2358   003784  6E0A               	movwf	read_prec_or_width@n^0,c
  2359   003786  0E00               	movlw	0
  2360   003788  2002               	addwfc	(?___wmul+1)^0,w,c
  2361   00378A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2362   00378C                     
  2363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2364   00378C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2365   00378E  6ED9               	movwf	fsr2l,c
  2366   003790  6ADA               	clrf	fsr2h,c
  2367   003792  2ADF               	incf	indf2,f,c
  2368   003794                     l3645:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2371   003794  5007               	movf	read_prec_or_width@fmt^0,w,c
  2372   003796  6ED9               	movwf	fsr2l,c
  2373   003798  6ADA               	clrf	fsr2h,c
  2374   00379A  006F FF7F FFF6     	movff	indf2,tblptrl
  2375   0037A0                     	if	1	;There is more than 1 active tblptr byte
  2376   0037A0  0E10               	movlw	high __smallconst
  2377   0037A2  6EF7               	movwf	tblptrh,c
  2378   0037A4                     	endif
  2379   0037A4                     	if	0	;tblptru may be non-zero
  2380   0037A4                     	endif
  2381   0037A4                     	if	0	;tblptru may be non-zero
  2382   0037A4                     	endif
  2383   0037A4  0008               	tblrd		*
  2384   0037A6  50F5               	movf	tablat,w,c
  2385   0037A8  0FD0               	addlw	208
  2386   0037AA  6E09               	movwf	read_prec_or_width@c^0,c
  2387   0037AC  0E09               	movlw	9
  2388   0037AE  6409               	cpfsgt	read_prec_or_width@c^0,c
  2389   0037B0  EFDC  F01B         	goto	u4021
  2390   0037B4  EFDE  F01B         	goto	u4020
  2391   0037B8                     u4021:
  2392   0037B8  EFB6  F01B         	goto	l3641
  2393   0037BC                     u4020:
  2394   0037BC                     l974:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2397   0037BC  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2398   0037C0  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2399   0037C4  0012               	return		;funcret
  2400   0037C6                     __end_of_read_prec_or_width:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function ___wmul *****************
  2404 ;; Defined at:
  2405 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  multiplier      2    0[COMRAM] unsigned int 
  2408 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  product         2    4[COMRAM] unsigned int 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2    0[COMRAM] unsigned int 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, prodl, prodh
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        6 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_read_prec_or_width
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text7
  2434   003F40                     __ptext7:
  2435                           	callstack 0
  2436   003F40                     ___wmul:
  2437                           	callstack 26
  2438   003F40  5001               	movf	___wmul@multiplier^0,w,c
  2439   003F42  0203               	mulwf	___wmul@multiplicand^0,c
  2440   003F44  006F FFCC  F005    	movff	prodl,___wmul@product
  2441   003F4A  006F FFD0  F006    	movff	prodh,___wmul@product+1
  2442   003F50  5001               	movf	___wmul@multiplier^0,w,c
  2443   003F52  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2444   003F54  50F3               	movf	243,w,c
  2445   003F56  2606               	addwf	(___wmul@product+1)^0,f,c
  2446   003F58  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2447   003F5A  0203               	mulwf	___wmul@multiplicand^0,c
  2448   003F5C  50F3               	movf	243,w,c
  2449   003F5E  2606               	addwf	(___wmul@product+1)^0,f,c
  2450   003F60  C005  F001         	movff	___wmul@product,?___wmul
  2451   003F64  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2452   003F68  0012               	return		;funcret
  2453   003F6A                     __end_of___wmul:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _efgtoa *****************
  2457 ;; Defined at:
  2458 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  2461 ;;		 -> sprintf@f(12), 
  2462 ;;  f               4   46[COMRAM] PTR struct _IO_FILE
  2463 ;;  c               1   50[COMRAM] unsigned char 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  u               4   40[BANK0 ] struct flui
  2466 ;;  g               4   34[BANK0 ] struct flui
  2467 ;;  l               4   29[BANK0 ] struct flui
  2468 ;;  h               4   25[BANK0 ] struct flui
  2469 ;;  ou              4   19[BANK0 ] struct flui
  2470 ;;  n               2   38[BANK0 ] int 
  2471 ;;  i               2   23[BANK0 ] int 
  2472 ;;  w               2   17[BANK0 ] int 
  2473 ;;  e               2   15[BANK0 ] int 
  2474 ;;  m               2   13[BANK0 ] int 
  2475 ;;  d               2   11[BANK0 ] int 
  2476 ;;  t               2    4[BANK0 ] int 
  2477 ;;  p               2    2[BANK0 ] int 
  2478 ;;  ne              2    0[BANK0 ] int 
  2479 ;;  sign            1   33[BANK0 ] unsigned char 
  2480 ;;  nmode           1   10[BANK0 ] unsigned char 
  2481 ;;  mode            1    9[BANK0 ] unsigned char 
  2482 ;;  pp              1    8[BANK0 ] unsigned char 
  2483 ;;  esign           1    0        unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:       52 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 4
  2500 ;; This function calls:
  2501 ;;		___fladd
  2502 ;;		___fldiv
  2503 ;;		___fleq
  2504 ;;		___flge
  2505 ;;		___flmul
  2506 ;;		___flneg
  2507 ;;		___flsub
  2508 ;;		___fltol
  2509 ;;		___fpclassifyf
  2510 ;;		_floorf
  2511 ;;		_labs
  2512 ;;		_memcpy
  2513 ;;		_pad
  2514 ;;		_strcpy
  2515 ;; This function is called by:
  2516 ;;		_vfpfcnvrt
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text8
  2521   001020                     __ptext8:
  2522                           	callstack 0
  2523   001020                     _efgtoa:
  2524                           	callstack 23
  2525   001020                     
  2526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2527   001020  0E00               	movlw	0
  2528   001022  0100               	movlb	0	; () banked
  2529   001024  6F81               	movwf	efgtoa@sign& (0+255),b
  2530   001026                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2533   001026  C02F  F082         	movff	efgtoa@f,efgtoa@g
  2534   00102A  C030  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2535   00102E  C031  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2536   001032  C032  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2537   001036                     
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2540   001036  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2541   001038  EF22  F008         	goto	u4590
  2542   00103C  EF20  F008         	goto	u4591
  2543   001040                     u4591:
  2544   001040  EF36  F008         	goto	l4215
  2545   001044                     u4590:
  2546   001044                     
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2549   001044  0E01               	movlw	1
  2550   001046  6F81               	movwf	efgtoa@sign& (0+255),b
  2551   001048                     
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2554   001048  C082  F001         	movff	efgtoa@g,___flneg@f1
  2555   00104C  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2556   001050  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2557   001054  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2558   001058  EC32  F01F         	call	___flneg	;wreg free
  2559   00105C  C001  F082         	movff	?___flneg,efgtoa@g
  2560   001060  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2561   001064  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2562   001068  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2563   00106C                     l4215:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2566   00106C  0E00               	movlw	0
  2567   00106E  0100               	movlb	0	; () banked
  2568   001070  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2569   001072  0E00               	movlw	0
  2570   001074  6F86               	movwf	efgtoa@n& (0+255),b
  2571   001076                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2574   001076  C059  F071         	movff	_width,efgtoa@w
  2575   00107A  C05A  F072         	movff	_width+1,efgtoa@w+1
  2576   00107E                     
  2577                           ; BSR set to: 0
  2578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2579   00107E  5181               	movf	efgtoa@sign& (0+255),w,b
  2580   001080  B4D8               	btfsc	status,2,c
  2581   001082  EF45  F008         	goto	u4601
  2582   001086  EF47  F008         	goto	u4600
  2583   00108A                     u4601:
  2584   00108A  EF5B  F008         	goto	l4229
  2585   00108E                     u4600:
  2586   00108E                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2589   00108E  5181               	movf	efgtoa@sign& (0+255),w,b
  2590   001090  A4D8               	btfss	status,2,c
  2591   001092  EF4D  F008         	goto	u4611
  2592   001096  EF4F  F008         	goto	u4610
  2593   00109A                     u4611:
  2594   00109A  EF55  F008         	goto	l4225
  2595   00109E                     u4610:
  2596   00109E                     
  2597                           ; BSR set to: 0
  2598   00109E  0E00               	movlw	0
  2599   0010A0  6F67               	movwf	(_efgtoa$1089+1)& (0+255),b
  2600   0010A2  0E2B               	movlw	43
  2601   0010A4  6F66               	movwf	_efgtoa$1089& (0+255),b
  2602   0010A6  EF59  F008         	goto	l4227
  2603   0010AA                     l4225:
  2604                           
  2605                           ; BSR set to: 0
  2606   0010AA  0E00               	movlw	0
  2607   0010AC  6F67               	movwf	(_efgtoa$1089+1)& (0+255),b
  2608   0010AE  0E2D               	movlw	45
  2609   0010B0  6F66               	movwf	_efgtoa$1089& (0+255),b
  2610   0010B2                     l4227:
  2611                           
  2612                           ; BSR set to: 0
  2613   0010B2  C066  F081         	movff	_efgtoa$1089,efgtoa@sign
  2614   0010B6                     l4229:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2618   0010B6  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2619   0010BA  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2620   0010BE  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2621   0010C2  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2622   0010C6  EC8A  F019         	call	___fpclassifyf	;wreg free
  2623   0010CA  0401               	decf	?___fpclassifyf^0,w,c
  2624   0010CC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2625   0010CE  A4D8               	btfss	status,2,c
  2626   0010D0  EF6C  F008         	goto	u4621
  2627   0010D4  EF6E  F008         	goto	u4620
  2628   0010D8                     u4621:
  2629   0010D8  EF9D  F008         	goto	l4247
  2630   0010DC                     u4620:
  2631   0010DC                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2633   0010DC  0100               	movlb	0	; () banked
  2634   0010DE  5181               	movf	efgtoa@sign& (0+255),w,b
  2635   0010E0  B4D8               	btfsc	status,2,c
  2636   0010E2  EF75  F008         	goto	u4631
  2637   0010E6  EF77  F008         	goto	u4630
  2638   0010EA                     u4631:
  2639   0010EA  EF80  F008         	goto	l4239
  2640   0010EE                     u4630:
  2641   0010EE                     
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2644   0010EE  C081  F100         	movff	efgtoa@sign,_dbuf
  2645   0010F2                     
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2648   0010F2  0771               	decf	efgtoa@w& (0+255),f,b
  2649   0010F4  A0D8               	btfss	status,0,c
  2650   0010F6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2651   0010F8                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2654   0010F8  0E00               	movlw	0
  2655   0010FA  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2656   0010FC  0E01               	movlw	1
  2657   0010FE  6F86               	movwf	efgtoa@n& (0+255),b
  2658   001100                     l4239:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2662   001100  0E00               	movlw	low _dbuf
  2663   001102  2586               	addwf	efgtoa@n& (0+255),w,b
  2664   001104  6E01               	movwf	strcpy@dest^0,c
  2665   001106  0E01               	movlw	high _dbuf
  2666   001108  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2667   00110A  6E02               	movwf	(strcpy@dest+1)^0,c
  2668   00110C  0E16               	movlw	low STR_3
  2669   00110E  6E03               	movwf	strcpy@src^0,c
  2670   001110  ECD5  F01E         	call	_strcpy	;wreg free
  2671   001114                     l4241:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2674   001114  0100               	movlb	0	; () banked
  2675   001116  0EFD               	movlw	253
  2676   001118  2771               	addwf	efgtoa@w& (0+255),f,b
  2677   00111A  0EFF               	movlw	255
  2678   00111C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2679   00111E                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2682   00111E  C02E  F00F         	movff	efgtoa@fp,pad@fp
  2683   001122  0E00               	movlw	low _dbuf
  2684   001124  6E10               	movwf	pad@buf^0,c
  2685   001126  0E01               	movlw	high _dbuf
  2686   001128  6E11               	movwf	(pad@buf+1)^0,c
  2687   00112A  C071  F012         	movff	efgtoa@w,pad@p
  2688   00112E  C072  F013         	movff	efgtoa@w+1,pad@p+1
  2689   001132  EC72  F01D         	call	_pad	;wreg free
  2690   001136  EF05  F00D         	goto	l929
  2691   00113A                     l4247:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2694   00113A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2695   00113E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2696   001142  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2697   001146  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2698   00114A  EC8A  F019         	call	___fpclassifyf	;wreg free
  2699   00114E  5001               	movf	?___fpclassifyf^0,w,c
  2700   001150  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2701   001152  A4D8               	btfss	status,2,c
  2702   001154  EFAE  F008         	goto	u4641
  2703   001158  EFB0  F008         	goto	u4640
  2704   00115C                     u4641:
  2705   00115C  EFCE  F008         	goto	l4265
  2706   001160                     u4640:
  2707   001160                     
  2708                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2709   001160  0100               	movlb	0	; () banked
  2710   001162  5181               	movf	efgtoa@sign& (0+255),w,b
  2711   001164  B4D8               	btfsc	status,2,c
  2712   001166  EFB7  F008         	goto	u4651
  2713   00116A  EFB9  F008         	goto	u4650
  2714   00116E                     u4651:
  2715   00116E  EFC2  F008         	goto	l4257
  2716   001172                     u4650:
  2717   001172                     
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2720   001172  C081  F100         	movff	efgtoa@sign,_dbuf
  2721   001176                     
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2724   001176  0771               	decf	efgtoa@w& (0+255),f,b
  2725   001178  A0D8               	btfss	status,0,c
  2726   00117A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2727   00117C                     
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2730   00117C  0E00               	movlw	0
  2731   00117E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2732   001180  0E01               	movlw	1
  2733   001182  6F86               	movwf	efgtoa@n& (0+255),b
  2734   001184                     l4257:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2738   001184  0E00               	movlw	low _dbuf
  2739   001186  2586               	addwf	efgtoa@n& (0+255),w,b
  2740   001188  6E01               	movwf	strcpy@dest^0,c
  2741   00118A  0E01               	movlw	high _dbuf
  2742   00118C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2743   00118E  6E02               	movwf	(strcpy@dest+1)^0,c
  2744   001190  0E1A               	movlw	low STR_6
  2745   001192  6E03               	movwf	strcpy@src^0,c
  2746   001194  ECD5  F01E         	call	_strcpy	;wreg free
  2747   001198  EF8A  F008         	goto	l4241
  2748   00119C                     l4265:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2751   00119C  0E00               	movlw	0
  2752   00119E  0100               	movlb	0	; () banked
  2753   0011A0  6F88               	movwf	efgtoa@u& (0+255),b
  2754   0011A2  0E00               	movlw	0
  2755   0011A4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2756   0011A6  0E80               	movlw	128
  2757   0011A8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2758   0011AA  0E3F               	movlw	63
  2759   0011AC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2762   0011AE  0E00               	movlw	0
  2763   0011B0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2764   0011B2  0E00               	movlw	0
  2765   0011B4  6F6F               	movwf	efgtoa@e& (0+255),b
  2766   0011B6                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2769   0011B6  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2770   0011BA  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2771   0011BE  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2772   0011C2  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2773   0011C6  0E00               	movlw	0
  2774   0011C8  6E05               	movwf	___fleq@ff2^0,c
  2775   0011CA  0E00               	movlw	0
  2776   0011CC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2777   0011CE  0E00               	movlw	0
  2778   0011D0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2779   0011D2  0E00               	movlw	0
  2780   0011D4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2781   0011D6  EC8F  F01C         	call	___fleq	;wreg free
  2782   0011DA  B0D8               	btfsc	status,0,c
  2783   0011DC  EFF2  F008         	goto	u4661
  2784   0011E0  EFF4  F008         	goto	u4660
  2785   0011E4                     u4661:
  2786   0011E4  EFD3  F009         	goto	l932
  2787   0011E8                     u4660:
  2788   0011E8  EF01  F009         	goto	l4273
  2789   0011EC                     l934:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2792   0011EC  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2793   0011F0  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2794   0011F4  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2795   0011F8  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2796   0011FC                     
  2797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2798   0011FC  0100               	movlb	0	; () banked
  2799   0011FE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2800   001200  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2801   001202                     l4273:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2804   001202  C088  F001         	movff	efgtoa@u,___flmul@b
  2805   001206  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2806   00120A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2807   00120E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2808   001212  0E00               	movlw	0
  2809   001214  6E05               	movwf	___flmul@a^0,c
  2810   001216  0E00               	movlw	0
  2811   001218  6E06               	movwf	(___flmul@a+1)^0,c
  2812   00121A  0E20               	movlw	32
  2813   00121C  6E07               	movwf	(___flmul@a+2)^0,c
  2814   00121E  0E41               	movlw	65
  2815   001220  6E08               	movwf	(___flmul@a+3)^0,c
  2816   001222  EC66  F00F         	call	___flmul	;wreg free
  2817   001226  C001  F073         	movff	?___flmul,efgtoa@ou
  2818   00122A  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  2819   00122E  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  2820   001232  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  2821   001236  0100               	movlb	0	; () banked
  2822   001238  5173               	movf	efgtoa@ou& (0+255),w,b
  2823   00123A  5D82               	subwf	efgtoa@g& (0+255),w,b
  2824   00123C  6E01               	movwf	labs@a^0,c
  2825   00123E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2826   001240  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2827   001242  6E02               	movwf	(labs@a+1)^0,c
  2828   001244  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2829   001246  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2830   001248  6E03               	movwf	(labs@a+2)^0,c
  2831   00124A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2832   00124C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2833   00124E  6E04               	movwf	(labs@a+3)^0,c
  2834   001250  EC66  F01E         	call	_labs	;wreg free
  2835   001254  BE04               	btfsc	(?_labs+3)^0,7,c
  2836   001256  EF38  F009         	goto	u4671
  2837   00125A  5004               	movf	(?_labs+3)^0,w,c
  2838   00125C  1003               	iorwf	(?_labs+2)^0,w,c
  2839   00125E  1002               	iorwf	(?_labs+1)^0,w,c
  2840   001260  E109               	bnz	u4670
  2841   001262  0E02               	movlw	2
  2842   001264  5C01               	subwf	?_labs^0,w,c
  2843   001266  A0D8               	btfss	status,0,c
  2844   001268  EF38  F009         	goto	u4671
  2845   00126C  EF3A  F009         	goto	u4670
  2846   001270                     u4671:
  2847   001270  EFF6  F008         	goto	l934
  2848   001274                     u4670:
  2849   001274  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  2850   001278  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  2851   00127C  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  2852   001280  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  2853   001284  C082  F01E         	movff	efgtoa@g,___flge@ff2
  2854   001288  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  2855   00128C  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  2856   001290  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  2857   001294  EC08  F019         	call	___flge	;wreg free
  2858   001298  A0D8               	btfss	status,0,c
  2859   00129A  EF51  F009         	goto	u4681
  2860   00129E  EF53  F009         	goto	u4680
  2861   0012A2                     u4681:
  2862   0012A2  EFF6  F008         	goto	l934
  2863   0012A6                     u4680:
  2864   0012A6                     
  2865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2866   0012A6  0100               	movlb	0	; () banked
  2867   0012A8  5188               	movf	efgtoa@u& (0+255),w,b
  2868   0012AA  5D82               	subwf	efgtoa@g& (0+255),w,b
  2869   0012AC  6E01               	movwf	labs@a^0,c
  2870   0012AE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2871   0012B0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2872   0012B2  6E02               	movwf	(labs@a+1)^0,c
  2873   0012B4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2874   0012B6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2875   0012B8  6E03               	movwf	(labs@a+2)^0,c
  2876   0012BA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2877   0012BC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2878   0012BE  6E04               	movwf	(labs@a+3)^0,c
  2879   0012C0  EC66  F01E         	call	_labs	;wreg free
  2880   0012C4  BE04               	btfsc	(?_labs+3)^0,7,c
  2881   0012C6  EF72  F009         	goto	u4690
  2882   0012CA  5004               	movf	(?_labs+3)^0,w,c
  2883   0012CC  1003               	iorwf	(?_labs+2)^0,w,c
  2884   0012CE  1002               	iorwf	(?_labs+1)^0,w,c
  2885   0012D0  E107               	bnz	u4691
  2886   0012D2  0E02               	movlw	2
  2887   0012D4  5C01               	subwf	?_labs^0,w,c
  2888   0012D6  B0D8               	btfsc	status,0,c
  2889   0012D8  EF70  F009         	goto	u4691
  2890   0012DC  EF72  F009         	goto	u4690
  2891   0012E0                     u4691:
  2892   0012E0  EFBA  F009         	goto	l4291
  2893   0012E4                     u4690:
  2894   0012E4                     l4281:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2897   0012E4  C088  F082         	movff	efgtoa@u,efgtoa@g
  2898   0012E8  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2899   0012EC  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2900   0012F0  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  2903   0012F4  EFD3  F009         	goto	l932
  2904   0012F8                     l4283:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2907   0012F8  C088  F001         	movff	efgtoa@u,___fldiv@b
  2908   0012FC  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2909   001300  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2910   001304  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2911   001308  0E00               	movlw	0
  2912   00130A  6E05               	movwf	___fldiv@a^0,c
  2913   00130C  0E00               	movlw	0
  2914   00130E  6E06               	movwf	(___fldiv@a+1)^0,c
  2915   001310  0E20               	movlw	32
  2916   001312  6E07               	movwf	(___fldiv@a+2)^0,c
  2917   001314  0E41               	movlw	65
  2918   001316  6E08               	movwf	(___fldiv@a+3)^0,c
  2919   001318  EC8D  F011         	call	___fldiv	;wreg free
  2920   00131C  C001  F088         	movff	?___fldiv,efgtoa@u
  2921   001320  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2922   001324  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2923   001328  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2924   00132C                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  2926   00132C  0100               	movlb	0	; () banked
  2927   00132E  076F               	decf	efgtoa@e& (0+255),f,b
  2928   001330  A0D8               	btfss	status,0,c
  2929   001332  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2930   001334                     
  2931                           ; BSR set to: 0
  2932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2933   001334  5188               	movf	efgtoa@u& (0+255),w,b
  2934   001336  5D82               	subwf	efgtoa@g& (0+255),w,b
  2935   001338  6E01               	movwf	labs@a^0,c
  2936   00133A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2937   00133C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2938   00133E  6E02               	movwf	(labs@a+1)^0,c
  2939   001340  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2940   001342  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2941   001344  6E03               	movwf	(labs@a+2)^0,c
  2942   001346  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2943   001348  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2944   00134A  6E04               	movwf	(labs@a+3)^0,c
  2945   00134C  EC66  F01E         	call	_labs	;wreg free
  2946   001350  BE04               	btfsc	(?_labs+3)^0,7,c
  2947   001352  EFB8  F009         	goto	u4700
  2948   001356  5004               	movf	(?_labs+3)^0,w,c
  2949   001358  1003               	iorwf	(?_labs+2)^0,w,c
  2950   00135A  1002               	iorwf	(?_labs+1)^0,w,c
  2951   00135C  E107               	bnz	u4701
  2952   00135E  0E02               	movlw	2
  2953   001360  5C01               	subwf	?_labs^0,w,c
  2954   001362  B0D8               	btfsc	status,0,c
  2955   001364  EFB6  F009         	goto	u4701
  2956   001368  EFB8  F009         	goto	u4700
  2957   00136C                     u4701:
  2958   00136C  EFBA  F009         	goto	l4291
  2959   001370                     u4700:
  2960   001370  EF72  F009         	goto	l4281
  2961   001374                     l4291:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2964   001374  C082  F01A         	movff	efgtoa@g,___flge@ff1
  2965   001378  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2966   00137C  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2967   001380  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2968   001384  C088  F01E         	movff	efgtoa@u,___flge@ff2
  2969   001388  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2970   00138C  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2971   001390  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2972   001394  EC08  F019         	call	___flge	;wreg free
  2973   001398  A0D8               	btfss	status,0,c
  2974   00139A  EFD1  F009         	goto	u4711
  2975   00139E  EFD3  F009         	goto	u4710
  2976   0013A2                     u4711:
  2977   0013A2  EF7C  F009         	goto	l4283
  2978   0013A6                     u4710:
  2979   0013A6                     l932:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2982   0013A6  C033  F069         	movff	efgtoa@c,efgtoa@mode
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2985   0013AA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2986   0013AE                     
  2987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2988   0013AE  BE5C               	btfsc	(_prec+1)^0,7,c
  2989   0013B0  EFDC  F009         	goto	u4721
  2990   0013B4  EFDE  F009         	goto	u4720
  2991   0013B8                     u4721:
  2992   0013B8  EFE4  F009         	goto	l4297
  2993   0013BC                     u4720:
  2994   0013BC  C05B  F062         	movff	_prec,efgtoa@p
  2995   0013C0  C05C  F063         	movff	_prec+1,efgtoa@p+1
  2996   0013C4  EFE9  F009         	goto	l4299
  2997   0013C8                     l4297:
  2998   0013C8  0E00               	movlw	0
  2999   0013CA  0100               	movlb	0	; () banked
  3000   0013CC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3001   0013CE  0E06               	movlw	6
  3002   0013D0  6F62               	movwf	efgtoa@p& (0+255),b
  3003   0013D2                     l4299:
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3006   0013D2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3007   0013D6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3008   0013DA                     
  3009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3010   0013DA  0100               	movlb	0	; () banked
  3011   0013DC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3012   0013DE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3013   0013E0                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3016   0013E0  0E66               	movlw	102
  3017   0013E2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3018   0013E4  A4D8               	btfss	status,2,c
  3019   0013E6  EFF7  F009         	goto	u4731
  3020   0013EA  EFF9  F009         	goto	u4730
  3021   0013EE                     u4731:
  3022   0013EE  EF19  F00A         	goto	l4313
  3023   0013F2                     u4730:
  3024   0013F2                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3027   0013F2  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3028   0013F4  EF00  F00A         	goto	u4740
  3029   0013F8  EFFE  F009         	goto	u4741
  3030   0013FC                     u4741:
  3031   0013FC  EF0C  F00A         	goto	l4309
  3032   001400                     u4740:
  3033   001400                     
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3036   001400  0E00               	movlw	0
  3037   001402  6F88               	movwf	efgtoa@u& (0+255),b
  3038   001404  0E00               	movlw	0
  3039   001406  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3040   001408  0E80               	movlw	128
  3041   00140A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3042   00140C  0E3F               	movlw	63
  3043   00140E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3046   001410  0E00               	movlw	0
  3047   001412  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3048   001414  0E00               	movlw	0
  3049   001416  6F6F               	movwf	efgtoa@e& (0+255),b
  3050   001418                     l4309:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3054   001418  0E67               	movlw	103
  3055   00141A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3056   00141C  B4D8               	btfsc	status,2,c
  3057   00141E  EF13  F00A         	goto	u4751
  3058   001422  EF15  F00A         	goto	u4750
  3059   001426                     u4751:
  3060   001426  EF19  F00A         	goto	l4313
  3061   00142A                     u4750:
  3062   00142A                     
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3065   00142A  516F               	movf	efgtoa@e& (0+255),w,b
  3066   00142C  276D               	addwf	efgtoa@m& (0+255),f,b
  3067   00142E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3068   001430  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3069   001432                     l4313:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3073   001432  0E00               	movlw	0
  3074   001434  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3075   001436  0E00               	movlw	0
  3076   001438  6F77               	movwf	efgtoa@i& (0+255),b
  3077   00143A                     
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3080   00143A  C082  F079         	movff	efgtoa@g,efgtoa@h
  3081   00143E  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3082   001442  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3083   001446  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3084   00144A                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3087   00144A  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3088   00144E  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3089   001452  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3090   001456  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3093   00145A  EFAA  F00A         	goto	l4327
  3094   00145E                     l4319:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3098   00145E  C079  F001         	movff	efgtoa@h,___fldiv@b
  3099   001462  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3100   001466  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3101   00146A  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3102   00146E  C088  F005         	movff	efgtoa@u,___fldiv@a
  3103   001472  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3104   001476  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3105   00147A  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3106   00147E  EC8D  F011         	call	___fldiv	;wreg free
  3107   001482  C001  F01A         	movff	?___fldiv,floorf@x
  3108   001486  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3109   00148A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3110   00148E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3111   001492  ECE5  F015         	call	_floorf	;wreg free
  3112   001496  C01A  F07D         	movff	?_floorf,efgtoa@l
  3113   00149A  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3114   00149E  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3115   0014A2  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3118   0014A6  C07D  F01A         	movff	efgtoa@l,___fltol@f1
  3119   0014AA  C07E  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  3120   0014AE  C07F  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  3121   0014B2  C080  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  3122   0014B6  EC85  F018         	call	___fltol	;wreg free
  3123   0014BA  C01A  F06B         	movff	?___fltol,efgtoa@d
  3124   0014BE  C01B  F06C         	movff	?___fltol+1,efgtoa@d+1
  3125   0014C2                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3127   0014C2  C079  F01A         	movff	efgtoa@h,___flsub@b
  3128   0014C6  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3129   0014CA  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3130   0014CE  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3131   0014D2  C07D  F005         	movff	efgtoa@l,___flmul@a
  3132   0014D6  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3133   0014DA  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3134   0014DE  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3135   0014E2  C088  F001         	movff	efgtoa@u,___flmul@b
  3136   0014E6  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3137   0014EA  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3138   0014EE  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3139   0014F2  EC66  F00F         	call	___flmul	;wreg free
  3140   0014F6  C001  F01E         	movff	?___flmul,___flsub@a
  3141   0014FA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3142   0014FE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3143   001502  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3144   001506  EC91  F01E         	call	___flsub	;wreg free
  3145   00150A  C01A  F079         	movff	?___flsub,efgtoa@h
  3146   00150E  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3147   001512  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3148   001516  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3149   00151A                     
  3150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3151   00151A  C088  F001         	movff	efgtoa@u,___fldiv@b
  3152   00151E  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3153   001522  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3154   001526  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3155   00152A  0E00               	movlw	0
  3156   00152C  6E05               	movwf	___fldiv@a^0,c
  3157   00152E  0E00               	movlw	0
  3158   001530  6E06               	movwf	(___fldiv@a+1)^0,c
  3159   001532  0E20               	movlw	32
  3160   001534  6E07               	movwf	(___fldiv@a+2)^0,c
  3161   001536  0E41               	movlw	65
  3162   001538  6E08               	movwf	(___fldiv@a+3)^0,c
  3163   00153A  EC8D  F011         	call	___fldiv	;wreg free
  3164   00153E  C001  F088         	movff	?___fldiv,efgtoa@u
  3165   001542  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3166   001546  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3167   00154A  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3168   00154E                     
  3169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3170   00154E  0100               	movlb	0	; () banked
  3171   001550  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3172   001552  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3173   001554                     l4327:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3177   001554  516D               	movf	efgtoa@m& (0+255),w,b
  3178   001556  5D77               	subwf	efgtoa@i& (0+255),w,b
  3179   001558  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3180   00155A  0A80               	xorlw	128
  3181   00155C  6E34               	movwf	??_efgtoa^0,c
  3182   00155E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3183   001560  0A80               	xorlw	128
  3184   001562  5834               	subwfb	??_efgtoa^0,w,c
  3185   001564  A0D8               	btfss	status,0,c
  3186   001566  EFB7  F00A         	goto	u4761
  3187   00156A  EFB9  F00A         	goto	u4760
  3188   00156E                     u4761:
  3189   00156E  EF2F  F00A         	goto	l4319
  3190   001572                     u4760:
  3191   001572                     
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3194   001572  C088  F001         	movff	efgtoa@u,___flmul@b
  3195   001576  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3196   00157A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3197   00157E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3198   001582  0E00               	movlw	0
  3199   001584  6E05               	movwf	___flmul@a^0,c
  3200   001586  0E00               	movlw	0
  3201   001588  6E06               	movwf	(___flmul@a+1)^0,c
  3202   00158A  0EA0               	movlw	160
  3203   00158C  6E07               	movwf	(___flmul@a+2)^0,c
  3204   00158E  0E40               	movlw	64
  3205   001590  6E08               	movwf	(___flmul@a+3)^0,c
  3206   001592  EC66  F00F         	call	___flmul	;wreg free
  3207   001596  C001  F07D         	movff	?___flmul,efgtoa@l
  3208   00159A  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  3209   00159E  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  3210   0015A2  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  3211   0015A6                     
  3212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3213   0015A6  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3214   0015AA  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3215   0015AE  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3216   0015B2  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3217   0015B6  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  3218   0015BA  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3219   0015BE  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3220   0015C2  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3221   0015C6  EC08  F019         	call	___flge	;wreg free
  3222   0015CA  B0D8               	btfsc	status,0,c
  3223   0015CC  EFEA  F00A         	goto	u4771
  3224   0015D0  EFEC  F00A         	goto	u4770
  3225   0015D4                     u4771:
  3226   0015D4  EFF7  F00A         	goto	l4335
  3227   0015D8                     u4770:
  3228   0015D8                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3230   0015D8  0E00               	movlw	0
  3231   0015DA  0100               	movlb	0	; () banked
  3232   0015DC  6F7D               	movwf	efgtoa@l& (0+255),b
  3233   0015DE  0E00               	movlw	0
  3234   0015E0  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3235   0015E2  0E00               	movlw	0
  3236   0015E4  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3237   0015E6  0E00               	movlw	0
  3238   0015E8  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3241   0015EA  EF20  F00B         	goto	l4341
  3242   0015EE                     l4335:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3245   0015EE  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3246   0015F2  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3247   0015F6  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3248   0015FA  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3249   0015FE  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3250   001602  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3251   001606  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3252   00160A  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3253   00160E  EC8F  F01C         	call	___fleq	;wreg free
  3254   001612  A0D8               	btfss	status,0,c
  3255   001614  EF0E  F00B         	goto	u4781
  3256   001618  EF10  F00B         	goto	u4780
  3257   00161C                     u4781:
  3258   00161C  EF20  F00B         	goto	l4341
  3259   001620                     u4780:
  3260   001620  0100               	movlb	0	; () banked
  3261   001622  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3262   001624  EF16  F00B         	goto	u4791
  3263   001628  EF18  F00B         	goto	u4790
  3264   00162C                     u4791:
  3265   00162C  EF20  F00B         	goto	l4341
  3266   001630                     u4790:
  3267   001630                     
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3270   001630  0E00               	movlw	0
  3271   001632  6F7D               	movwf	efgtoa@l& (0+255),b
  3272   001634  0E00               	movlw	0
  3273   001636  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3274   001638  0E00               	movlw	0
  3275   00163A  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3276   00163C  0E00               	movlw	0
  3277   00163E  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3278   001640                     l4341:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3281   001640  C082  F001         	movff	efgtoa@g,___fladd@b
  3282   001644  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3283   001648  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3284   00164C  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3285   001650  C07D  F005         	movff	efgtoa@l,___fladd@a
  3286   001654  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3287   001658  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3288   00165C  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  3289   001660  EC06  F00D         	call	___fladd	;wreg free
  3290   001664  C001  F079         	movff	?___fladd,efgtoa@h
  3291   001668  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  3292   00166C  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  3293   001670  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  3294   001674                     
  3295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3296   001674  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3297   001678  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3298   00167C  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3299   001680  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3300   001684  0E00               	movlw	0
  3301   001686  6E05               	movwf	___flmul@a^0,c
  3302   001688  0E00               	movlw	0
  3303   00168A  6E06               	movwf	(___flmul@a+1)^0,c
  3304   00168C  0E20               	movlw	32
  3305   00168E  6E07               	movwf	(___flmul@a+2)^0,c
  3306   001690  0E41               	movlw	65
  3307   001692  6E08               	movwf	(___flmul@a+3)^0,c
  3308   001694  C073  F001         	movff	efgtoa@ou,___flmul@b
  3309   001698  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3310   00169C  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3311   0016A0  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3312   0016A4  EC66  F00F         	call	___flmul	;wreg free
  3313   0016A8  C001  F01E         	movff	?___flmul,___flge@ff2
  3314   0016AC  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3315   0016B0  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3316   0016B4  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3317   0016B8  EC08  F019         	call	___flge	;wreg free
  3318   0016BC  A0D8               	btfss	status,0,c
  3319   0016BE  EF63  F00B         	goto	u4801
  3320   0016C2  EF65  F00B         	goto	u4800
  3321   0016C6                     u4801:
  3322   0016C6  EF8E  F00B         	goto	l4353
  3323   0016CA                     u4800:
  3324   0016CA                     
  3325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3326   0016CA  0100               	movlb	0	; () banked
  3327   0016CC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3328   0016CE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3329   0016D0                     
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3332   0016D0  C073  F001         	movff	efgtoa@ou,___flmul@b
  3333   0016D4  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3334   0016D8  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3335   0016DC  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3336   0016E0  0E00               	movlw	0
  3337   0016E2  6E05               	movwf	___flmul@a^0,c
  3338   0016E4  0E00               	movlw	0
  3339   0016E6  6E06               	movwf	(___flmul@a+1)^0,c
  3340   0016E8  0E20               	movlw	32
  3341   0016EA  6E07               	movwf	(___flmul@a+2)^0,c
  3342   0016EC  0E41               	movlw	65
  3343   0016EE  6E08               	movwf	(___flmul@a+3)^0,c
  3344   0016F0  EC66  F00F         	call	___flmul	;wreg free
  3345   0016F4  C001  F073         	movff	?___flmul,efgtoa@ou
  3346   0016F8  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3347   0016FC  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3348   001700  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3349   001704                     
  3350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3351   001704  0E66               	movlw	102
  3352   001706  0100               	movlb	0	; () banked
  3353   001708  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3354   00170A  A4D8               	btfss	status,2,c
  3355   00170C  EF8A  F00B         	goto	u4811
  3356   001710  EF8C  F00B         	goto	u4810
  3357   001714                     u4811:
  3358   001714  EF8E  F00B         	goto	l4353
  3359   001718                     u4810:
  3360   001718                     
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3363   001718  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3364   00171A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3365   00171C                     l4353:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3368   00171C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3369   001720  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3370   001724  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3371   001728  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3372   00172C                     
  3373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3374   00172C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3375   001730  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3376   001734                     
  3377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3378   001734  0E00               	movlw	0
  3379   001736  0100               	movlb	0	; () banked
  3380   001738  6F68               	movwf	efgtoa@pp& (0+255),b
  3381   00173A                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3384   00173A  0E00               	movlw	0
  3385   00173C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3386   00173E  0E00               	movlw	0
  3387   001740  6F64               	movwf	efgtoa@t& (0+255),b
  3388   001742                     
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3391   001742  0E00               	movlw	0
  3392   001744  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3393   001746  0E00               	movlw	0
  3394   001748  6F77               	movwf	efgtoa@i& (0+255),b
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3397   00174A  EF8C  F00C         	goto	l4403
  3398   00174E                     l4363:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3402   00174E  C079  F001         	movff	efgtoa@h,___fldiv@b
  3403   001752  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3404   001756  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3405   00175A  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3406   00175E  C088  F005         	movff	efgtoa@u,___fldiv@a
  3407   001762  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3408   001766  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3409   00176A  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3410   00176E  EC8D  F011         	call	___fldiv	;wreg free
  3411   001772  C001  F01A         	movff	?___fldiv,floorf@x
  3412   001776  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3413   00177A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3414   00177E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3415   001782  ECE5  F015         	call	_floorf	;wreg free
  3416   001786  C01A  F07D         	movff	?_floorf,efgtoa@l
  3417   00178A  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3418   00178E  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3419   001792  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3422   001796  C07D  F01A         	movff	efgtoa@l,___fltol@f1
  3423   00179A  C07E  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  3424   00179E  C07F  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  3425   0017A2  C080  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  3426   0017A6  EC85  F018         	call	___fltol	;wreg free
  3427   0017AA  BE1B               	btfsc	(?___fltol+1)^0,7,c
  3428   0017AC  EFE3  F00B         	goto	u4820
  3429   0017B0  501B               	movf	(?___fltol+1)^0,w,c
  3430   0017B2  E107               	bnz	u4821
  3431   0017B4  0E0A               	movlw	10
  3432   0017B6  5C1A               	subwf	?___fltol^0,w,c
  3433   0017B8  B0D8               	btfsc	status,0,c
  3434   0017BA  EFE1  F00B         	goto	u4821
  3435   0017BE  EFE3  F00B         	goto	u4820
  3436   0017C2                     u4821:
  3437   0017C2  EFF3  F00B         	goto	l4367
  3438   0017C6                     u4820:
  3439   0017C6  C07D  F01A         	movff	efgtoa@l,___fltol@f1
  3440   0017CA  C07E  F01B         	movff	efgtoa@l+1,___fltol@f1+1
  3441   0017CE  C07F  F01C         	movff	efgtoa@l+2,___fltol@f1+2
  3442   0017D2  C080  F01D         	movff	efgtoa@l+3,___fltol@f1+3
  3443   0017D6  EC85  F018         	call	___fltol	;wreg free
  3444   0017DA  C01A  F06B         	movff	?___fltol,efgtoa@d
  3445   0017DE  C01B  F06C         	movff	?___fltol+1,efgtoa@d+1
  3446   0017E2  EFF8  F00B         	goto	l962
  3447   0017E6                     l4367:
  3448   0017E6  0E00               	movlw	0
  3449   0017E8  0100               	movlb	0	; () banked
  3450   0017EA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3451   0017EC  0E09               	movlw	9
  3452   0017EE  6F6B               	movwf	efgtoa@d& (0+255),b
  3453   0017F0                     l962:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3456   0017F0  0100               	movlb	0	; () banked
  3457   0017F2  5168               	movf	efgtoa@pp& (0+255),w,b
  3458   0017F4  A4D8               	btfss	status,2,c
  3459   0017F6  EFFF  F00B         	goto	u4831
  3460   0017FA  EF01  F00C         	goto	u4830
  3461   0017FE                     u4831:
  3462   0017FE  EF29  F00C         	goto	l4387
  3463   001802                     u4830:
  3464   001802                     
  3465                           ; BSR set to: 0
  3466   001802  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3467   001804  EF08  F00C         	goto	u4840
  3468   001808  EF06  F00C         	goto	u4841
  3469   00180C                     u4841:
  3470   00180C  EF29  F00C         	goto	l4387
  3471   001810                     u4840:
  3472   001810                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3475   001810  0E00               	movlw	low _dbuf
  3476   001812  2586               	addwf	efgtoa@n& (0+255),w,b
  3477   001814  6ED9               	movwf	fsr2l,c
  3478   001816  0E01               	movlw	high _dbuf
  3479   001818  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3480   00181A  6EDA               	movwf	fsr2h,c
  3481   00181C  0E2E               	movlw	46
  3482   00181E  6EDF               	movwf	indf2,c
  3483   001820                     
  3484                           ; BSR set to: 0
  3485   001820  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3486   001822  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3487   001824                     
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3490   001824  0771               	decf	efgtoa@w& (0+255),f,b
  3491   001826  A0D8               	btfss	status,0,c
  3492   001828  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3493   00182A                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3496   00182A  0E01               	movlw	1
  3497   00182C  6F68               	movwf	efgtoa@pp& (0+255),b
  3498   00182E  EF29  F00C         	goto	l4387
  3499   001832                     l4379:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3503   001832  0E00               	movlw	low _dbuf
  3504   001834  2586               	addwf	efgtoa@n& (0+255),w,b
  3505   001836  6ED9               	movwf	fsr2l,c
  3506   001838  0E01               	movlw	high _dbuf
  3507   00183A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3508   00183C  6EDA               	movwf	fsr2h,c
  3509   00183E  0E30               	movlw	48
  3510   001840  6EDF               	movwf	indf2,c
  3511   001842                     
  3512                           ; BSR set to: 0
  3513   001842  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3514   001844  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3515   001846                     
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3518   001846  0771               	decf	efgtoa@w& (0+255),f,b
  3519   001848  A0D8               	btfss	status,0,c
  3520   00184A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3521   00184C                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3524   00184C  0764               	decf	efgtoa@t& (0+255),f,b
  3525   00184E  A0D8               	btfss	status,0,c
  3526   001850  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3527   001852                     l4387:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3531   001852  5164               	movf	efgtoa@t& (0+255),w,b
  3532   001854  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3533   001856  A4D8               	btfss	status,2,c
  3534   001858  EF30  F00C         	goto	u4851
  3535   00185C  EF32  F00C         	goto	u4850
  3536   001860                     u4851:
  3537   001860  EF19  F00C         	goto	l4379
  3538   001864                     u4850:
  3539   001864                     
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3542   001864  0E00               	movlw	low _dbuf
  3543   001866  2586               	addwf	efgtoa@n& (0+255),w,b
  3544   001868  6ED9               	movwf	fsr2l,c
  3545   00186A  0E01               	movlw	high _dbuf
  3546   00186C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3547   00186E  6EDA               	movwf	fsr2h,c
  3548   001870  516B               	movf	efgtoa@d& (0+255),w,b
  3549   001872  0F30               	addlw	48
  3550   001874  6EDF               	movwf	indf2,c
  3551   001876                     
  3552                           ; BSR set to: 0
  3553   001876  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3554   001878  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3555   00187A                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3558   00187A  0771               	decf	efgtoa@w& (0+255),f,b
  3559   00187C  A0D8               	btfss	status,0,c
  3560   00187E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3561   001880                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3564   001880  C079  F01A         	movff	efgtoa@h,___flsub@b
  3565   001884  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3566   001888  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3567   00188C  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3568   001890  C07D  F005         	movff	efgtoa@l,___flmul@a
  3569   001894  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3570   001898  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3571   00189C  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3572   0018A0  C088  F001         	movff	efgtoa@u,___flmul@b
  3573   0018A4  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3574   0018A8  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3575   0018AC  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3576   0018B0  EC66  F00F         	call	___flmul	;wreg free
  3577   0018B4  C001  F01E         	movff	?___flmul,___flsub@a
  3578   0018B8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3579   0018BC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3580   0018C0  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3581   0018C4  EC91  F01E         	call	___flsub	;wreg free
  3582   0018C8  C01A  F079         	movff	?___flsub,efgtoa@h
  3583   0018CC  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3584   0018D0  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3585   0018D4  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3586   0018D8                     
  3587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3588   0018D8  C088  F001         	movff	efgtoa@u,___fldiv@b
  3589   0018DC  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3590   0018E0  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3591   0018E4  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3592   0018E8  0E00               	movlw	0
  3593   0018EA  6E05               	movwf	___fldiv@a^0,c
  3594   0018EC  0E00               	movlw	0
  3595   0018EE  6E06               	movwf	(___fldiv@a+1)^0,c
  3596   0018F0  0E20               	movlw	32
  3597   0018F2  6E07               	movwf	(___fldiv@a+2)^0,c
  3598   0018F4  0E41               	movlw	65
  3599   0018F6  6E08               	movwf	(___fldiv@a+3)^0,c
  3600   0018F8  EC8D  F011         	call	___fldiv	;wreg free
  3601   0018FC  C001  F088         	movff	?___fldiv,efgtoa@u
  3602   001900  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3603   001904  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3604   001908  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3605   00190C                     
  3606                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3607   00190C  0100               	movlb	0	; () banked
  3608   00190E  0760               	decf	efgtoa@ne& (0+255),f,b
  3609   001910  A0D8               	btfss	status,0,c
  3610   001912  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3611   001914                     
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3614   001914  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3615   001916  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3616   001918                     l4403:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3620   001918  516D               	movf	efgtoa@m& (0+255),w,b
  3621   00191A  5D77               	subwf	efgtoa@i& (0+255),w,b
  3622   00191C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3623   00191E  0A80               	xorlw	128
  3624   001920  6E34               	movwf	??_efgtoa^0,c
  3625   001922  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3626   001924  0A80               	xorlw	128
  3627   001926  5834               	subwfb	??_efgtoa^0,w,c
  3628   001928  B0D8               	btfsc	status,0,c
  3629   00192A  EF99  F00C         	goto	u4861
  3630   00192E  EF9B  F00C         	goto	u4860
  3631   001932                     u4861:
  3632   001932  EFA9  F00C         	goto	l4407
  3633   001936                     u4860:
  3634   001936                     
  3635                           ; BSR set to: 0
  3636   001936  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3637   001938  EFA7  F00C         	goto	u4871
  3638   00193C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3639   00193E  E109               	bnz	u4870
  3640   001940  0E4B               	movlw	75
  3641   001942  5D86               	subwf	efgtoa@n& (0+255),w,b
  3642   001944  A0D8               	btfss	status,0,c
  3643   001946  EFA7  F00C         	goto	u4871
  3644   00194A  EFA9  F00C         	goto	u4870
  3645   00194E                     u4871:
  3646   00194E  EFA7  F00B         	goto	l4363
  3647   001952                     u4870:
  3648   001952                     l4407:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3652   001952  0E00               	movlw	0
  3653   001954  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3654   001956  0E4F               	movlw	79
  3655   001958  6F77               	movwf	efgtoa@i& (0+255),b
  3656   00195A                     
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3659   00195A  0E00               	movlw	low _dbuf
  3660   00195C  2577               	addwf	efgtoa@i& (0+255),w,b
  3661   00195E  6ED9               	movwf	fsr2l,c
  3662   001960  0E01               	movlw	high _dbuf
  3663   001962  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3664   001964  6EDA               	movwf	fsr2h,c
  3665   001966  6ADF               	clrf	indf2,c
  3666   001968                     
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3669   001968  0E00               	movlw	low _dbuf
  3670   00196A  6E34               	movwf	??_efgtoa^0,c
  3671   00196C  0E01               	movlw	high _dbuf
  3672   00196E  6E35               	movwf	(??_efgtoa+1)^0,c
  3673   001970  5186               	movf	efgtoa@n& (0+255),w,b
  3674   001972  5E34               	subwf	??_efgtoa^0,f,c
  3675   001974  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3676   001976  5A35               	subwfb	(??_efgtoa+1)^0,f,c
  3677   001978  5177               	movf	efgtoa@i& (0+255),w,b
  3678   00197A  2434               	addwf	??_efgtoa^0,w,c
  3679   00197C  6E01               	movwf	memcpy@d1^0,c
  3680   00197E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3681   001980  2035               	addwfc	(??_efgtoa+1)^0,w,c
  3682   001982  6E02               	movwf	(memcpy@d1+1)^0,c
  3683   001984  0E00               	movlw	low _dbuf
  3684   001986  6E03               	movwf	memcpy@s1^0,c
  3685   001988  0E01               	movlw	high _dbuf
  3686   00198A  6E04               	movwf	(memcpy@s1+1)^0,c
  3687   00198C  C086  F005         	movff	efgtoa@n,memcpy@n
  3688   001990  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3689   001994  EC39  F01E         	call	_memcpy	;wreg free
  3690   001998                     
  3691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3692   001998  0100               	movlb	0	; () banked
  3693   00199A  5186               	movf	efgtoa@n& (0+255),w,b
  3694   00199C  5D77               	subwf	efgtoa@i& (0+255),w,b
  3695   00199E  6F86               	movwf	efgtoa@n& (0+255),b
  3696   0019A0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3697   0019A2  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3698   0019A4  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3699   0019A6                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3702   0019A6  5181               	movf	efgtoa@sign& (0+255),w,b
  3703   0019A8  A4D8               	btfss	status,2,c
  3704   0019AA  EFD9  F00C         	goto	u4881
  3705   0019AE  EFDC  F00C         	goto	u4880
  3706   0019B2                     u4881:
  3707   0019B2  0E01               	movlw	1
  3708   0019B4  EFDD  F00C         	goto	u4890
  3709   0019B8                     u4880:
  3710   0019B8  0E00               	movlw	0
  3711   0019BA                     u4890:
  3712   0019BA  6F77               	movwf	efgtoa@i& (0+255),b
  3713   0019BC  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3714   0019BE                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3717   0019BE  5181               	movf	efgtoa@sign& (0+255),w,b
  3718   0019C0  B4D8               	btfsc	status,2,c
  3719   0019C2  EFE5  F00C         	goto	u4901
  3720   0019C6  EFE7  F00C         	goto	u4900
  3721   0019CA                     u4901:
  3722   0019CA  EFF3  F00C         	goto	l4421
  3723   0019CE                     u4900:
  3724   0019CE                     
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3727   0019CE  0786               	decf	efgtoa@n& (0+255),f,b
  3728   0019D0  A0D8               	btfss	status,0,c
  3729   0019D2  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3730   0019D4  0E00               	movlw	low _dbuf
  3731   0019D6  2586               	addwf	efgtoa@n& (0+255),w,b
  3732   0019D8  6ED9               	movwf	fsr2l,c
  3733   0019DA  0E01               	movlw	high _dbuf
  3734   0019DC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3735   0019DE  6EDA               	movwf	fsr2h,c
  3736   0019E0  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  3737   0019E6                     l4421:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3741   0019E6  5177               	movf	efgtoa@i& (0+255),w,b
  3742   0019E8  5F71               	subwf	efgtoa@w& (0+255),f,b
  3743   0019EA  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3744   0019EC  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3745   0019EE                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3748   0019EE  C02E  F00F         	movff	efgtoa@fp,pad@fp
  3749   0019F2  0E00               	movlw	low _dbuf
  3750   0019F4  2586               	addwf	efgtoa@n& (0+255),w,b
  3751   0019F6  6E10               	movwf	pad@buf^0,c
  3752   0019F8  0E01               	movlw	high _dbuf
  3753   0019FA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3754   0019FC  6E11               	movwf	(pad@buf+1)^0,c
  3755   0019FE  C071  F012         	movff	efgtoa@w,pad@p
  3756   001A02  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3757   001A06  EC72  F01D         	call	_pad	;wreg free
  3758   001A0A                     l929:
  3759   001A0A  0012               	return		;funcret
  3760   001A0C                     __end_of_efgtoa:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _strcpy *****************
  3764 ;; Defined at:
  3765 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3768 ;;		 -> dbuf(80), 
  3769 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3770 ;;		 -> STR_6(4), STR_3(4), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  d               2    4[COMRAM] PTR unsigned char 
  3773 ;;		 -> dbuf(80), 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2    0[COMRAM] PTR unsigned char 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:        6 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_efgtoa
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text9
  3797   003DAA                     __ptext9:
  3798                           	callstack 0
  3799   003DAA                     _strcpy:
  3800                           	callstack 26
  3801   003DAA  C001  F005         	movff	strcpy@dest,strcpy@d
  3802   003DAE  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3803   003DB2                     l4147:
  3804   003DB2  2A03               	incf	strcpy@src^0,f,c
  3805   003DB4  0403               	decf	strcpy@src^0,w,c
  3806   003DB6  6E04               	movwf	??_strcpy^0,c
  3807   003DB8  0060  F013  FFF6   	movff	??_strcpy,tblptrl
  3808   003DBE                     	if	1	;There is more than 1 active tblptr byte
  3809   003DBE  0E10               	movlw	high __smallconst
  3810   003DC0  6EF7               	movwf	tblptrh,c
  3811   003DC2                     	endif
  3812   003DC2                     	if	0	;tblptru may be non-zero
  3813   003DC2                     	endif
  3814   003DC2                     	if	0	;tblptru may be non-zero
  3815   003DC2                     	endif
  3816   003DC2  0060  F017  FFD9   	movff	strcpy@d,fsr2l
  3817   003DC8  0060  F01B  FFDA   	movff	strcpy@d+1,fsr2h
  3818   003DCE  4A05               	infsnz	strcpy@d^0,f,c
  3819   003DD0  2A06               	incf	(strcpy@d+1)^0,f,c
  3820   003DD2  0008               	tblrd		*
  3821   003DD4  006F FFD7 FFDF     	movff	tablat,indf2
  3822   003DDA  50DF               	movf	indf2,w,c
  3823   003DDC  A4D8               	btfss	status,2,c
  3824   003DDE  EFF3  F01E         	goto	u4481
  3825   003DE2  EFF5  F01E         	goto	u4480
  3826   003DE6                     u4481:
  3827   003DE6  EFD9  F01E         	goto	l4147
  3828   003DEA                     u4480:
  3829   003DEA  0012               	return		;funcret
  3830   003DEC                     __end_of_strcpy:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _memcpy *****************
  3834 ;; Defined at:
  3835 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  d1              2    0[COMRAM] PTR void 
  3838 ;;		 -> dbuf(80), 
  3839 ;;  s1              2    2[COMRAM] PTR const void 
  3840 ;;		 -> dbuf(80), 
  3841 ;;  n               2    4[COMRAM] unsigned int 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3844 ;;		 -> dbuf(80), 
  3845 ;;  d               2    7[COMRAM] PTR unsigned char 
  3846 ;;		 -> dbuf(80), 
  3847 ;;  tmp             1    6[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  2    0[COMRAM] PTR void 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3857 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;Total ram usage:       11 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_efgtoa
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text10
  3871   003C72                     __ptext10:
  3872                           	callstack 0
  3873   003C72                     _memcpy:
  3874                           	callstack 26
  3875   003C72  C003  F00A         	movff	memcpy@s1,memcpy@s
  3876   003C76  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  3877   003C7A  C001  F008         	movff	memcpy@d1,memcpy@d
  3878   003C7E  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  3879   003C82  EF58  F01E         	goto	l4159
  3880   003C86                     l4151:
  3881   003C86  0060  F02B  FFD9   	movff	memcpy@s,fsr2l
  3882   003C8C  0060  F02F  FFDA   	movff	memcpy@s+1,fsr2h
  3883   003C92  50DF               	movf	indf2,w,c
  3884   003C94  6E07               	movwf	memcpy@tmp^0,c
  3885   003C96  4A0A               	infsnz	memcpy@s^0,f,c
  3886   003C98  2A0B               	incf	(memcpy@s+1)^0,f,c
  3887   003C9A  0060  F023  FFD9   	movff	memcpy@d,fsr2l
  3888   003CA0  0060  F027  FFDA   	movff	memcpy@d+1,fsr2h
  3889   003CA6  0060  F01F  FFDF   	movff	memcpy@tmp,indf2
  3890   003CAC  4A08               	infsnz	memcpy@d^0,f,c
  3891   003CAE  2A09               	incf	(memcpy@d+1)^0,f,c
  3892   003CB0                     l4159:
  3893   003CB0  0605               	decf	memcpy@n^0,f,c
  3894   003CB2  A0D8               	btfss	status,0,c
  3895   003CB4  0606               	decf	(memcpy@n+1)^0,f,c
  3896   003CB6  2805               	incf	memcpy@n^0,w,c
  3897   003CB8  E106               	bnz	u4491
  3898   003CBA  2806               	incf	(memcpy@n+1)^0,w,c
  3899   003CBC  A4D8               	btfss	status,2,c
  3900   003CBE  EF63  F01E         	goto	u4491
  3901   003CC2  EF65  F01E         	goto	u4490
  3902   003CC6                     u4491:
  3903   003CC6  EF43  F01E         	goto	l4151
  3904   003CCA                     u4490:
  3905   003CCA  0012               	return		;funcret
  3906   003CCC                     __end_of_memcpy:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _labs *****************
  3910 ;; Defined at:
  3911 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  a               4    0[COMRAM] long 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  4    0[COMRAM] long 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;Total ram usage:        8 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_efgtoa
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text11
  3939   003CCC                     __ptext11:
  3940                           	callstack 0
  3941   003CCC                     _labs:
  3942                           	callstack 26
  3943   003CCC  BE04               	btfsc	(labs@a+3)^0,7,c
  3944   003CCE  EF6B  F01E         	goto	u3481
  3945   003CD2  EF6D  F01E         	goto	u3480
  3946   003CD6                     u3481:
  3947   003CD6  EF77  F01E         	goto	l3323
  3948   003CDA                     u3480:
  3949   003CDA  C001  F001         	movff	labs@a,?_labs
  3950   003CDE  C002  F002         	movff	labs@a+1,?_labs+1
  3951   003CE2  C003  F003         	movff	labs@a+2,?_labs+2
  3952   003CE6  C004  F004         	movff	labs@a+3,?_labs+3
  3953   003CEA  EF90  F01E         	goto	l1046
  3954   003CEE                     l3323:
  3955   003CEE  C001  F005         	movff	labs@a,??_labs
  3956   003CF2  C002  F006         	movff	labs@a+1,??_labs+1
  3957   003CF6  C003  F007         	movff	labs@a+2,??_labs+2
  3958   003CFA  C004  F008         	movff	labs@a+3,??_labs+3
  3959   003CFE  1E05               	comf	??_labs^0,f,c
  3960   003D00  1E06               	comf	(??_labs+1)^0,f,c
  3961   003D02  1E07               	comf	(??_labs+2)^0,f,c
  3962   003D04  1E08               	comf	(??_labs+3)^0,f,c
  3963   003D06  2A05               	incf	??_labs^0,f,c
  3964   003D08  0E00               	movlw	0
  3965   003D0A  2206               	addwfc	(??_labs+1)^0,f,c
  3966   003D0C  2207               	addwfc	(??_labs+2)^0,f,c
  3967   003D0E  2208               	addwfc	(??_labs+3)^0,f,c
  3968   003D10  C005  F001         	movff	??_labs,?_labs
  3969   003D14  C006  F002         	movff	??_labs+1,?_labs+1
  3970   003D18  C007  F003         	movff	??_labs+2,?_labs+2
  3971   003D1C  C008  F004         	movff	??_labs+3,?_labs+3
  3972   003D20                     l1046:
  3973   003D20  0012               	return		;funcret
  3974   003D22                     __end_of_labs:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _floorf *****************
  3978 ;; Defined at:
  3979 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  x               4   25[COMRAM] float 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  u               4   41[COMRAM] struct .
  3984 ;;  m               4   35[COMRAM] unsigned long 
  3985 ;;  e               2   39[COMRAM] int 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  4   25[COMRAM] float 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;Total ram usage:       20 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_efgtoa
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text12
  4009   002BCA                     __ptext12:
  4010                           	callstack 0
  4011   002BCA                     _floorf:
  4012                           	callstack 26
  4013   002BCA  C051  F02A         	movff	floorf@F521,floorf@u
  4014   002BCE  C052  F02B         	movff	floorf@F521+1,floorf@u+1
  4015   002BD2  C053  F02C         	movff	floorf@F521+2,floorf@u+2
  4016   002BD6  C054  F02D         	movff	floorf@F521+3,floorf@u+3
  4017   002BDA  C01A  F02A         	movff	floorf@x,floorf@u
  4018   002BDE  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4019   002BE2  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4020   002BE6  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4021   002BEA  0E81               	movlw	129
  4022   002BEC  6E1E               	movwf	??_floorf^0,c
  4023   002BEE  0EFF               	movlw	255
  4024   002BF0  6E1F               	movwf	(??_floorf+1)^0,c
  4025   002BF2  C02A  F020         	movff	floorf@u,??_floorf+2
  4026   002BF6  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4027   002BFA  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4028   002BFE  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4029   002C02  0E18               	movlw	24
  4030   002C04  EF09  F016         	goto	u3490
  4031   002C08                     u3495:
  4032   002C08  90D8               	bcf	status,0,c
  4033   002C0A  3223               	rrcf	(??_floorf+5)^0,f,c
  4034   002C0C  3222               	rrcf	(??_floorf+4)^0,f,c
  4035   002C0E  3221               	rrcf	(??_floorf+3)^0,f,c
  4036   002C10  3220               	rrcf	(??_floorf+2)^0,f,c
  4037   002C12                     u3490:
  4038   002C12  2EE8               	decfsz	wreg,f,c
  4039   002C14  EF04  F016         	goto	u3495
  4040   002C18  5020               	movf	(??_floorf+2)^0,w,c
  4041   002C1A  241E               	addwf	??_floorf^0,w,c
  4042   002C1C  6E28               	movwf	floorf@e^0,c
  4043   002C1E  0E00               	movlw	0
  4044   002C20  201F               	addwfc	(??_floorf+1)^0,w,c
  4045   002C22  6E29               	movwf	(floorf@e+1)^0,c
  4046   002C24  BE29               	btfsc	(floorf@e+1)^0,7,c
  4047   002C26  EF1E  F016         	goto	u3501
  4048   002C2A  5029               	movf	(floorf@e+1)^0,w,c
  4049   002C2C  E109               	bnz	u3500
  4050   002C2E  0E17               	movlw	23
  4051   002C30  5C28               	subwf	floorf@e^0,w,c
  4052   002C32  A0D8               	btfss	status,0,c
  4053   002C34  EF1E  F016         	goto	u3501
  4054   002C38  EF20  F016         	goto	u3500
  4055   002C3C                     u3501:
  4056   002C3C  EF2A  F016         	goto	l3333
  4057   002C40                     u3500:
  4058   002C40                     l3331:
  4059   002C40  C01A  F01A         	movff	floorf@x,?_floorf
  4060   002C44  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4061   002C48  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4062   002C4C  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4063   002C50  EFED  F016         	goto	l1032
  4064   002C54                     l3333:
  4065   002C54  BE29               	btfsc	(floorf@e+1)^0,7,c
  4066   002C56  EF2F  F016         	goto	u3511
  4067   002C5A  EF31  F016         	goto	u3510
  4068   002C5E                     u3511:
  4069   002C5E  EFA1  F016         	goto	l3343
  4070   002C62                     u3510:
  4071   002C62  C028  F01E         	movff	floorf@e,??_floorf
  4072   002C66  0EFF               	movlw	255
  4073   002C68  6E1F               	movwf	(??_floorf+1)^0,c
  4074   002C6A  0EFF               	movlw	255
  4075   002C6C  6E20               	movwf	(??_floorf+2)^0,c
  4076   002C6E  0E7F               	movlw	127
  4077   002C70  6E21               	movwf	(??_floorf+3)^0,c
  4078   002C72  0E00               	movlw	0
  4079   002C74  6E22               	movwf	(??_floorf+4)^0,c
  4080   002C76                     u3525:
  4081   002C76  661E               	tstfsz	??_floorf^0,c
  4082   002C78  EF40  F016         	goto	u3526
  4083   002C7C  EF48  F016         	goto	u3527
  4084   002C80                     u3526:
  4085   002C80  3422               	rlcf	(??_floorf+4)^0,w,c
  4086   002C82  3222               	rrcf	(??_floorf+4)^0,f,c
  4087   002C84  3221               	rrcf	(??_floorf+3)^0,f,c
  4088   002C86  3220               	rrcf	(??_floorf+2)^0,f,c
  4089   002C88  321F               	rrcf	(??_floorf+1)^0,f,c
  4090   002C8A  2E1E               	decfsz	??_floorf^0,f,c
  4091   002C8C  EF3B  F016         	goto	u3525
  4092   002C90                     u3527:
  4093   002C90  C01F  F024         	movff	??_floorf+1,floorf@m
  4094   002C94  C020  F025         	movff	??_floorf+2,floorf@m+1
  4095   002C98  C021  F026         	movff	??_floorf+3,floorf@m+2
  4096   002C9C  C022  F027         	movff	??_floorf+4,floorf@m+3
  4097   002CA0  5024               	movf	floorf@m^0,w,c
  4098   002CA2  142A               	andwf	floorf@u^0,w,c
  4099   002CA4  6E1E               	movwf	??_floorf^0,c
  4100   002CA6  5025               	movf	(floorf@m+1)^0,w,c
  4101   002CA8  142B               	andwf	(floorf@u+1)^0,w,c
  4102   002CAA  6E1F               	movwf	(??_floorf+1)^0,c
  4103   002CAC  5026               	movf	(floorf@m+2)^0,w,c
  4104   002CAE  142C               	andwf	(floorf@u+2)^0,w,c
  4105   002CB0  6E20               	movwf	(??_floorf+2)^0,c
  4106   002CB2  5027               	movf	(floorf@m+3)^0,w,c
  4107   002CB4  142D               	andwf	(floorf@u+3)^0,w,c
  4108   002CB6  6E21               	movwf	(??_floorf+3)^0,c
  4109   002CB8  501E               	movf	??_floorf^0,w,c
  4110   002CBA  101F               	iorwf	(??_floorf+1)^0,w,c
  4111   002CBC  1020               	iorwf	(??_floorf+2)^0,w,c
  4112   002CBE  1021               	iorwf	(??_floorf+3)^0,w,c
  4113   002CC0  A4D8               	btfss	status,2,c
  4114   002CC2  EF65  F016         	goto	u3531
  4115   002CC6  EF67  F016         	goto	u3530
  4116   002CCA                     u3531:
  4117   002CCA  EF69  F016         	goto	l3339
  4118   002CCE                     u3530:
  4119   002CCE  EF20  F016         	goto	l3331
  4120   002CD2                     l3339:
  4121   002CD2  C02A  F01E         	movff	floorf@u,??_floorf
  4122   002CD6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4123   002CDA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4124   002CDE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4125   002CE2  0E20               	movlw	32
  4126   002CE4  EF79  F016         	goto	u3540
  4127   002CE8                     u3545:
  4128   002CE8  90D8               	bcf	status,0,c
  4129   002CEA  3221               	rrcf	(??_floorf+3)^0,f,c
  4130   002CEC  3220               	rrcf	(??_floorf+2)^0,f,c
  4131   002CEE  321F               	rrcf	(??_floorf+1)^0,f,c
  4132   002CF0  321E               	rrcf	??_floorf^0,f,c
  4133   002CF2                     u3540:
  4134   002CF2  2EE8               	decfsz	wreg,f,c
  4135   002CF4  EF74  F016         	goto	u3545
  4136   002CF8  501E               	movf	??_floorf^0,w,c
  4137   002CFA  101F               	iorwf	(??_floorf+1)^0,w,c
  4138   002CFC  1020               	iorwf	(??_floorf+2)^0,w,c
  4139   002CFE  1021               	iorwf	(??_floorf+3)^0,w,c
  4140   002D00  B4D8               	btfsc	status,2,c
  4141   002D02  EF85  F016         	goto	u3551
  4142   002D06  EF87  F016         	goto	u3550
  4143   002D0A                     u3551:
  4144   002D0A  EF8F  F016         	goto	l1035
  4145   002D0E                     u3550:
  4146   002D0E  5024               	movf	floorf@m^0,w,c
  4147   002D10  262A               	addwf	floorf@u^0,f,c
  4148   002D12  5025               	movf	(floorf@m+1)^0,w,c
  4149   002D14  222B               	addwfc	(floorf@u+1)^0,f,c
  4150   002D16  5026               	movf	(floorf@m+2)^0,w,c
  4151   002D18  222C               	addwfc	(floorf@u+2)^0,f,c
  4152   002D1A  5027               	movf	(floorf@m+3)^0,w,c
  4153   002D1C  222D               	addwfc	(floorf@u+3)^0,f,c
  4154   002D1E                     l1035:
  4155   002D1E  1C24               	comf	floorf@m^0,w,c
  4156   002D20  6E1E               	movwf	??_floorf^0,c
  4157   002D22  1C25               	comf	(floorf@m+1)^0,w,c
  4158   002D24  6E1F               	movwf	(??_floorf+1)^0,c
  4159   002D26  1C26               	comf	(floorf@m+2)^0,w,c
  4160   002D28  6E20               	movwf	(??_floorf+2)^0,c
  4161   002D2A  1C27               	comf	(floorf@m+3)^0,w,c
  4162   002D2C  6E21               	movwf	(??_floorf+3)^0,c
  4163   002D2E  501E               	movf	??_floorf^0,w,c
  4164   002D30  162A               	andwf	floorf@u^0,f,c
  4165   002D32  501F               	movf	(??_floorf+1)^0,w,c
  4166   002D34  162B               	andwf	(floorf@u+1)^0,f,c
  4167   002D36  5020               	movf	(??_floorf+2)^0,w,c
  4168   002D38  162C               	andwf	(floorf@u+2)^0,f,c
  4169   002D3A  5021               	movf	(??_floorf+3)^0,w,c
  4170   002D3C  162D               	andwf	(floorf@u+3)^0,f,c
  4171   002D3E  EFE5  F016         	goto	l3351
  4172   002D42                     l3343:
  4173   002D42  C02A  F01E         	movff	floorf@u,??_floorf
  4174   002D46  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4175   002D4A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4176   002D4E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4177   002D52  0E20               	movlw	32
  4178   002D54  EFB1  F016         	goto	u3560
  4179   002D58                     u3565:
  4180   002D58  90D8               	bcf	status,0,c
  4181   002D5A  3221               	rrcf	(??_floorf+3)^0,f,c
  4182   002D5C  3220               	rrcf	(??_floorf+2)^0,f,c
  4183   002D5E  321F               	rrcf	(??_floorf+1)^0,f,c
  4184   002D60  321E               	rrcf	??_floorf^0,f,c
  4185   002D62                     u3560:
  4186   002D62  2EE8               	decfsz	wreg,f,c
  4187   002D64  EFAC  F016         	goto	u3565
  4188   002D68  501E               	movf	??_floorf^0,w,c
  4189   002D6A  101F               	iorwf	(??_floorf+1)^0,w,c
  4190   002D6C  1020               	iorwf	(??_floorf+2)^0,w,c
  4191   002D6E  1021               	iorwf	(??_floorf+3)^0,w,c
  4192   002D70  A4D8               	btfss	status,2,c
  4193   002D72  EFBD  F016         	goto	u3571
  4194   002D76  EFBF  F016         	goto	u3570
  4195   002D7A                     u3571:
  4196   002D7A  EFC9  F016         	goto	l3347
  4197   002D7E                     u3570:
  4198   002D7E  0E00               	movlw	0
  4199   002D80  6E2A               	movwf	floorf@u^0,c
  4200   002D82  0E00               	movlw	0
  4201   002D84  6E2B               	movwf	(floorf@u+1)^0,c
  4202   002D86  0E00               	movlw	0
  4203   002D88  6E2C               	movwf	(floorf@u+2)^0,c
  4204   002D8A  0E00               	movlw	0
  4205   002D8C  6E2D               	movwf	(floorf@u+3)^0,c
  4206   002D8E  EFE5  F016         	goto	l3351
  4207   002D92                     l3347:
  4208   002D92  90D8               	bcf	status,0,c
  4209   002D94  342A               	rlcf	floorf@u^0,w,c
  4210   002D96  6E1E               	movwf	??_floorf^0,c
  4211   002D98  342B               	rlcf	(floorf@u+1)^0,w,c
  4212   002D9A  6E1F               	movwf	(??_floorf+1)^0,c
  4213   002D9C  342C               	rlcf	(floorf@u+2)^0,w,c
  4214   002D9E  6E20               	movwf	(??_floorf+2)^0,c
  4215   002DA0  342D               	rlcf	(floorf@u+3)^0,w,c
  4216   002DA2  6E21               	movwf	(??_floorf+3)^0,c
  4217   002DA4  501E               	movf	??_floorf^0,w,c
  4218   002DA6  101F               	iorwf	(??_floorf+1)^0,w,c
  4219   002DA8  1020               	iorwf	(??_floorf+2)^0,w,c
  4220   002DAA  1021               	iorwf	(??_floorf+3)^0,w,c
  4221   002DAC  B4D8               	btfsc	status,2,c
  4222   002DAE  EFDB  F016         	goto	u3581
  4223   002DB2  EFDD  F016         	goto	u3580
  4224   002DB6                     u3581:
  4225   002DB6  EFE5  F016         	goto	l3351
  4226   002DBA                     u3580:
  4227   002DBA  0E00               	movlw	0
  4228   002DBC  6E2A               	movwf	floorf@u^0,c
  4229   002DBE  0E00               	movlw	0
  4230   002DC0  6E2B               	movwf	(floorf@u+1)^0,c
  4231   002DC2  0E80               	movlw	128
  4232   002DC4  6E2C               	movwf	(floorf@u+2)^0,c
  4233   002DC6  0EBF               	movlw	191
  4234   002DC8  6E2D               	movwf	(floorf@u+3)^0,c
  4235   002DCA                     l3351:
  4236   002DCA  C02A  F01A         	movff	floorf@u,?_floorf
  4237   002DCE  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4238   002DD2  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4239   002DD6  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4240   002DDA                     l1032:
  4241   002DDA  0012               	return		;funcret
  4242   002DDC                     __end_of_floorf:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function ___fpclassifyf *****************
  4246 ;; Defined at:
  4247 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  x               4    0[COMRAM] float 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  u               4   10[COMRAM] struct .
  4252 ;;  e               2    8[COMRAM] int 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2    0[COMRAM] int 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;Total ram usage:       14 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_efgtoa
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text13
  4276   003314                     __ptext13:
  4277                           	callstack 0
  4278   003314                     ___fpclassifyf:
  4279                           	callstack 26
  4280   003314  C055  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4281   003318  C056  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4282   00331C  C057  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4283   003320  C058  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4284   003324  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4285   003328  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4286   00332C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4287   003330  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4288   003334  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4289   003338  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4290   00333C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4291   003340  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4292   003344  0E18               	movlw	24
  4293   003346  EFAA  F019         	goto	u3400
  4294   00334A                     u3405:
  4295   00334A  90D8               	bcf	status,0,c
  4296   00334C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4297   00334E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4298   003350  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4299   003352  3205               	rrcf	??___fpclassifyf^0,f,c
  4300   003354                     u3400:
  4301   003354  2EE8               	decfsz	wreg,f,c
  4302   003356  EFA5  F019         	goto	u3405
  4303   00335A  5005               	movf	??___fpclassifyf^0,w,c
  4304   00335C  6E09               	movwf	___fpclassifyf@e^0,c
  4305   00335E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4306   003360  5009               	movf	___fpclassifyf@e^0,w,c
  4307   003362  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4308   003364  A4D8               	btfss	status,2,c
  4309   003366  EFB7  F019         	goto	u3411
  4310   00336A  EFB9  F019         	goto	u3410
  4311   00336E                     u3411:
  4312   00336E  EFD9  F019         	goto	l3305
  4313   003372                     u3410:
  4314   003372  90D8               	bcf	status,0,c
  4315   003374  340B               	rlcf	___fpclassifyf@u^0,w,c
  4316   003376  6E05               	movwf	??___fpclassifyf^0,c
  4317   003378  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4318   00337A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4319   00337C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4320   00337E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4321   003380  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4322   003382  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4323   003384  5005               	movf	??___fpclassifyf^0,w,c
  4324   003386  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4325   003388  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4326   00338A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4327   00338C  A4D8               	btfss	status,2,c
  4328   00338E  EFCB  F019         	goto	u3421
  4329   003392  EFCD  F019         	goto	u3420
  4330   003396                     u3421:
  4331   003396  EFD3  F019         	goto	l3301
  4332   00339A                     u3420:
  4333   00339A  0E00               	movlw	0
  4334   00339C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4335   00339E  0E02               	movlw	2
  4336   0033A0  6E01               	movwf	?___fpclassifyf^0,c
  4337   0033A2  EF08  F01A         	goto	l1018
  4338   0033A6                     l3301:
  4339   0033A6  0E00               	movlw	0
  4340   0033A8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4341   0033AA  0E03               	movlw	3
  4342   0033AC  6E01               	movwf	?___fpclassifyf^0,c
  4343   0033AE  EF08  F01A         	goto	l1018
  4344   0033B2                     l3305:
  4345   0033B2  2809               	incf	___fpclassifyf@e^0,w,c
  4346   0033B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4347   0033B6  A4D8               	btfss	status,2,c
  4348   0033B8  EFE0  F019         	goto	u3431
  4349   0033BC  EFE2  F019         	goto	u3430
  4350   0033C0                     u3431:
  4351   0033C0  EF04  F01A         	goto	l3311
  4352   0033C4                     u3430:
  4353   0033C4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4354   0033C8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4355   0033CC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4356   0033D0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4357   0033D4  0E09               	movlw	9
  4358   0033D6                     u3445:
  4359   0033D6  90D8               	bcf	status,0,c
  4360   0033D8  3605               	rlcf	??___fpclassifyf^0,f,c
  4361   0033DA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4362   0033DC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4363   0033DE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4364   0033E0  2EE8               	decfsz	wreg,f,c
  4365   0033E2  EFEB  F019         	goto	u3445
  4366   0033E6  5005               	movf	??___fpclassifyf^0,w,c
  4367   0033E8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4368   0033EA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4369   0033EC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4370   0033EE  B4D8               	btfsc	status,2,c
  4371   0033F0  EFFC  F019         	goto	u3451
  4372   0033F4  EFFF  F019         	goto	u3450
  4373   0033F8                     u3451:
  4374   0033F8  0E01               	movlw	1
  4375   0033FA  EF00  F01A         	goto	u3460
  4376   0033FE                     u3450:
  4377   0033FE  0E00               	movlw	0
  4378   003400                     u3460:
  4379   003400  6E01               	movwf	?___fpclassifyf^0,c
  4380   003402  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4381   003404  EF08  F01A         	goto	l1018
  4382   003408                     l3311:
  4383   003408  0E00               	movlw	0
  4384   00340A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4385   00340C  0E04               	movlw	4
  4386   00340E  6E01               	movwf	?___fpclassifyf^0,c
  4387   003410                     l1018:
  4388   003410  0012               	return		;funcret
  4389   003412                     __end_of___fpclassifyf:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function ___fltol *****************
  4393 ;; Defined at:
  4394 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  f1              4   25[COMRAM] int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  exp1            1   34[COMRAM] unsigned char 
  4399 ;;  sign1           1   33[COMRAM] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  4   25[COMRAM] long 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;Total ram usage:       10 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_writeData16
  4419 ;;		_efgtoa
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text14
  4424   00310A                     __ptext14:
  4425                           	callstack 0
  4426   00310A                     ___fltol:
  4427                           	callstack 29
  4428   00310A  341C               	rlcf	(___fltol@f1+2)^0,w,c
  4429   00310C  341D               	rlcf	(___fltol@f1+3)^0,w,c
  4430   00310E  6E23               	movwf	___fltol@exp1^0,c
  4431   003110  5023               	movf	___fltol@exp1^0,w,c
  4432   003112  A4D8               	btfss	status,2,c
  4433   003114  EF8E  F018         	goto	u3301
  4434   003118  EF90  F018         	goto	u3300
  4435   00311C                     u3301:
  4436   00311C  EF9A  F018         	goto	l3239
  4437   003120                     u3300:
  4438   003120                     l3235:
  4439   003120  0E00               	movlw	0
  4440   003122  6E1A               	movwf	?___fltol^0,c
  4441   003124  0E00               	movlw	0
  4442   003126  6E1B               	movwf	(?___fltol+1)^0,c
  4443   003128  0E00               	movlw	0
  4444   00312A  6E1C               	movwf	(?___fltol+2)^0,c
  4445   00312C  0E00               	movlw	0
  4446   00312E  6E1D               	movwf	(?___fltol+3)^0,c
  4447   003130  EF07  F019         	goto	l486
  4448   003134                     l3239:
  4449   003134  C01A  F01E         	movff	___fltol@f1,??___fltol
  4450   003138  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  4451   00313C  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  4452   003140  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  4453   003144  0E20               	movlw	32
  4454   003146  EFAA  F018         	goto	u3310
  4455   00314A                     u3315:
  4456   00314A  90D8               	bcf	status,0,c
  4457   00314C  3221               	rrcf	(??___fltol+3)^0,f,c
  4458   00314E  3220               	rrcf	(??___fltol+2)^0,f,c
  4459   003150  321F               	rrcf	(??___fltol+1)^0,f,c
  4460   003152  321E               	rrcf	??___fltol^0,f,c
  4461   003154                     u3310:
  4462   003154  2EE8               	decfsz	wreg,f,c
  4463   003156  EFA5  F018         	goto	u3315
  4464   00315A  501E               	movf	??___fltol^0,w,c
  4465   00315C  6E22               	movwf	___fltol@sign1^0,c
  4466   00315E  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  4467   003160  0EFF               	movlw	255
  4468   003162  161A               	andwf	___fltol@f1^0,f,c
  4469   003164  0EFF               	movlw	255
  4470   003166  161B               	andwf	(___fltol@f1+1)^0,f,c
  4471   003168  0EFF               	movlw	255
  4472   00316A  161C               	andwf	(___fltol@f1+2)^0,f,c
  4473   00316C  0E00               	movlw	0
  4474   00316E  161D               	andwf	(___fltol@f1+3)^0,f,c
  4475   003170  0E96               	movlw	150
  4476   003172  5E23               	subwf	___fltol@exp1^0,f,c
  4477   003174  BE23               	btfsc	___fltol@exp1^0,7,c
  4478   003176  EFC1  F018         	goto	u3320
  4479   00317A  EFBF  F018         	goto	u3321
  4480   00317E                     u3321:
  4481   00317E  EFD7  F018         	goto	l3259
  4482   003182                     u3320:
  4483   003182  5023               	movf	___fltol@exp1^0,w,c
  4484   003184  0A80               	xorlw	128
  4485   003186  0F97               	addlw	151
  4486   003188  B0D8               	btfsc	status,0,c
  4487   00318A  EFC9  F018         	goto	u3331
  4488   00318E  EFCB  F018         	goto	u3330
  4489   003192                     u3331:
  4490   003192  EFCD  F018         	goto	l3255
  4491   003196                     u3330:
  4492   003196  EF90  F018         	goto	l3235
  4493   00319A                     l3255:
  4494   00319A  90D8               	bcf	status,0,c
  4495   00319C  321D               	rrcf	(___fltol@f1+3)^0,f,c
  4496   00319E  321C               	rrcf	(___fltol@f1+2)^0,f,c
  4497   0031A0  321B               	rrcf	(___fltol@f1+1)^0,f,c
  4498   0031A2  321A               	rrcf	___fltol@f1^0,f,c
  4499   0031A4  3E23               	incfsz	___fltol@exp1^0,f,c
  4500   0031A6  EFCD  F018         	goto	l3255
  4501   0031AA  EFEF  F018         	goto	l3269
  4502   0031AE                     l3259:
  4503   0031AE  0E1F               	movlw	31
  4504   0031B0  6423               	cpfsgt	___fltol@exp1^0,c
  4505   0031B2  EFDD  F018         	goto	u3341
  4506   0031B6  EFDF  F018         	goto	u3340
  4507   0031BA                     u3341:
  4508   0031BA  EFE7  F018         	goto	l3267
  4509   0031BE                     u3340:
  4510   0031BE  EF90  F018         	goto	l3235
  4511   0031C2                     l3265:
  4512   0031C2  90D8               	bcf	status,0,c
  4513   0031C4  361A               	rlcf	___fltol@f1^0,f,c
  4514   0031C6  361B               	rlcf	(___fltol@f1+1)^0,f,c
  4515   0031C8  361C               	rlcf	(___fltol@f1+2)^0,f,c
  4516   0031CA  361D               	rlcf	(___fltol@f1+3)^0,f,c
  4517   0031CC  0623               	decf	___fltol@exp1^0,f,c
  4518   0031CE                     l3267:
  4519   0031CE  5023               	movf	___fltol@exp1^0,w,c
  4520   0031D0  A4D8               	btfss	status,2,c
  4521   0031D2  EFED  F018         	goto	u3351
  4522   0031D6  EFEF  F018         	goto	u3350
  4523   0031DA                     u3351:
  4524   0031DA  EFE1  F018         	goto	l3265
  4525   0031DE                     u3350:
  4526   0031DE                     l3269:
  4527   0031DE  5022               	movf	___fltol@sign1^0,w,c
  4528   0031E0  B4D8               	btfsc	status,2,c
  4529   0031E2  EFF5  F018         	goto	u3361
  4530   0031E6  EFF7  F018         	goto	u3360
  4531   0031EA                     u3361:
  4532   0031EA  EFFF  F018         	goto	l3273
  4533   0031EE                     u3360:
  4534   0031EE  1E1D               	comf	(___fltol@f1+3)^0,f,c
  4535   0031F0  1E1C               	comf	(___fltol@f1+2)^0,f,c
  4536   0031F2  1E1B               	comf	(___fltol@f1+1)^0,f,c
  4537   0031F4  6C1A               	negf	___fltol@f1^0,c
  4538   0031F6  0E00               	movlw	0
  4539   0031F8  221B               	addwfc	(___fltol@f1+1)^0,f,c
  4540   0031FA  221C               	addwfc	(___fltol@f1+2)^0,f,c
  4541   0031FC  221D               	addwfc	(___fltol@f1+3)^0,f,c
  4542   0031FE                     l3273:
  4543   0031FE  C01A  F01A         	movff	___fltol@f1,?___fltol
  4544   003202  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  4545   003206  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  4546   00320A  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  4547   00320E                     l486:
  4548   00320E  0012               	return		;funcret
  4549   003210                     __end_of___fltol:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function ___flsub *****************
  4553 ;; Defined at:
  4554 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  b               4   25[COMRAM] long 
  4557 ;;  a               4   29[COMRAM] long 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  4   25[COMRAM] long 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4569 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;Total ram usage:        8 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 1
  4576 ;; This function calls:
  4577 ;;		___fladd
  4578 ;; This function is called by:
  4579 ;;		_efgtoa
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text15
  4584   003D22                     __ptext15:
  4585                           	callstack 0
  4586   003D22                     ___flsub:
  4587                           	callstack 25
  4588   003D22  0E00               	movlw	0
  4589   003D24  1A1E               	xorwf	___flsub@a^0,f,c
  4590   003D26  0E00               	movlw	0
  4591   003D28  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4592   003D2A  0E00               	movlw	0
  4593   003D2C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4594   003D2E  0E80               	movlw	128
  4595   003D30  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4596   003D32  C01A  F001         	movff	___flsub@b,___fladd@b
  4597   003D36  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4598   003D3A  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4599   003D3E  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4600   003D42  C01E  F005         	movff	___flsub@a,___fladd@a
  4601   003D46  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4602   003D4A  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4603   003D4E  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4604   003D52  EC06  F00D         	call	___fladd	;wreg free
  4605   003D56  C001  F01A         	movff	?___fladd,?___flsub
  4606   003D5A  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4607   003D5E  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4608   003D62  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4609   003D66  0012               	return		;funcret
  4610   003D68                     __end_of___flsub:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function ___fladd *****************
  4614 ;; Defined at:
  4615 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  b               4    0[COMRAM] long 
  4618 ;;  a               4    4[COMRAM] long 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  grs             1   15[COMRAM] unsigned char 
  4621 ;;  bexp            1   14[COMRAM] unsigned char 
  4622 ;;  aexp            1   13[COMRAM] unsigned char 
  4623 ;;  signs           1   12[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  4    0[COMRAM] unsigned char 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4633 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;Total ram usage:       16 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		___flsub
  4643 ;;		_efgtoa
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text16
  4648   001A0C                     __ptext16:
  4649                           	callstack 0
  4650   001A0C                     ___fladd:
  4651                           	callstack 25
  4652   001A0C  5004               	movf	(___fladd@b+3)^0,w,c
  4653   001A0E  0B80               	andlw	128
  4654   001A10  6E0D               	movwf	___fladd@signs^0,c
  4655   001A12  5004               	movf	(___fladd@b+3)^0,w,c
  4656   001A14  2404               	addwf	(___fladd@b+3)^0,w,c
  4657   001A16  6E0F               	movwf	___fladd@bexp^0,c
  4658   001A18  AE03               	btfss	(___fladd@b+2)^0,7,c
  4659   001A1A  EF11  F00D         	goto	u2271
  4660   001A1E  EF13  F00D         	goto	u2270
  4661   001A22                     u2271:
  4662   001A22  EF14  F00D         	goto	l2623
  4663   001A26                     u2270:
  4664   001A26  800F               	bsf	___fladd@bexp^0,0,c
  4665   001A28                     l2623:
  4666   001A28  500F               	movf	___fladd@bexp^0,w,c
  4667   001A2A  B4D8               	btfsc	status,2,c
  4668   001A2C  EF1A  F00D         	goto	u2281
  4669   001A30  EF1C  F00D         	goto	u2280
  4670   001A34                     u2281:
  4671   001A34  EF31  F00D         	goto	l2633
  4672   001A38                     u2280:
  4673   001A38  280F               	incf	___fladd@bexp^0,w,c
  4674   001A3A  A4D8               	btfss	status,2,c
  4675   001A3C  EF22  F00D         	goto	u2291
  4676   001A40  EF24  F00D         	goto	u2290
  4677   001A44                     u2291:
  4678   001A44  EF2C  F00D         	goto	l2629
  4679   001A48                     u2290:
  4680   001A48  0E00               	movlw	0
  4681   001A4A  6E01               	movwf	___fladd@b^0,c
  4682   001A4C  0E00               	movlw	0
  4683   001A4E  6E02               	movwf	(___fladd@b+1)^0,c
  4684   001A50  0E00               	movlw	0
  4685   001A52  6E03               	movwf	(___fladd@b+2)^0,c
  4686   001A54  0E00               	movlw	0
  4687   001A56  6E04               	movwf	(___fladd@b+3)^0,c
  4688   001A58                     l2629:
  4689   001A58  8E03               	bsf	(___fladd@b+2)^0,7,c
  4690   001A5A  0E00               	movlw	0
  4691   001A5C  6E04               	movwf	(___fladd@b+3)^0,c
  4692   001A5E  EF39  F00D         	goto	l2635
  4693   001A62                     l2633:
  4694   001A62  0E00               	movlw	0
  4695   001A64  6E01               	movwf	___fladd@b^0,c
  4696   001A66  0E00               	movlw	0
  4697   001A68  6E02               	movwf	(___fladd@b+1)^0,c
  4698   001A6A  0E00               	movlw	0
  4699   001A6C  6E03               	movwf	(___fladd@b+2)^0,c
  4700   001A6E  0E00               	movlw	0
  4701   001A70  6E04               	movwf	(___fladd@b+3)^0,c
  4702   001A72                     l2635:
  4703   001A72  5008               	movf	(___fladd@a+3)^0,w,c
  4704   001A74  0B80               	andlw	128
  4705   001A76  6E0E               	movwf	___fladd@aexp^0,c
  4706   001A78  500D               	movf	___fladd@signs^0,w,c
  4707   001A7A  180E               	xorwf	___fladd@aexp^0,w,c
  4708   001A7C  B4D8               	btfsc	status,2,c
  4709   001A7E  EF43  F00D         	goto	u2301
  4710   001A82  EF45  F00D         	goto	u2300
  4711   001A86                     u2301:
  4712   001A86  EF46  F00D         	goto	l2641
  4713   001A8A                     u2300:
  4714   001A8A  8C0D               	bsf	___fladd@signs^0,6,c
  4715   001A8C                     l2641:
  4716   001A8C  5008               	movf	(___fladd@a+3)^0,w,c
  4717   001A8E  2408               	addwf	(___fladd@a+3)^0,w,c
  4718   001A90  6E0E               	movwf	___fladd@aexp^0,c
  4719   001A92  AE07               	btfss	(___fladd@a+2)^0,7,c
  4720   001A94  EF4E  F00D         	goto	u2311
  4721   001A98  EF50  F00D         	goto	u2310
  4722   001A9C                     u2311:
  4723   001A9C  EF51  F00D         	goto	l2647
  4724   001AA0                     u2310:
  4725   001AA0  800E               	bsf	___fladd@aexp^0,0,c
  4726   001AA2                     l2647:
  4727   001AA2  500E               	movf	___fladd@aexp^0,w,c
  4728   001AA4  B4D8               	btfsc	status,2,c
  4729   001AA6  EF57  F00D         	goto	u2321
  4730   001AAA  EF59  F00D         	goto	u2320
  4731   001AAE                     u2321:
  4732   001AAE  EF6E  F00D         	goto	l2657
  4733   001AB2                     u2320:
  4734   001AB2  280E               	incf	___fladd@aexp^0,w,c
  4735   001AB4  A4D8               	btfss	status,2,c
  4736   001AB6  EF5F  F00D         	goto	u2331
  4737   001ABA  EF61  F00D         	goto	u2330
  4738   001ABE                     u2331:
  4739   001ABE  EF69  F00D         	goto	l2653
  4740   001AC2                     u2330:
  4741   001AC2  0E00               	movlw	0
  4742   001AC4  6E05               	movwf	___fladd@a^0,c
  4743   001AC6  0E00               	movlw	0
  4744   001AC8  6E06               	movwf	(___fladd@a+1)^0,c
  4745   001ACA  0E00               	movlw	0
  4746   001ACC  6E07               	movwf	(___fladd@a+2)^0,c
  4747   001ACE  0E00               	movlw	0
  4748   001AD0  6E08               	movwf	(___fladd@a+3)^0,c
  4749   001AD2                     l2653:
  4750   001AD2  8E07               	bsf	(___fladd@a+2)^0,7,c
  4751   001AD4  0E00               	movlw	0
  4752   001AD6  6E08               	movwf	(___fladd@a+3)^0,c
  4753   001AD8  EF76  F00D         	goto	l2659
  4754   001ADC                     l2657:
  4755   001ADC  0E00               	movlw	0
  4756   001ADE  6E05               	movwf	___fladd@a^0,c
  4757   001AE0  0E00               	movlw	0
  4758   001AE2  6E06               	movwf	(___fladd@a+1)^0,c
  4759   001AE4  0E00               	movlw	0
  4760   001AE6  6E07               	movwf	(___fladd@a+2)^0,c
  4761   001AE8  0E00               	movlw	0
  4762   001AEA  6E08               	movwf	(___fladd@a+3)^0,c
  4763   001AEC                     l2659:
  4764   001AEC  500F               	movf	___fladd@bexp^0,w,c
  4765   001AEE  5C0E               	subwf	___fladd@aexp^0,w,c
  4766   001AF0  B0D8               	btfsc	status,0,c
  4767   001AF2  EF7D  F00D         	goto	u2341
  4768   001AF6  EF7F  F00D         	goto	u2340
  4769   001AFA                     u2341:
  4770   001AFA  EFA6  F00D         	goto	l2695
  4771   001AFE                     u2340:
  4772   001AFE  AC0D               	btfss	___fladd@signs^0,6,c
  4773   001B00  EF84  F00D         	goto	u2351
  4774   001B04  EF86  F00D         	goto	u2350
  4775   001B08                     u2351:
  4776   001B08  EF88  F00D         	goto	l2665
  4777   001B0C                     u2350:
  4778   001B0C  0E80               	movlw	128
  4779   001B0E  1A0D               	xorwf	___fladd@signs^0,f,c
  4780   001B10                     l2665:
  4781   001B10  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4782   001B14  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4783   001B18  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4784   001B1C  C001  F010         	movff	___fladd@b,___fladd@grs
  4785   001B20  C005  F001         	movff	___fladd@a,___fladd@b
  4786   001B24  C010  F005         	movff	___fladd@grs,___fladd@a
  4787   001B28  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4788   001B2C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4789   001B30  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4790   001B34  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4791   001B38  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4792   001B3C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4793   001B40  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4794   001B44  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4795   001B48  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4796   001B4C                     l2695:
  4797   001B4C  0E00               	movlw	0
  4798   001B4E  6E10               	movwf	___fladd@grs^0,c
  4799   001B50  500F               	movf	___fladd@bexp^0,w,c
  4800   001B52  C00E  F009         	movff	___fladd@aexp,??___fladd
  4801   001B56  6A0A               	clrf	(??___fladd+1)^0,c
  4802   001B58  5E09               	subwf	??___fladd^0,f,c
  4803   001B5A  0E00               	movlw	0
  4804   001B5C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4805   001B5E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4806   001B60  EFBB  F00D         	goto	u2361
  4807   001B64  500A               	movf	(??___fladd+1)^0,w,c
  4808   001B66  E109               	bnz	u2360
  4809   001B68  0E1A               	movlw	26
  4810   001B6A  5C09               	subwf	??___fladd^0,w,c
  4811   001B6C  A0D8               	btfss	status,0,c
  4812   001B6E  EFBB  F00D         	goto	u2361
  4813   001B72  EFBD  F00D         	goto	u2360
  4814   001B76                     u2361:
  4815   001B76  EFF4  F00D         	goto	l718
  4816   001B7A                     u2360:
  4817   001B7A  5001               	movf	___fladd@b^0,w,c
  4818   001B7C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4819   001B7E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4820   001B80  1004               	iorwf	(___fladd@b+3)^0,w,c
  4821   001B82  A4D8               	btfss	status,2,c
  4822   001B84  EFC6  F00D         	goto	u2371
  4823   001B88  EFC9  F00D         	goto	u2370
  4824   001B8C                     u2371:
  4825   001B8C  0E01               	movlw	1
  4826   001B8E  EFCA  F00D         	goto	u2380
  4827   001B92                     u2370:
  4828   001B92  0E00               	movlw	0
  4829   001B94                     u2380:
  4830   001B94  6E10               	movwf	___fladd@grs^0,c
  4831   001B96  0E00               	movlw	0
  4832   001B98  6E01               	movwf	___fladd@b^0,c
  4833   001B9A  0E00               	movlw	0
  4834   001B9C  6E02               	movwf	(___fladd@b+1)^0,c
  4835   001B9E  0E00               	movlw	0
  4836   001BA0  6E03               	movwf	(___fladd@b+2)^0,c
  4837   001BA2  0E00               	movlw	0
  4838   001BA4  6E04               	movwf	(___fladd@b+3)^0,c
  4839   001BA6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4840   001BAA  EFFD  F00D         	goto	l717
  4841   001BAE                     l719:
  4842   001BAE  A010               	btfss	___fladd@grs^0,0,c
  4843   001BB0  EFDC  F00D         	goto	u2391
  4844   001BB4  EFDE  F00D         	goto	u2390
  4845   001BB8                     u2391:
  4846   001BB8  EFE4  F00D         	goto	l2707
  4847   001BBC                     u2390:
  4848   001BBC  90D8               	bcf	status,0,c
  4849   001BBE  3010               	rrcf	___fladd@grs^0,w,c
  4850   001BC0  0901               	iorlw	1
  4851   001BC2  6E10               	movwf	___fladd@grs^0,c
  4852   001BC4  EFE6  F00D         	goto	l2709
  4853   001BC8                     l2707:
  4854   001BC8  90D8               	bcf	status,0,c
  4855   001BCA  3210               	rrcf	___fladd@grs^0,f,c
  4856   001BCC                     l2709:
  4857   001BCC  A001               	btfss	___fladd@b^0,0,c
  4858   001BCE  EFEB  F00D         	goto	u2401
  4859   001BD2  EFED  F00D         	goto	u2400
  4860   001BD6                     u2401:
  4861   001BD6  EFEE  F00D         	goto	l2713
  4862   001BDA                     u2400:
  4863   001BDA  8E10               	bsf	___fladd@grs^0,7,c
  4864   001BDC                     l2713:
  4865   001BDC  3404               	rlcf	(___fladd@b+3)^0,w,c
  4866   001BDE  3204               	rrcf	(___fladd@b+3)^0,f,c
  4867   001BE0  3203               	rrcf	(___fladd@b+2)^0,f,c
  4868   001BE2  3202               	rrcf	(___fladd@b+1)^0,f,c
  4869   001BE4  3201               	rrcf	___fladd@b^0,f,c
  4870   001BE6  2A0F               	incf	___fladd@bexp^0,f,c
  4871   001BE8                     l718:
  4872   001BE8  500E               	movf	___fladd@aexp^0,w,c
  4873   001BEA  5C0F               	subwf	___fladd@bexp^0,w,c
  4874   001BEC  A0D8               	btfss	status,0,c
  4875   001BEE  EFFB  F00D         	goto	u2411
  4876   001BF2  EFFD  F00D         	goto	u2410
  4877   001BF6                     u2411:
  4878   001BF6  EFD7  F00D         	goto	l719
  4879   001BFA                     u2410:
  4880   001BFA                     l717:
  4881   001BFA  BC0D               	btfsc	___fladd@signs^0,6,c
  4882   001BFC  EF02  F00E         	goto	u2421
  4883   001C00  EF04  F00E         	goto	u2420
  4884   001C04                     u2421:
  4885   001C04  EF44  F00E         	goto	l2741
  4886   001C08                     u2420:
  4887   001C08  500F               	movf	___fladd@bexp^0,w,c
  4888   001C0A  A4D8               	btfss	status,2,c
  4889   001C0C  EF0A  F00E         	goto	u2431
  4890   001C10  EF0C  F00E         	goto	u2430
  4891   001C14                     u2431:
  4892   001C14  EF16  F00E         	goto	l2723
  4893   001C18                     u2430:
  4894   001C18  0E00               	movlw	0
  4895   001C1A  6E01               	movwf	?___fladd^0,c
  4896   001C1C  0E00               	movlw	0
  4897   001C1E  6E02               	movwf	(?___fladd+1)^0,c
  4898   001C20  0E00               	movlw	0
  4899   001C22  6E03               	movwf	(?___fladd+2)^0,c
  4900   001C24  0E00               	movlw	0
  4901   001C26  6E04               	movwf	(?___fladd+3)^0,c
  4902   001C28  EF65  F00F         	goto	l726
  4903   001C2C                     l2723:
  4904   001C2C  5005               	movf	___fladd@a^0,w,c
  4905   001C2E  2601               	addwf	___fladd@b^0,f,c
  4906   001C30  5006               	movf	(___fladd@a+1)^0,w,c
  4907   001C32  2202               	addwfc	(___fladd@b+1)^0,f,c
  4908   001C34  5007               	movf	(___fladd@a+2)^0,w,c
  4909   001C36  2203               	addwfc	(___fladd@b+2)^0,f,c
  4910   001C38  5008               	movf	(___fladd@a+3)^0,w,c
  4911   001C3A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4912   001C3C  A004               	btfss	(___fladd@b+3)^0,0,c
  4913   001C3E  EF23  F00E         	goto	u2441
  4914   001C42  EF25  F00E         	goto	u2440
  4915   001C46                     u2441:
  4916   001C46  EFD1  F00E         	goto	l2777
  4917   001C4A                     u2440:
  4918   001C4A  A010               	btfss	___fladd@grs^0,0,c
  4919   001C4C  EF2A  F00E         	goto	u2451
  4920   001C50  EF2C  F00E         	goto	u2450
  4921   001C54                     u2451:
  4922   001C54  EF32  F00E         	goto	l2731
  4923   001C58                     u2450:
  4924   001C58  90D8               	bcf	status,0,c
  4925   001C5A  3010               	rrcf	___fladd@grs^0,w,c
  4926   001C5C  0901               	iorlw	1
  4927   001C5E  6E10               	movwf	___fladd@grs^0,c
  4928   001C60  EF34  F00E         	goto	l2733
  4929   001C64                     l2731:
  4930   001C64  90D8               	bcf	status,0,c
  4931   001C66  3210               	rrcf	___fladd@grs^0,f,c
  4932   001C68                     l2733:
  4933   001C68  A001               	btfss	___fladd@b^0,0,c
  4934   001C6A  EF39  F00E         	goto	u2461
  4935   001C6E  EF3B  F00E         	goto	u2460
  4936   001C72                     u2461:
  4937   001C72  EF3C  F00E         	goto	l2737
  4938   001C76                     u2460:
  4939   001C76  8E10               	bsf	___fladd@grs^0,7,c
  4940   001C78                     l2737:
  4941   001C78  3404               	rlcf	(___fladd@b+3)^0,w,c
  4942   001C7A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4943   001C7C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4944   001C7E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4945   001C80  3201               	rrcf	___fladd@b^0,f,c
  4946   001C82  2A0F               	incf	___fladd@bexp^0,f,c
  4947   001C84  EFD1  F00E         	goto	l2777
  4948   001C88                     l2741:
  4949   001C88  5005               	movf	___fladd@a^0,w,c
  4950   001C8A  5C01               	subwf	___fladd@b^0,w,c
  4951   001C8C  5006               	movf	(___fladd@a+1)^0,w,c
  4952   001C8E  5802               	subwfb	(___fladd@b+1)^0,w,c
  4953   001C90  5007               	movf	(___fladd@a+2)^0,w,c
  4954   001C92  5803               	subwfb	(___fladd@b+2)^0,w,c
  4955   001C94  5004               	movf	(___fladd@b+3)^0,w,c
  4956   001C96  0A80               	xorlw	128
  4957   001C98  6E09               	movwf	??___fladd^0,c
  4958   001C9A  5008               	movf	(___fladd@a+3)^0,w,c
  4959   001C9C  0A80               	xorlw	128
  4960   001C9E  5809               	subwfb	??___fladd^0,w,c
  4961   001CA0  B0D8               	btfsc	status,0,c
  4962   001CA2  EF55  F00E         	goto	u2471
  4963   001CA6  EF57  F00E         	goto	u2470
  4964   001CAA                     u2471:
  4965   001CAA  EF82  F00E         	goto	l2751
  4966   001CAE                     u2470:
  4967   001CAE  5001               	movf	___fladd@b^0,w,c
  4968   001CB0  5C05               	subwf	___fladd@a^0,w,c
  4969   001CB2  6E09               	movwf	??___fladd^0,c
  4970   001CB4  5002               	movf	(___fladd@b+1)^0,w,c
  4971   001CB6  5806               	subwfb	(___fladd@a+1)^0,w,c
  4972   001CB8  6E0A               	movwf	(??___fladd+1)^0,c
  4973   001CBA  5003               	movf	(___fladd@b+2)^0,w,c
  4974   001CBC  5807               	subwfb	(___fladd@a+2)^0,w,c
  4975   001CBE  6E0B               	movwf	(??___fladd+2)^0,c
  4976   001CC0  5004               	movf	(___fladd@b+3)^0,w,c
  4977   001CC2  5808               	subwfb	(___fladd@a+3)^0,w,c
  4978   001CC4  6E0C               	movwf	(??___fladd+3)^0,c
  4979   001CC6  0EFF               	movlw	255
  4980   001CC8  2409               	addwf	??___fladd^0,w,c
  4981   001CCA  6E01               	movwf	___fladd@b^0,c
  4982   001CCC  0EFF               	movlw	255
  4983   001CCE  200A               	addwfc	(??___fladd+1)^0,w,c
  4984   001CD0  6E02               	movwf	(___fladd@b+1)^0,c
  4985   001CD2  0EFF               	movlw	255
  4986   001CD4  200B               	addwfc	(??___fladd+2)^0,w,c
  4987   001CD6  6E03               	movwf	(___fladd@b+2)^0,c
  4988   001CD8  0EFF               	movlw	255
  4989   001CDA  200C               	addwfc	(??___fladd+3)^0,w,c
  4990   001CDC  6E04               	movwf	(___fladd@b+3)^0,c
  4991   001CDE  0E80               	movlw	128
  4992   001CE0  1A0D               	xorwf	___fladd@signs^0,f,c
  4993   001CE2  6C10               	negf	___fladd@grs^0,c
  4994   001CE4  5010               	movf	___fladd@grs^0,w,c
  4995   001CE6  A4D8               	btfss	status,2,c
  4996   001CE8  EF78  F00E         	goto	u2481
  4997   001CEC  EF7A  F00E         	goto	u2480
  4998   001CF0                     u2481:
  4999   001CF0  EF8A  F00E         	goto	l734
  5000   001CF4                     u2480:
  5001   001CF4  0E01               	movlw	1
  5002   001CF6  2601               	addwf	___fladd@b^0,f,c
  5003   001CF8  0E00               	movlw	0
  5004   001CFA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5005   001CFC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5006   001CFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5007   001D00  EF8A  F00E         	goto	l734
  5008   001D04                     l2751:
  5009   001D04  5005               	movf	___fladd@a^0,w,c
  5010   001D06  5E01               	subwf	___fladd@b^0,f,c
  5011   001D08  5006               	movf	(___fladd@a+1)^0,w,c
  5012   001D0A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5013   001D0C  5007               	movf	(___fladd@a+2)^0,w,c
  5014   001D0E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5015   001D10  5008               	movf	(___fladd@a+3)^0,w,c
  5016   001D12  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5017   001D14                     l734:
  5018   001D14  5001               	movf	___fladd@b^0,w,c
  5019   001D16  1002               	iorwf	(___fladd@b+1)^0,w,c
  5020   001D18  1003               	iorwf	(___fladd@b+2)^0,w,c
  5021   001D1A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5022   001D1C  A4D8               	btfss	status,2,c
  5023   001D1E  EF93  F00E         	goto	u2491
  5024   001D22  EF95  F00E         	goto	u2490
  5025   001D26                     u2491:
  5026   001D26  EFCA  F00E         	goto	l2775
  5027   001D2A                     u2490:
  5028   001D2A  5010               	movf	___fladd@grs^0,w,c
  5029   001D2C  A4D8               	btfss	status,2,c
  5030   001D2E  EF9B  F00E         	goto	u2501
  5031   001D32  EF9D  F00E         	goto	u2500
  5032   001D36                     u2501:
  5033   001D36  EFCA  F00E         	goto	l2775
  5034   001D3A                     u2500:
  5035   001D3A  0E00               	movlw	0
  5036   001D3C  6E01               	movwf	?___fladd^0,c
  5037   001D3E  0E00               	movlw	0
  5038   001D40  6E02               	movwf	(?___fladd+1)^0,c
  5039   001D42  0E00               	movlw	0
  5040   001D44  6E03               	movwf	(?___fladd+2)^0,c
  5041   001D46  0E00               	movlw	0
  5042   001D48  6E04               	movwf	(?___fladd+3)^0,c
  5043   001D4A  EF65  F00F         	goto	l726
  5044   001D4E                     l2759:
  5045   001D4E  90D8               	bcf	status,0,c
  5046   001D50  3601               	rlcf	___fladd@b^0,f,c
  5047   001D52  3602               	rlcf	(___fladd@b+1)^0,f,c
  5048   001D54  3603               	rlcf	(___fladd@b+2)^0,f,c
  5049   001D56  3604               	rlcf	(___fladd@b+3)^0,f,c
  5050   001D58  AE10               	btfss	___fladd@grs^0,7,c
  5051   001D5A  EFB1  F00E         	goto	u2511
  5052   001D5E  EFB3  F00E         	goto	u2510
  5053   001D62                     u2511:
  5054   001D62  EFB4  F00E         	goto	l2765
  5055   001D66                     u2510:
  5056   001D66  8001               	bsf	___fladd@b^0,0,c
  5057   001D68                     l2765:
  5058   001D68  A010               	btfss	___fladd@grs^0,0,c
  5059   001D6A  EFB9  F00E         	goto	u2521
  5060   001D6E  EFBB  F00E         	goto	u2520
  5061   001D72                     u2521:
  5062   001D72  EFBF  F00E         	goto	l2769
  5063   001D76                     u2520:
  5064   001D76  80D8               	bsf	status,0,c
  5065   001D78  3610               	rlcf	___fladd@grs^0,f,c
  5066   001D7A  EFC1  F00E         	goto	l2771
  5067   001D7E                     l2769:
  5068   001D7E  90D8               	bcf	status,0,c
  5069   001D80  3610               	rlcf	___fladd@grs^0,f,c
  5070   001D82                     l2771:
  5071   001D82  500F               	movf	___fladd@bexp^0,w,c
  5072   001D84  B4D8               	btfsc	status,2,c
  5073   001D86  EFC7  F00E         	goto	u2531
  5074   001D8A  EFC9  F00E         	goto	u2530
  5075   001D8E                     u2531:
  5076   001D8E  EFCA  F00E         	goto	l2775
  5077   001D92                     u2530:
  5078   001D92  060F               	decf	___fladd@bexp^0,f,c
  5079   001D94                     l2775:
  5080   001D94  AE03               	btfss	(___fladd@b+2)^0,7,c
  5081   001D96  EFCF  F00E         	goto	u2541
  5082   001D9A  EFD1  F00E         	goto	u2540
  5083   001D9E                     u2541:
  5084   001D9E  EFA7  F00E         	goto	l2759
  5085   001DA2                     u2540:
  5086   001DA2                     l2777:
  5087   001DA2  0E00               	movlw	0
  5088   001DA4  6E0E               	movwf	___fladd@aexp^0,c
  5089   001DA6  AE10               	btfss	___fladd@grs^0,7,c
  5090   001DA8  EFD8  F00E         	goto	u2551
  5091   001DAC  EFDA  F00E         	goto	u2550
  5092   001DB0                     u2551:
  5093   001DB0  EFF2  F00E         	goto	l743
  5094   001DB4                     u2550:
  5095   001DB4  C010  F009         	movff	___fladd@grs,??___fladd
  5096   001DB8  0E7F               	movlw	127
  5097   001DBA  1609               	andwf	??___fladd^0,f,c
  5098   001DBC  B4D8               	btfsc	status,2,c
  5099   001DBE  EFE3  F00E         	goto	u2561
  5100   001DC2  EFE5  F00E         	goto	u2560
  5101   001DC6                     u2561:
  5102   001DC6  EFE9  F00E         	goto	l744
  5103   001DCA                     u2560:
  5104   001DCA                     l2783:
  5105   001DCA  0E01               	movlw	1
  5106   001DCC  6E0E               	movwf	___fladd@aexp^0,c
  5107   001DCE  EFF2  F00E         	goto	l743
  5108   001DD2                     l744:
  5109   001DD2  A001               	btfss	___fladd@b^0,0,c
  5110   001DD4  EFEE  F00E         	goto	u2571
  5111   001DD8  EFF0  F00E         	goto	u2570
  5112   001DDC                     u2571:
  5113   001DDC  EFF2  F00E         	goto	l743
  5114   001DE0                     u2570:
  5115   001DE0  EFE5  F00E         	goto	l2783
  5116   001DE4                     l743:
  5117   001DE4  500E               	movf	___fladd@aexp^0,w,c
  5118   001DE6  B4D8               	btfsc	status,2,c
  5119   001DE8  EFF8  F00E         	goto	u2581
  5120   001DEC  EFFA  F00E         	goto	u2580
  5121   001DF0                     u2581:
  5122   001DF0  EF25  F00F         	goto	l2795
  5123   001DF4                     u2580:
  5124   001DF4  0E01               	movlw	1
  5125   001DF6  2601               	addwf	___fladd@b^0,f,c
  5126   001DF8  0E00               	movlw	0
  5127   001DFA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5128   001DFC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5129   001DFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5130   001E00  A004               	btfss	(___fladd@b+3)^0,0,c
  5131   001E02  EF05  F00F         	goto	u2591
  5132   001E06  EF07  F00F         	goto	u2590
  5133   001E0A                     u2591:
  5134   001E0A  EF25  F00F         	goto	l2795
  5135   001E0E                     u2590:
  5136   001E0E  C001  F009         	movff	___fladd@b,??___fladd
  5137   001E12  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5138   001E16  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5139   001E1A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5140   001E1E  340C               	rlcf	(??___fladd+3)^0,w,c
  5141   001E20  320C               	rrcf	(??___fladd+3)^0,f,c
  5142   001E22  320B               	rrcf	(??___fladd+2)^0,f,c
  5143   001E24  320A               	rrcf	(??___fladd+1)^0,f,c
  5144   001E26  3209               	rrcf	??___fladd^0,f,c
  5145   001E28  C009  F001         	movff	??___fladd,___fladd@b
  5146   001E2C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5147   001E30  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5148   001E34  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5149   001E38  280F               	incf	___fladd@bexp^0,w,c
  5150   001E3A  B4D8               	btfsc	status,2,c
  5151   001E3C  EF22  F00F         	goto	u2601
  5152   001E40  EF24  F00F         	goto	u2600
  5153   001E44                     u2601:
  5154   001E44  EF25  F00F         	goto	l2795
  5155   001E48                     u2600:
  5156   001E48  2A0F               	incf	___fladd@bexp^0,f,c
  5157   001E4A                     l2795:
  5158   001E4A  280F               	incf	___fladd@bexp^0,w,c
  5159   001E4C  B4D8               	btfsc	status,2,c
  5160   001E4E  EF2B  F00F         	goto	u2611
  5161   001E52  EF2D  F00F         	goto	u2610
  5162   001E56                     u2611:
  5163   001E56  EF35  F00F         	goto	l2799
  5164   001E5A                     u2610:
  5165   001E5A  500F               	movf	___fladd@bexp^0,w,c
  5166   001E5C  A4D8               	btfss	status,2,c
  5167   001E5E  EF33  F00F         	goto	u2621
  5168   001E62  EF35  F00F         	goto	u2620
  5169   001E66                     u2621:
  5170   001E66  EF47  F00F         	goto	l2803
  5171   001E6A                     u2620:
  5172   001E6A                     l2799:
  5173   001E6A  0E00               	movlw	0
  5174   001E6C  6E01               	movwf	___fladd@b^0,c
  5175   001E6E  0E00               	movlw	0
  5176   001E70  6E02               	movwf	(___fladd@b+1)^0,c
  5177   001E72  0E00               	movlw	0
  5178   001E74  6E03               	movwf	(___fladd@b+2)^0,c
  5179   001E76  0E00               	movlw	0
  5180   001E78  6E04               	movwf	(___fladd@b+3)^0,c
  5181   001E7A  500F               	movf	___fladd@bexp^0,w,c
  5182   001E7C  A4D8               	btfss	status,2,c
  5183   001E7E  EF43  F00F         	goto	u2631
  5184   001E82  EF45  F00F         	goto	u2630
  5185   001E86                     u2631:
  5186   001E86  EF47  F00F         	goto	l2803
  5187   001E8A                     u2630:
  5188   001E8A  0E00               	movlw	0
  5189   001E8C  6E0D               	movwf	___fladd@signs^0,c
  5190   001E8E                     l2803:
  5191   001E8E  A00F               	btfss	___fladd@bexp^0,0,c
  5192   001E90  EF4C  F00F         	goto	u2641
  5193   001E94  EF4E  F00F         	goto	u2640
  5194   001E98                     u2641:
  5195   001E98  EF51  F00F         	goto	l2807
  5196   001E9C                     u2640:
  5197   001E9C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5198   001E9E  EF52  F00F         	goto	l2809
  5199   001EA2                     l2807:
  5200   001EA2  9E03               	bcf	(___fladd@b+2)^0,7,c
  5201   001EA4                     l2809:
  5202   001EA4  90D8               	bcf	status,0,c
  5203   001EA6  300F               	rrcf	___fladd@bexp^0,w,c
  5204   001EA8  6E04               	movwf	(___fladd@b+3)^0,c
  5205   001EAA  AE0D               	btfss	___fladd@signs^0,7,c
  5206   001EAC  EF5A  F00F         	goto	u2651
  5207   001EB0  EF5C  F00F         	goto	u2650
  5208   001EB4                     u2651:
  5209   001EB4  EF5D  F00F         	goto	l2815
  5210   001EB8                     u2650:
  5211   001EB8  8E04               	bsf	(___fladd@b+3)^0,7,c
  5212   001EBA                     l2815:
  5213   001EBA  C001  F001         	movff	___fladd@b,?___fladd
  5214   001EBE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5215   001EC2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5216   001EC6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5217   001ECA                     l726:
  5218   001ECA  0012               	return		;funcret
  5219   001ECC                     __end_of___fladd:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function ___flneg *****************
  5223 ;; Defined at:
  5224 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  f1              4    0[COMRAM] unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  4    0[COMRAM] unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;Total ram usage:        4 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_efgtoa
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text17
  5252   003E64                     __ptext17:
  5253                           	callstack 0
  5254   003E64                     ___flneg:
  5255                           	callstack 26
  5256   003E64  5001               	movf	___flneg@f1^0,w,c
  5257   003E66  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5258   003E68  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5259   003E6A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5260   003E6C  B4D8               	btfsc	status,2,c
  5261   003E6E  EF3B  F01F         	goto	u3291
  5262   003E72  EF3D  F01F         	goto	u3290
  5263   003E76                     u3291:
  5264   003E76  EF45  F01F         	goto	l3229
  5265   003E7A                     u3290:
  5266   003E7A  0E00               	movlw	0
  5267   003E7C  1A01               	xorwf	___flneg@f1^0,f,c
  5268   003E7E  0E00               	movlw	0
  5269   003E80  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5270   003E82  0E00               	movlw	0
  5271   003E84  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5272   003E86  0E80               	movlw	128
  5273   003E88  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5274   003E8A                     l3229:
  5275   003E8A  C001  F001         	movff	___flneg@f1,?___flneg
  5276   003E8E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5277   003E92  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5278   003E96  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5279   003E9A  0012               	return		;funcret
  5280   003E9C                     __end_of___flneg:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function ___flmul *****************
  5284 ;; Defined at:
  5285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  b               4    0[COMRAM] unsigned char 
  5288 ;;  a               4    4[COMRAM] unsigned char 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  prod            4   19[COMRAM] struct .
  5291 ;;  grs             4   13[COMRAM] unsigned long 
  5292 ;;  temp            2   23[COMRAM] struct .
  5293 ;;  bexp            1   18[COMRAM] unsigned char 
  5294 ;;  aexp            1   17[COMRAM] unsigned char 
  5295 ;;  sign            1   12[COMRAM] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  4    0[COMRAM] unsigned char 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, prodl, prodh
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:       25 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_writeData16
  5315 ;;		_efgtoa
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text18
  5320   001ECC                     __ptext18:
  5321                           	callstack 0
  5322   001ECC                     ___flmul:
  5323                           	callstack 29
  5324   001ECC  5004               	movf	(___flmul@b+3)^0,w,c
  5325   001ECE  0B80               	andlw	128
  5326   001ED0  6E0D               	movwf	___flmul@sign^0,c
  5327   001ED2  5004               	movf	(___flmul@b+3)^0,w,c
  5328   001ED4  2404               	addwf	(___flmul@b+3)^0,w,c
  5329   001ED6  6E13               	movwf	___flmul@bexp^0,c
  5330   001ED8  AE03               	btfss	(___flmul@b+2)^0,7,c
  5331   001EDA  EF71  F00F         	goto	u2901
  5332   001EDE  EF73  F00F         	goto	u2900
  5333   001EE2                     u2901:
  5334   001EE2  EF74  F00F         	goto	l2977
  5335   001EE6                     u2900:
  5336   001EE6  8013               	bsf	___flmul@bexp^0,0,c
  5337   001EE8                     l2977:
  5338   001EE8  5013               	movf	___flmul@bexp^0,w,c
  5339   001EEA  B4D8               	btfsc	status,2,c
  5340   001EEC  EF7A  F00F         	goto	u2911
  5341   001EF0  EF7C  F00F         	goto	u2910
  5342   001EF4                     u2911:
  5343   001EF4  EF8F  F00F         	goto	l2985
  5344   001EF8                     u2910:
  5345   001EF8  2813               	incf	___flmul@bexp^0,w,c
  5346   001EFA  A4D8               	btfss	status,2,c
  5347   001EFC  EF82  F00F         	goto	u2921
  5348   001F00  EF84  F00F         	goto	u2920
  5349   001F04                     u2921:
  5350   001F04  EF8C  F00F         	goto	l2983
  5351   001F08                     u2920:
  5352   001F08  0E00               	movlw	0
  5353   001F0A  6E01               	movwf	___flmul@b^0,c
  5354   001F0C  0E00               	movlw	0
  5355   001F0E  6E02               	movwf	(___flmul@b+1)^0,c
  5356   001F10  0E00               	movlw	0
  5357   001F12  6E03               	movwf	(___flmul@b+2)^0,c
  5358   001F14  0E00               	movlw	0
  5359   001F16  6E04               	movwf	(___flmul@b+3)^0,c
  5360   001F18                     l2983:
  5361   001F18  8E03               	bsf	(___flmul@b+2)^0,7,c
  5362   001F1A  EF97  F00F         	goto	l2987
  5363   001F1E                     l2985:
  5364   001F1E  0E00               	movlw	0
  5365   001F20  6E01               	movwf	___flmul@b^0,c
  5366   001F22  0E00               	movlw	0
  5367   001F24  6E02               	movwf	(___flmul@b+1)^0,c
  5368   001F26  0E00               	movlw	0
  5369   001F28  6E03               	movwf	(___flmul@b+2)^0,c
  5370   001F2A  0E00               	movlw	0
  5371   001F2C  6E04               	movwf	(___flmul@b+3)^0,c
  5372   001F2E                     l2987:
  5373   001F2E  5008               	movf	(___flmul@a+3)^0,w,c
  5374   001F30  0B80               	andlw	128
  5375   001F32  1A0D               	xorwf	___flmul@sign^0,f,c
  5376   001F34  5008               	movf	(___flmul@a+3)^0,w,c
  5377   001F36  2408               	addwf	(___flmul@a+3)^0,w,c
  5378   001F38  6E12               	movwf	___flmul@aexp^0,c
  5379   001F3A  AE07               	btfss	(___flmul@a+2)^0,7,c
  5380   001F3C  EFA2  F00F         	goto	u2931
  5381   001F40  EFA4  F00F         	goto	u2930
  5382   001F44                     u2931:
  5383   001F44  EFA5  F00F         	goto	l2995
  5384   001F48                     u2930:
  5385   001F48  8012               	bsf	___flmul@aexp^0,0,c
  5386   001F4A                     l2995:
  5387   001F4A  5012               	movf	___flmul@aexp^0,w,c
  5388   001F4C  B4D8               	btfsc	status,2,c
  5389   001F4E  EFAB  F00F         	goto	u2941
  5390   001F52  EFAD  F00F         	goto	u2940
  5391   001F56                     u2941:
  5392   001F56  EFC0  F00F         	goto	l3003
  5393   001F5A                     u2940:
  5394   001F5A  2812               	incf	___flmul@aexp^0,w,c
  5395   001F5C  A4D8               	btfss	status,2,c
  5396   001F5E  EFB3  F00F         	goto	u2951
  5397   001F62  EFB5  F00F         	goto	u2950
  5398   001F66                     u2951:
  5399   001F66  EFBD  F00F         	goto	l3001
  5400   001F6A                     u2950:
  5401   001F6A  0E00               	movlw	0
  5402   001F6C  6E05               	movwf	___flmul@a^0,c
  5403   001F6E  0E00               	movlw	0
  5404   001F70  6E06               	movwf	(___flmul@a+1)^0,c
  5405   001F72  0E00               	movlw	0
  5406   001F74  6E07               	movwf	(___flmul@a+2)^0,c
  5407   001F76  0E00               	movlw	0
  5408   001F78  6E08               	movwf	(___flmul@a+3)^0,c
  5409   001F7A                     l3001:
  5410   001F7A  8E07               	bsf	(___flmul@a+2)^0,7,c
  5411   001F7C  EFC8  F00F         	goto	l803
  5412   001F80                     l3003:
  5413   001F80  0E00               	movlw	0
  5414   001F82  6E05               	movwf	___flmul@a^0,c
  5415   001F84  0E00               	movlw	0
  5416   001F86  6E06               	movwf	(___flmul@a+1)^0,c
  5417   001F88  0E00               	movlw	0
  5418   001F8A  6E07               	movwf	(___flmul@a+2)^0,c
  5419   001F8C  0E00               	movlw	0
  5420   001F8E  6E08               	movwf	(___flmul@a+3)^0,c
  5421   001F90                     l803:
  5422   001F90  5012               	movf	___flmul@aexp^0,w,c
  5423   001F92  B4D8               	btfsc	status,2,c
  5424   001F94  EFCE  F00F         	goto	u2961
  5425   001F98  EFD0  F00F         	goto	u2960
  5426   001F9C                     u2961:
  5427   001F9C  EFD8  F00F         	goto	l3007
  5428   001FA0                     u2960:
  5429   001FA0  5013               	movf	___flmul@bexp^0,w,c
  5430   001FA2  A4D8               	btfss	status,2,c
  5431   001FA4  EFD6  F00F         	goto	u2971
  5432   001FA8  EFD8  F00F         	goto	u2970
  5433   001FAC                     u2971:
  5434   001FAC  EFE2  F00F         	goto	l3011
  5435   001FB0                     u2970:
  5436   001FB0                     l3007:
  5437   001FB0  0E00               	movlw	0
  5438   001FB2  6E01               	movwf	?___flmul^0,c
  5439   001FB4  0E00               	movlw	0
  5440   001FB6  6E02               	movwf	(?___flmul+1)^0,c
  5441   001FB8  0E00               	movlw	0
  5442   001FBA  6E03               	movwf	(?___flmul+2)^0,c
  5443   001FBC  0E00               	movlw	0
  5444   001FBE  6E04               	movwf	(?___flmul+3)^0,c
  5445   001FC0  EF8C  F011         	goto	l807
  5446   001FC4                     l3011:
  5447   001FC4  5007               	movf	(___flmul@a+2)^0,w,c
  5448   001FC6  0201               	mulwf	___flmul@b^0,c
  5449   001FC8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5450   001FCE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5451   001FD4  5018               	movf	___flmul@temp^0,w,c
  5452   001FD6  6E0E               	movwf	___flmul@grs^0,c
  5453   001FD8  6A0F               	clrf	(___flmul@grs+1)^0,c
  5454   001FDA  6A10               	clrf	(___flmul@grs+2)^0,c
  5455   001FDC  6A11               	clrf	(___flmul@grs+3)^0,c
  5456   001FDE  5019               	movf	(___flmul@temp+1)^0,w,c
  5457   001FE0  6E14               	movwf	___flmul@prod^0,c
  5458   001FE2  6A15               	clrf	(___flmul@prod+1)^0,c
  5459   001FE4  6A16               	clrf	(___flmul@prod+2)^0,c
  5460   001FE6  6A17               	clrf	(___flmul@prod+3)^0,c
  5461   001FE8  5006               	movf	(___flmul@a+1)^0,w,c
  5462   001FEA  0202               	mulwf	(___flmul@b+1)^0,c
  5463   001FEC  006F FFCC  F018    	movff	prodl,___flmul@temp
  5464   001FF2  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5465   001FF8  5018               	movf	___flmul@temp^0,w,c
  5466   001FFA  260E               	addwf	___flmul@grs^0,f,c
  5467   001FFC  0E00               	movlw	0
  5468   001FFE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5469   002000  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5470   002002  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5471   002004  5019               	movf	(___flmul@temp+1)^0,w,c
  5472   002006  2614               	addwf	___flmul@prod^0,f,c
  5473   002008  0E00               	movlw	0
  5474   00200A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5475   00200C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5476   00200E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5477   002010  5005               	movf	___flmul@a^0,w,c
  5478   002012  0203               	mulwf	(___flmul@b+2)^0,c
  5479   002014  006F FFCC  F018    	movff	prodl,___flmul@temp
  5480   00201A  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5481   002020  5018               	movf	___flmul@temp^0,w,c
  5482   002022  260E               	addwf	___flmul@grs^0,f,c
  5483   002024  0E00               	movlw	0
  5484   002026  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5485   002028  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5486   00202A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5487   00202C  5019               	movf	(___flmul@temp+1)^0,w,c
  5488   00202E  2614               	addwf	___flmul@prod^0,f,c
  5489   002030  0E00               	movlw	0
  5490   002032  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5491   002034  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5492   002036  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5493   002038  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5494   00203C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5495   002040  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5496   002044  6A0E               	clrf	___flmul@grs^0,c
  5497   002046  5005               	movf	___flmul@a^0,w,c
  5498   002048  0202               	mulwf	(___flmul@b+1)^0,c
  5499   00204A  006F FFCC  F018    	movff	prodl,___flmul@temp
  5500   002050  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5501   002056  5018               	movf	___flmul@temp^0,w,c
  5502   002058  260E               	addwf	___flmul@grs^0,f,c
  5503   00205A  5019               	movf	(___flmul@temp+1)^0,w,c
  5504   00205C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5505   00205E  0E00               	movlw	0
  5506   002060  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5507   002062  0E00               	movlw	0
  5508   002064  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5509   002066  5006               	movf	(___flmul@a+1)^0,w,c
  5510   002068  0201               	mulwf	___flmul@b^0,c
  5511   00206A  006F FFCC  F018    	movff	prodl,___flmul@temp
  5512   002070  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5513   002076  5018               	movf	___flmul@temp^0,w,c
  5514   002078  260E               	addwf	___flmul@grs^0,f,c
  5515   00207A  5019               	movf	(___flmul@temp+1)^0,w,c
  5516   00207C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5517   00207E  0E00               	movlw	0
  5518   002080  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5519   002082  0E00               	movlw	0
  5520   002084  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5521   002086  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5522   00208A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5523   00208E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5524   002092  6A0E               	clrf	___flmul@grs^0,c
  5525   002094  5005               	movf	___flmul@a^0,w,c
  5526   002096  0201               	mulwf	___flmul@b^0,c
  5527   002098  006F FFCC  F018    	movff	prodl,___flmul@temp
  5528   00209E  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5529   0020A4  5018               	movf	___flmul@temp^0,w,c
  5530   0020A6  260E               	addwf	___flmul@grs^0,f,c
  5531   0020A8  5019               	movf	(___flmul@temp+1)^0,w,c
  5532   0020AA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5533   0020AC  0E00               	movlw	0
  5534   0020AE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5535   0020B0  0E00               	movlw	0
  5536   0020B2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5537   0020B4  5007               	movf	(___flmul@a+2)^0,w,c
  5538   0020B6  0202               	mulwf	(___flmul@b+1)^0,c
  5539   0020B8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5540   0020BE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5541   0020C4  5018               	movf	___flmul@temp^0,w,c
  5542   0020C6  2614               	addwf	___flmul@prod^0,f,c
  5543   0020C8  5019               	movf	(___flmul@temp+1)^0,w,c
  5544   0020CA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5545   0020CC  0E00               	movlw	0
  5546   0020CE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5547   0020D0  0E00               	movlw	0
  5548   0020D2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5549   0020D4  5006               	movf	(___flmul@a+1)^0,w,c
  5550   0020D6  0203               	mulwf	(___flmul@b+2)^0,c
  5551   0020D8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5552   0020DE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5553   0020E4  5018               	movf	___flmul@temp^0,w,c
  5554   0020E6  2614               	addwf	___flmul@prod^0,f,c
  5555   0020E8  5019               	movf	(___flmul@temp+1)^0,w,c
  5556   0020EA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5557   0020EC  0E00               	movlw	0
  5558   0020EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5559   0020F0  0E00               	movlw	0
  5560   0020F2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5561   0020F4  5007               	movf	(___flmul@a+2)^0,w,c
  5562   0020F6  0203               	mulwf	(___flmul@b+2)^0,c
  5563   0020F8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5564   0020FE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5565   002104  5018               	movf	___flmul@temp^0,w,c
  5566   002106  6E09               	movwf	??___flmul^0,c
  5567   002108  5019               	movf	(___flmul@temp+1)^0,w,c
  5568   00210A  6E0A               	movwf	(??___flmul+1)^0,c
  5569   00210C  6A0B               	clrf	(??___flmul+2)^0,c
  5570   00210E  6A0C               	clrf	(??___flmul+3)^0,c
  5571   002110  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5572   002114  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5573   002118  C009  F00A         	movff	??___flmul,??___flmul+1
  5574   00211C  6A09               	clrf	??___flmul^0,c
  5575   00211E  5009               	movf	??___flmul^0,w,c
  5576   002120  2614               	addwf	___flmul@prod^0,f,c
  5577   002122  500A               	movf	(??___flmul+1)^0,w,c
  5578   002124  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5579   002126  500B               	movf	(??___flmul+2)^0,w,c
  5580   002128  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5581   00212A  500C               	movf	(??___flmul+3)^0,w,c
  5582   00212C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5583   00212E  C00E  F009         	movff	___flmul@grs,??___flmul
  5584   002132  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5585   002136  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5586   00213A  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5587   00213E  0E19               	movlw	25
  5588   002140  EFA7  F010         	goto	u2980
  5589   002144                     u2985:
  5590   002144  90D8               	bcf	status,0,c
  5591   002146  320C               	rrcf	(??___flmul+3)^0,f,c
  5592   002148  320B               	rrcf	(??___flmul+2)^0,f,c
  5593   00214A  320A               	rrcf	(??___flmul+1)^0,f,c
  5594   00214C  3209               	rrcf	??___flmul^0,f,c
  5595   00214E                     u2980:
  5596   00214E  2EE8               	decfsz	wreg,f,c
  5597   002150  EFA2  F010         	goto	u2985
  5598   002154  5009               	movf	??___flmul^0,w,c
  5599   002156  2614               	addwf	___flmul@prod^0,f,c
  5600   002158  500A               	movf	(??___flmul+1)^0,w,c
  5601   00215A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5602   00215C  500B               	movf	(??___flmul+2)^0,w,c
  5603   00215E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5604   002160  500C               	movf	(??___flmul+3)^0,w,c
  5605   002162  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5606   002164  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5607   002168  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5608   00216C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5609   002170  6A0E               	clrf	___flmul@grs^0,c
  5610   002172  5012               	movf	___flmul@aexp^0,w,c
  5611   002174  C013  F009         	movff	___flmul@bexp,??___flmul
  5612   002178  6A0A               	clrf	(??___flmul+1)^0,c
  5613   00217A  2609               	addwf	??___flmul^0,f,c
  5614   00217C  0E00               	movlw	0
  5615   00217E  220A               	addwfc	(??___flmul+1)^0,f,c
  5616   002180  0E82               	movlw	130
  5617   002182  2409               	addwf	??___flmul^0,w,c
  5618   002184  6E18               	movwf	___flmul@temp^0,c
  5619   002186  0EFF               	movlw	255
  5620   002188  200A               	addwfc	(??___flmul+1)^0,w,c
  5621   00218A  6E19               	movwf	(___flmul@temp+1)^0,c
  5622   00218C  EFDD  F010         	goto	l3059
  5623   002190                     l3053:
  5624   002190  90D8               	bcf	status,0,c
  5625   002192  3614               	rlcf	___flmul@prod^0,f,c
  5626   002194  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5627   002196  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5628   002198  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5629   00219A  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5630   00219C  EFD2  F010         	goto	u2991
  5631   0021A0  EFD4  F010         	goto	u2990
  5632   0021A4                     u2991:
  5633   0021A4  EFD5  F010         	goto	l810
  5634   0021A8                     u2990:
  5635   0021A8  8014               	bsf	___flmul@prod^0,0,c
  5636   0021AA                     l810:
  5637   0021AA  90D8               	bcf	status,0,c
  5638   0021AC  360E               	rlcf	___flmul@grs^0,f,c
  5639   0021AE  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5640   0021B0  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5641   0021B2  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5642   0021B4  0618               	decf	___flmul@temp^0,f,c
  5643   0021B6  A0D8               	btfss	status,0,c
  5644   0021B8  0619               	decf	(___flmul@temp+1)^0,f,c
  5645   0021BA                     l3059:
  5646   0021BA  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5647   0021BC  EFE2  F010         	goto	u3001
  5648   0021C0  EFE4  F010         	goto	u3000
  5649   0021C4                     u3001:
  5650   0021C4  EFC8  F010         	goto	l3053
  5651   0021C8                     u3000:
  5652   0021C8  0E00               	movlw	0
  5653   0021CA  6E12               	movwf	___flmul@aexp^0,c
  5654   0021CC  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5655   0021CE  EFEB  F010         	goto	u3011
  5656   0021D2  EFED  F010         	goto	u3010
  5657   0021D6                     u3011:
  5658   0021D6  EF11  F011         	goto	l812
  5659   0021DA                     u3010:
  5660   0021DA  0EFF               	movlw	255
  5661   0021DC  140E               	andwf	___flmul@grs^0,w,c
  5662   0021DE  6E09               	movwf	??___flmul^0,c
  5663   0021E0  0EFF               	movlw	255
  5664   0021E2  140F               	andwf	(___flmul@grs+1)^0,w,c
  5665   0021E4  6E0A               	movwf	(??___flmul+1)^0,c
  5666   0021E6  0EFF               	movlw	255
  5667   0021E8  1410               	andwf	(___flmul@grs+2)^0,w,c
  5668   0021EA  6E0B               	movwf	(??___flmul+2)^0,c
  5669   0021EC  0E7F               	movlw	127
  5670   0021EE  1411               	andwf	(___flmul@grs+3)^0,w,c
  5671   0021F0  6E0C               	movwf	(??___flmul+3)^0,c
  5672   0021F2  5009               	movf	??___flmul^0,w,c
  5673   0021F4  100A               	iorwf	(??___flmul+1)^0,w,c
  5674   0021F6  100B               	iorwf	(??___flmul+2)^0,w,c
  5675   0021F8  100C               	iorwf	(??___flmul+3)^0,w,c
  5676   0021FA  B4D8               	btfsc	status,2,c
  5677   0021FC  EF02  F011         	goto	u3021
  5678   002200  EF04  F011         	goto	u3020
  5679   002204                     u3021:
  5680   002204  EF08  F011         	goto	l813
  5681   002208                     u3020:
  5682   002208                     l3067:
  5683   002208  0E01               	movlw	1
  5684   00220A  6E12               	movwf	___flmul@aexp^0,c
  5685   00220C  EF11  F011         	goto	l812
  5686   002210                     l813:
  5687   002210  A014               	btfss	___flmul@prod^0,0,c
  5688   002212  EF0D  F011         	goto	u3031
  5689   002216  EF0F  F011         	goto	u3030
  5690   00221A                     u3031:
  5691   00221A  EF11  F011         	goto	l812
  5692   00221E                     u3030:
  5693   00221E  EF04  F011         	goto	l3067
  5694   002222                     l812:
  5695   002222  5012               	movf	___flmul@aexp^0,w,c
  5696   002224  B4D8               	btfsc	status,2,c
  5697   002226  EF17  F011         	goto	u3041
  5698   00222A  EF19  F011         	goto	u3040
  5699   00222E                     u3041:
  5700   00222E  EF3D  F011         	goto	l3079
  5701   002232                     u3040:
  5702   002232  0E01               	movlw	1
  5703   002234  2614               	addwf	___flmul@prod^0,f,c
  5704   002236  0E00               	movlw	0
  5705   002238  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5706   00223A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5707   00223C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5708   00223E  A017               	btfss	(___flmul@prod+3)^0,0,c
  5709   002240  EF24  F011         	goto	u3051
  5710   002244  EF26  F011         	goto	u3050
  5711   002248                     u3051:
  5712   002248  EF3D  F011         	goto	l3079
  5713   00224C                     u3050:
  5714   00224C  C014  F009         	movff	___flmul@prod,??___flmul
  5715   002250  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5716   002254  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5717   002258  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5718   00225C  340C               	rlcf	(??___flmul+3)^0,w,c
  5719   00225E  320C               	rrcf	(??___flmul+3)^0,f,c
  5720   002260  320B               	rrcf	(??___flmul+2)^0,f,c
  5721   002262  320A               	rrcf	(??___flmul+1)^0,f,c
  5722   002264  3209               	rrcf	??___flmul^0,f,c
  5723   002266  C009  F014         	movff	??___flmul,___flmul@prod
  5724   00226A  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5725   00226E  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5726   002272  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5727   002276  4A18               	infsnz	___flmul@temp^0,f,c
  5728   002278  2A19               	incf	(___flmul@temp+1)^0,f,c
  5729   00227A                     l3079:
  5730   00227A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5731   00227C  EF48  F011         	goto	u3061
  5732   002280  5019               	movf	(___flmul@temp+1)^0,w,c
  5733   002282  E108               	bnz	u3060
  5734   002284  2818               	incf	___flmul@temp^0,w,c
  5735   002286  A0D8               	btfss	status,0,c
  5736   002288  EF48  F011         	goto	u3061
  5737   00228C  EF4A  F011         	goto	u3060
  5738   002290                     u3061:
  5739   002290  EF54  F011         	goto	l3083
  5740   002294                     u3060:
  5741   002294  0E00               	movlw	0
  5742   002296  6E14               	movwf	___flmul@prod^0,c
  5743   002298  0E00               	movlw	0
  5744   00229A  6E15               	movwf	(___flmul@prod+1)^0,c
  5745   00229C  0E80               	movlw	128
  5746   00229E  6E16               	movwf	(___flmul@prod+2)^0,c
  5747   0022A0  0E7F               	movlw	127
  5748   0022A2  6E17               	movwf	(___flmul@prod+3)^0,c
  5749   0022A4  EF82  F011         	goto	l3095
  5750   0022A8                     l3083:
  5751   0022A8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5752   0022AA  EF61  F011         	goto	u3070
  5753   0022AE  5019               	movf	(___flmul@temp+1)^0,w,c
  5754   0022B0  E106               	bnz	u3071
  5755   0022B2  0418               	decf	___flmul@temp^0,w,c
  5756   0022B4  B0D8               	btfsc	status,0,c
  5757   0022B6  EF5F  F011         	goto	u3071
  5758   0022BA  EF61  F011         	goto	u3070
  5759   0022BE                     u3071:
  5760   0022BE  EF6D  F011         	goto	l820
  5761   0022C2                     u3070:
  5762   0022C2  0E00               	movlw	0
  5763   0022C4  6E14               	movwf	___flmul@prod^0,c
  5764   0022C6  0E00               	movlw	0
  5765   0022C8  6E15               	movwf	(___flmul@prod+1)^0,c
  5766   0022CA  0E00               	movlw	0
  5767   0022CC  6E16               	movwf	(___flmul@prod+2)^0,c
  5768   0022CE  0E00               	movlw	0
  5769   0022D0  6E17               	movwf	(___flmul@prod+3)^0,c
  5770   0022D2  0E00               	movlw	0
  5771   0022D4  6E0D               	movwf	___flmul@sign^0,c
  5772   0022D6  EF82  F011         	goto	l3095
  5773   0022DA                     l820:
  5774   0022DA  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5775   0022DE  0EFF               	movlw	255
  5776   0022E0  1614               	andwf	___flmul@prod^0,f,c
  5777   0022E2  0EFF               	movlw	255
  5778   0022E4  1615               	andwf	(___flmul@prod+1)^0,f,c
  5779   0022E6  0E7F               	movlw	127
  5780   0022E8  1616               	andwf	(___flmul@prod+2)^0,f,c
  5781   0022EA  0E00               	movlw	0
  5782   0022EC  1617               	andwf	(___flmul@prod+3)^0,f,c
  5783   0022EE  A013               	btfss	___flmul@bexp^0,0,c
  5784   0022F0  EF7C  F011         	goto	u3081
  5785   0022F4  EF7E  F011         	goto	u3080
  5786   0022F8                     u3081:
  5787   0022F8  EF7F  F011         	goto	l3093
  5788   0022FC                     u3080:
  5789   0022FC  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5790   0022FE                     l3093:
  5791   0022FE  90D8               	bcf	status,0,c
  5792   002300  3013               	rrcf	___flmul@bexp^0,w,c
  5793   002302  6E17               	movwf	(___flmul@prod+3)^0,c
  5794   002304                     l3095:
  5795   002304  500D               	movf	___flmul@sign^0,w,c
  5796   002306  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5797   002308  C014  F001         	movff	___flmul@prod,?___flmul
  5798   00230C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5799   002310  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5800   002314  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5801   002318                     l807:
  5802   002318  0012               	return		;funcret
  5803   00231A                     __end_of___flmul:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function ___flge *****************
  5807 ;; Defined at:
  5808 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  ff1             4   25[COMRAM] unsigned char 
  5811 ;;  ff2             4   29[COMRAM] unsigned char 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;		None               void
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:       12 bytes
  5828 ;; Hardware stack levels used: 1
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_efgtoa
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text19
  5837   003210                     __ptext19:
  5838                           	callstack 0
  5839   003210                     ___flge:
  5840                           	callstack 26
  5841   003210  0E00               	movlw	0
  5842   003212  141A               	andwf	___flge@ff1^0,w,c
  5843   003214  6E22               	movwf	??___flge^0,c
  5844   003216  0E00               	movlw	0
  5845   003218  141B               	andwf	(___flge@ff1+1)^0,w,c
  5846   00321A  6E23               	movwf	(??___flge+1)^0,c
  5847   00321C  0E80               	movlw	128
  5848   00321E  141C               	andwf	(___flge@ff1+2)^0,w,c
  5849   003220  6E24               	movwf	(??___flge+2)^0,c
  5850   003222  0E7F               	movlw	127
  5851   003224  141D               	andwf	(___flge@ff1+3)^0,w,c
  5852   003226  6E25               	movwf	(??___flge+3)^0,c
  5853   003228  5022               	movf	??___flge^0,w,c
  5854   00322A  1023               	iorwf	(??___flge+1)^0,w,c
  5855   00322C  1024               	iorwf	(??___flge+2)^0,w,c
  5856   00322E  1025               	iorwf	(??___flge+3)^0,w,c
  5857   003230  A4D8               	btfss	status,2,c
  5858   003232  EF1D  F019         	goto	u3241
  5859   003236  EF1F  F019         	goto	u3240
  5860   00323A                     u3241:
  5861   00323A  EF27  F019         	goto	l3207
  5862   00323E                     u3240:
  5863   00323E  0E00               	movlw	0
  5864   003240  6E1A               	movwf	___flge@ff1^0,c
  5865   003242  0E00               	movlw	0
  5866   003244  6E1B               	movwf	(___flge@ff1+1)^0,c
  5867   003246  0E00               	movlw	0
  5868   003248  6E1C               	movwf	(___flge@ff1+2)^0,c
  5869   00324A  0E00               	movlw	0
  5870   00324C  6E1D               	movwf	(___flge@ff1+3)^0,c
  5871   00324E                     l3207:
  5872   00324E  0E00               	movlw	0
  5873   003250  141E               	andwf	___flge@ff2^0,w,c
  5874   003252  6E22               	movwf	??___flge^0,c
  5875   003254  0E00               	movlw	0
  5876   003256  141F               	andwf	(___flge@ff2+1)^0,w,c
  5877   003258  6E23               	movwf	(??___flge+1)^0,c
  5878   00325A  0E80               	movlw	128
  5879   00325C  1420               	andwf	(___flge@ff2+2)^0,w,c
  5880   00325E  6E24               	movwf	(??___flge+2)^0,c
  5881   003260  0E7F               	movlw	127
  5882   003262  1421               	andwf	(___flge@ff2+3)^0,w,c
  5883   003264  6E25               	movwf	(??___flge+3)^0,c
  5884   003266  5022               	movf	??___flge^0,w,c
  5885   003268  1023               	iorwf	(??___flge+1)^0,w,c
  5886   00326A  1024               	iorwf	(??___flge+2)^0,w,c
  5887   00326C  1025               	iorwf	(??___flge+3)^0,w,c
  5888   00326E  A4D8               	btfss	status,2,c
  5889   003270  EF3C  F019         	goto	u3251
  5890   003274  EF3E  F019         	goto	u3250
  5891   003278                     u3251:
  5892   003278  EF46  F019         	goto	l3211
  5893   00327C                     u3250:
  5894   00327C  0E00               	movlw	0
  5895   00327E  6E1E               	movwf	___flge@ff2^0,c
  5896   003280  0E00               	movlw	0
  5897   003282  6E1F               	movwf	(___flge@ff2+1)^0,c
  5898   003284  0E00               	movlw	0
  5899   003286  6E20               	movwf	(___flge@ff2+2)^0,c
  5900   003288  0E00               	movlw	0
  5901   00328A  6E21               	movwf	(___flge@ff2+3)^0,c
  5902   00328C                     l3211:
  5903   00328C  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  5904   00328E  EF4B  F019         	goto	u3261
  5905   003292  EF4D  F019         	goto	u3260
  5906   003296                     u3261:
  5907   003296  EF56  F019         	goto	l3215
  5908   00329A                     u3260:
  5909   00329A  6C1A               	negf	___flge@ff1^0,c
  5910   00329C  1E1B               	comf	(___flge@ff1+1)^0,f,c
  5911   00329E  B0D8               	btfsc	status,0,c
  5912   0032A0  2A1B               	incf	(___flge@ff1+1)^0,f,c
  5913   0032A2  1E1C               	comf	(___flge@ff1+2)^0,f,c
  5914   0032A4  B0D8               	btfsc	status,0,c
  5915   0032A6  2A1C               	incf	(___flge@ff1+2)^0,f,c
  5916   0032A8  0E80               	movlw	128
  5917   0032AA  561D               	subfwb	(___flge@ff1+3)^0,f,c
  5918   0032AC                     l3215:
  5919   0032AC  AE21               	btfss	(___flge@ff2+3)^0,7,c
  5920   0032AE  EF5B  F019         	goto	u3271
  5921   0032B2  EF5D  F019         	goto	u3270
  5922   0032B6                     u3271:
  5923   0032B6  EF66  F019         	goto	l454
  5924   0032BA                     u3270:
  5925   0032BA  6C1E               	negf	___flge@ff2^0,c
  5926   0032BC  1E1F               	comf	(___flge@ff2+1)^0,f,c
  5927   0032BE  B0D8               	btfsc	status,0,c
  5928   0032C0  2A1F               	incf	(___flge@ff2+1)^0,f,c
  5929   0032C2  1E20               	comf	(___flge@ff2+2)^0,f,c
  5930   0032C4  B0D8               	btfsc	status,0,c
  5931   0032C6  2A20               	incf	(___flge@ff2+2)^0,f,c
  5932   0032C8  0E80               	movlw	128
  5933   0032CA  5621               	subfwb	(___flge@ff2+3)^0,f,c
  5934   0032CC                     l454:
  5935   0032CC  0E00               	movlw	0
  5936   0032CE  1A1A               	xorwf	___flge@ff1^0,f,c
  5937   0032D0  0E00               	movlw	0
  5938   0032D2  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  5939   0032D4  0E00               	movlw	0
  5940   0032D6  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  5941   0032D8  0E80               	movlw	128
  5942   0032DA  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  5943   0032DC  0E00               	movlw	0
  5944   0032DE  1A1E               	xorwf	___flge@ff2^0,f,c
  5945   0032E0  0E00               	movlw	0
  5946   0032E2  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  5947   0032E4  0E00               	movlw	0
  5948   0032E6  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  5949   0032E8  0E80               	movlw	128
  5950   0032EA  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  5951   0032EC  501E               	movf	___flge@ff2^0,w,c
  5952   0032EE  5C1A               	subwf	___flge@ff1^0,w,c
  5953   0032F0  501F               	movf	(___flge@ff2+1)^0,w,c
  5954   0032F2  581B               	subwfb	(___flge@ff1+1)^0,w,c
  5955   0032F4  5020               	movf	(___flge@ff2+2)^0,w,c
  5956   0032F6  581C               	subwfb	(___flge@ff1+2)^0,w,c
  5957   0032F8  5021               	movf	(___flge@ff2+3)^0,w,c
  5958   0032FA  581D               	subwfb	(___flge@ff1+3)^0,w,c
  5959   0032FC  B0D8               	btfsc	status,0,c
  5960   0032FE  EF83  F019         	goto	u3281
  5961   003302  EF85  F019         	goto	u3280
  5962   003306                     u3281:
  5963   003306  EF88  F019         	goto	l3221
  5964   00330A                     u3280:
  5965   00330A  90D8               	bcf	status,0,c
  5966   00330C  EF89  F019         	goto	l459
  5967   003310                     l3221:
  5968   003310  80D8               	bsf	status,0,c
  5969   003312                     l459:
  5970   003312  0012               	return		;funcret
  5971   003314                     __end_of___flge:
  5972                           	callstack 0
  5973                           
  5974 ;; *************** function ___fleq *****************
  5975 ;; Defined at:
  5976 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  ff1             4    0[COMRAM] unsigned char 
  5979 ;;  ff2             4    4[COMRAM] unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;		None               void
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:       12 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_efgtoa
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text20
  6005   00391E                     __ptext20:
  6006                           	callstack 0
  6007   00391E                     ___fleq:
  6008                           	callstack 26
  6009   00391E  0E00               	movlw	0
  6010   003920  1401               	andwf	___fleq@ff1^0,w,c
  6011   003922  6E09               	movwf	??___fleq^0,c
  6012   003924  0E00               	movlw	0
  6013   003926  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6014   003928  6E0A               	movwf	(??___fleq+1)^0,c
  6015   00392A  0E80               	movlw	128
  6016   00392C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6017   00392E  6E0B               	movwf	(??___fleq+2)^0,c
  6018   003930  0E7F               	movlw	127
  6019   003932  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6020   003934  6E0C               	movwf	(??___fleq+3)^0,c
  6021   003936  5009               	movf	??___fleq^0,w,c
  6022   003938  100A               	iorwf	(??___fleq+1)^0,w,c
  6023   00393A  100B               	iorwf	(??___fleq+2)^0,w,c
  6024   00393C  100C               	iorwf	(??___fleq+3)^0,w,c
  6025   00393E  A4D8               	btfss	status,2,c
  6026   003940  EFA4  F01C         	goto	u3211
  6027   003944  EFA6  F01C         	goto	u3210
  6028   003948                     u3211:
  6029   003948  EFAE  F01C         	goto	l3191
  6030   00394C                     u3210:
  6031   00394C  0E00               	movlw	0
  6032   00394E  6E01               	movwf	___fleq@ff1^0,c
  6033   003950  0E00               	movlw	0
  6034   003952  6E02               	movwf	(___fleq@ff1+1)^0,c
  6035   003954  0E00               	movlw	0
  6036   003956  6E03               	movwf	(___fleq@ff1+2)^0,c
  6037   003958  0E00               	movlw	0
  6038   00395A  6E04               	movwf	(___fleq@ff1+3)^0,c
  6039   00395C                     l3191:
  6040   00395C  0E00               	movlw	0
  6041   00395E  1405               	andwf	___fleq@ff2^0,w,c
  6042   003960  6E09               	movwf	??___fleq^0,c
  6043   003962  0E00               	movlw	0
  6044   003964  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6045   003966  6E0A               	movwf	(??___fleq+1)^0,c
  6046   003968  0E80               	movlw	128
  6047   00396A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6048   00396C  6E0B               	movwf	(??___fleq+2)^0,c
  6049   00396E  0E7F               	movlw	127
  6050   003970  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6051   003972  6E0C               	movwf	(??___fleq+3)^0,c
  6052   003974  5009               	movf	??___fleq^0,w,c
  6053   003976  100A               	iorwf	(??___fleq+1)^0,w,c
  6054   003978  100B               	iorwf	(??___fleq+2)^0,w,c
  6055   00397A  100C               	iorwf	(??___fleq+3)^0,w,c
  6056   00397C  A4D8               	btfss	status,2,c
  6057   00397E  EFC3  F01C         	goto	u3221
  6058   003982  EFC5  F01C         	goto	u3220
  6059   003986                     u3221:
  6060   003986  EFCD  F01C         	goto	l3195
  6061   00398A                     u3220:
  6062   00398A  0E00               	movlw	0
  6063   00398C  6E05               	movwf	___fleq@ff2^0,c
  6064   00398E  0E00               	movlw	0
  6065   003990  6E06               	movwf	(___fleq@ff2+1)^0,c
  6066   003992  0E00               	movlw	0
  6067   003994  6E07               	movwf	(___fleq@ff2+2)^0,c
  6068   003996  0E00               	movlw	0
  6069   003998  6E08               	movwf	(___fleq@ff2+3)^0,c
  6070   00399A                     l3195:
  6071   00399A  5005               	movf	___fleq@ff2^0,w,c
  6072   00399C  1801               	xorwf	___fleq@ff1^0,w,c
  6073   00399E  E10F               	bnz	u3230
  6074   0039A0  5006               	movf	(___fleq@ff2+1)^0,w,c
  6075   0039A2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6076   0039A4  E10C               	bnz	u3230
  6077   0039A6  5007               	movf	(___fleq@ff2+2)^0,w,c
  6078   0039A8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6079   0039AA  E109               	bnz	u3230
  6080   0039AC  5008               	movf	(___fleq@ff2+3)^0,w,c
  6081   0039AE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6082   0039B0  B4D8               	btfsc	status,2,c
  6083   0039B2  EFDD  F01C         	goto	u3231
  6084   0039B6  EFDF  F01C         	goto	u3230
  6085   0039BA                     u3231:
  6086   0039BA  EFE2  F01C         	goto	l3199
  6087   0039BE                     u3230:
  6088   0039BE  90D8               	bcf	status,0,c
  6089   0039C0  EFE3  F01C         	goto	l448
  6090   0039C4                     l3199:
  6091   0039C4  80D8               	bsf	status,0,c
  6092   0039C6                     l448:
  6093   0039C6  0012               	return		;funcret
  6094   0039C8                     __end_of___fleq:
  6095                           	callstack 0
  6096                           
  6097 ;; *************** function _dtoa *****************
  6098 ;; Defined at:
  6099 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6102 ;;		 -> sprintf@f(12), 
  6103 ;;  d               2   23[COMRAM] int 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  i               2   32[COMRAM] int 
  6106 ;;  p               2   29[COMRAM] int 
  6107 ;;  w               2   27[COMRAM] int 
  6108 ;;  s               1   31[COMRAM] unsigned char 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;Total ram usage:       12 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 4
  6125 ;; This function calls:
  6126 ;;		___awdiv
  6127 ;;		___awmod
  6128 ;;		_abs
  6129 ;;		_pad
  6130 ;; This function is called by:
  6131 ;;		_vfpfcnvrt
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text21
  6136   002F90                     __ptext21:
  6137                           	callstack 0
  6138   002F90                     _dtoa:
  6139                           	callstack 23
  6140   002F90                     
  6141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6142   002F90  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6143   002F92  EFCD  F017         	goto	u4501
  6144   002F96  EFD0  F017         	goto	u4500
  6145   002F9A                     u4501:
  6146   002F9A  0E01               	movlw	1
  6147   002F9C  EFD1  F017         	goto	u4510
  6148   002FA0                     u4500:
  6149   002FA0  0E00               	movlw	0
  6150   002FA2                     u4510:
  6151   002FA2  6E20               	movwf	dtoa@s^0,c
  6152                           
  6153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6154   002FA4  BE5C               	btfsc	(_prec+1)^0,7,c
  6155   002FA6  EFD9  F017         	goto	u4520
  6156   002FAA  EFD7  F017         	goto	u4521
  6157   002FAE                     u4521:
  6158   002FAE  EFDF  F017         	goto	l904
  6159   002FB2                     u4520:
  6160   002FB2  0E00               	movlw	0
  6161   002FB4  6E1F               	movwf	(dtoa@p+1)^0,c
  6162   002FB6  0E01               	movlw	1
  6163   002FB8  6E1E               	movwf	dtoa@p^0,c
  6164   002FBA  EFE3  F017         	goto	l906
  6165   002FBE                     l904:
  6166   002FBE  C05B  F01E         	movff	_prec,dtoa@p
  6167   002FC2  C05C  F01F         	movff	_prec+1,dtoa@p+1
  6168   002FC6                     l906:
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6171   002FC6  C059  F01C         	movff	_width,dtoa@w
  6172   002FCA  C05A  F01D         	movff	_width+1,dtoa@w+1
  6173   002FCE                     
  6174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6175   002FCE  5020               	movf	dtoa@s^0,w,c
  6176   002FD0  B4D8               	btfsc	status,2,c
  6177   002FD2  EFED  F017         	goto	u4531
  6178   002FD6  EFEF  F017         	goto	u4530
  6179   002FDA                     u4531:
  6180   002FDA  EF06  F018         	goto	l907
  6181   002FDE                     u4530:
  6182   002FDE                     
  6183                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6184   002FDE  061C               	decf	dtoa@w^0,f,c
  6185   002FE0  A0D8               	btfss	status,0,c
  6186   002FE2  061D               	decf	(dtoa@w+1)^0,f,c
  6187   002FE4                     
  6188                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6189   002FE4  5020               	movf	dtoa@s^0,w,c
  6190   002FE6  A4D8               	btfss	status,2,c
  6191   002FE8  EFF8  F017         	goto	u4541
  6192   002FEC  EFFA  F017         	goto	u4540
  6193   002FF0                     u4541:
  6194   002FF0  EF00  F018         	goto	l4173
  6195   002FF4                     u4540:
  6196   002FF4  0E00               	movlw	0
  6197   002FF6  6E1B               	movwf	(_dtoa$1058+1)^0,c
  6198   002FF8  0E2B               	movlw	43
  6199   002FFA  6E1A               	movwf	_dtoa$1058^0,c
  6200   002FFC  EF04  F018         	goto	l4175
  6201   003000                     l4173:
  6202   003000  0E00               	movlw	0
  6203   003002  6E1B               	movwf	(_dtoa$1058+1)^0,c
  6204   003004  0E2D               	movlw	45
  6205   003006  6E1A               	movwf	_dtoa$1058^0,c
  6206   003008                     l4175:
  6207   003008  C01A  F020         	movff	_dtoa$1058,dtoa@s
  6208   00300C                     l907:
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6211   00300C  0E00               	movlw	0
  6212   00300E  6E22               	movwf	(dtoa@i+1)^0,c
  6213   003010  0E4F               	movlw	79
  6214   003012  6E21               	movwf	dtoa@i^0,c
  6215   003014                     
  6216                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6217   003014  0E00               	movlw	0
  6218   003016  0101               	movlb	1	; () banked
  6219   003018  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6220                           
  6221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6222   00301A  EF3F  F018         	goto	l4189
  6223   00301E                     l4179:
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6226   00301E  0621               	decf	dtoa@i^0,f,c
  6227   003020  A0D8               	btfss	status,0,c
  6228   003022  0622               	decf	(dtoa@i+1)^0,f,c
  6229   003024                     
  6230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6231   003024  0E00               	movlw	low _dbuf
  6232   003026  2421               	addwf	dtoa@i^0,w,c
  6233   003028  6ED9               	movwf	fsr2l,c
  6234   00302A  0E01               	movlw	high _dbuf
  6235   00302C  2022               	addwfc	(dtoa@i+1)^0,w,c
  6236   00302E  6EDA               	movwf	fsr2h,c
  6237   003030  C018  F001         	movff	dtoa@d,___awmod@dividend
  6238   003034  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6239   003038  0E00               	movlw	0
  6240   00303A  6E04               	movwf	(___awmod@divisor+1)^0,c
  6241   00303C  0E0A               	movlw	10
  6242   00303E  6E03               	movwf	___awmod@divisor^0,c
  6243   003040  EC34  F01B         	call	___awmod	;wreg free
  6244   003044  C001  F007         	movff	?___awmod,abs@a
  6245   003048  C002  F008         	movff	?___awmod+1,abs@a+1
  6246   00304C  EC86  F01F         	call	_abs	;wreg free
  6247   003050  5007               	movf	?_abs^0,w,c
  6248   003052  0F30               	addlw	48
  6249   003054  6EDF               	movwf	indf2,c
  6250   003056                     
  6251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  6252   003056  061E               	decf	dtoa@p^0,f,c
  6253   003058  A0D8               	btfss	status,0,c
  6254   00305A  061F               	decf	(dtoa@p+1)^0,f,c
  6255   00305C                     
  6256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6257   00305C  061C               	decf	dtoa@w^0,f,c
  6258   00305E  A0D8               	btfss	status,0,c
  6259   003060  061D               	decf	(dtoa@w+1)^0,f,c
  6260   003062                     
  6261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6262   003062  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6263   003066  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6264   00306A  0E00               	movlw	0
  6265   00306C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6266   00306E  0E0A               	movlw	10
  6267   003070  6E03               	movwf	___awdiv@divisor^0,c
  6268   003072  EC73  F01A         	call	___awdiv	;wreg free
  6269   003076  C001  F018         	movff	?___awdiv,dtoa@d
  6270   00307A  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6271   00307E                     l4189:
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6274   00307E  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6275   003080  EF4A  F018         	goto	u4551
  6276   003084  5022               	movf	(dtoa@i+1)^0,w,c
  6277   003086  E108               	bnz	u4550
  6278   003088  0421               	decf	dtoa@i^0,w,c
  6279   00308A  A0D8               	btfss	status,0,c
  6280   00308C  EF4A  F018         	goto	u4551
  6281   003090  EF4C  F018         	goto	u4550
  6282   003094                     u4551:
  6283   003094  EF62  F018         	goto	l4195
  6284   003098                     u4550:
  6285   003098  5018               	movf	dtoa@d^0,w,c
  6286   00309A  1019               	iorwf	(dtoa@d+1)^0,w,c
  6287   00309C  A4D8               	btfss	status,2,c
  6288   00309E  EF53  F018         	goto	u4561
  6289   0030A2  EF55  F018         	goto	u4560
  6290   0030A6                     u4561:
  6291   0030A6  EF0F  F018         	goto	l4179
  6292   0030AA                     u4560:
  6293   0030AA  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6294   0030AC  EF62  F018         	goto	u4570
  6295   0030B0  501F               	movf	(dtoa@p+1)^0,w,c
  6296   0030B2  E106               	bnz	u4571
  6297   0030B4  041E               	decf	dtoa@p^0,w,c
  6298   0030B6  B0D8               	btfsc	status,0,c
  6299   0030B8  EF60  F018         	goto	u4571
  6300   0030BC  EF62  F018         	goto	u4570
  6301   0030C0                     u4571:
  6302   0030C0  EF0F  F018         	goto	l4179
  6303   0030C4                     u4570:
  6304   0030C4                     l4195:
  6305                           
  6306                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6307   0030C4  5020               	movf	dtoa@s^0,w,c
  6308   0030C6  B4D8               	btfsc	status,2,c
  6309   0030C8  EF68  F018         	goto	u4581
  6310   0030CC  EF6A  F018         	goto	u4580
  6311   0030D0                     u4581:
  6312   0030D0  EF76  F018         	goto	l4201
  6313   0030D4                     u4580:
  6314   0030D4                     
  6315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6316   0030D4  0621               	decf	dtoa@i^0,f,c
  6317   0030D6  A0D8               	btfss	status,0,c
  6318   0030D8  0622               	decf	(dtoa@i+1)^0,f,c
  6319   0030DA                     
  6320                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6321   0030DA  0E00               	movlw	low _dbuf
  6322   0030DC  2421               	addwf	dtoa@i^0,w,c
  6323   0030DE  6ED9               	movwf	fsr2l,c
  6324   0030E0  0E01               	movlw	high _dbuf
  6325   0030E2  2022               	addwfc	(dtoa@i+1)^0,w,c
  6326   0030E4  6EDA               	movwf	fsr2h,c
  6327   0030E6  0060  F083  FFDF   	movff	dtoa@s,indf2
  6328   0030EC                     l4201:
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6331   0030EC  C017  F00F         	movff	dtoa@fp,pad@fp
  6332   0030F0  0E00               	movlw	low _dbuf
  6333   0030F2  2421               	addwf	dtoa@i^0,w,c
  6334   0030F4  6E10               	movwf	pad@buf^0,c
  6335   0030F6  0E01               	movlw	high _dbuf
  6336   0030F8  2022               	addwfc	(dtoa@i+1)^0,w,c
  6337   0030FA  6E11               	movwf	(pad@buf+1)^0,c
  6338   0030FC  C01C  F012         	movff	dtoa@w,pad@p
  6339   003100  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6340   003104  EC72  F01D         	call	_pad	;wreg free
  6341   003108  0012               	return		;funcret
  6342   00310A                     __end_of_dtoa:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function _pad *****************
  6346 ;; Defined at:
  6347 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6350 ;;		 -> sprintf@f(12), 
  6351 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6352 ;;		 -> dbuf(80), 
  6353 ;;  p               2   17[COMRAM] int 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  i               2   20[COMRAM] int 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6365 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;Total ram usage:        8 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 3
  6372 ;; This function calls:
  6373 ;;		_fputc
  6374 ;;		_fputs
  6375 ;; This function is called by:
  6376 ;;		_dtoa
  6377 ;;		_efgtoa
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text22
  6382   003AE4                     __ptext22:
  6383                           	callstack 0
  6384   003AE4                     _pad:
  6385                           	callstack 23
  6386   003AE4                     
  6387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6388   003AE4  BE13               	btfsc	(pad@p+1)^0,7,c
  6389   003AE6  EF79  F01D         	goto	u4460
  6390   003AEA  EF77  F01D         	goto	u4461
  6391   003AEE                     u4461:
  6392   003AEE  EF7D  F01D         	goto	l896
  6393   003AF2                     u4460:
  6394   003AF2                     
  6395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6396   003AF2  0E00               	movlw	0
  6397   003AF4  6E13               	movwf	(pad@p+1)^0,c
  6398   003AF6  0E00               	movlw	0
  6399   003AF8  6E12               	movwf	pad@p^0,c
  6400   003AFA                     l896:
  6401                           
  6402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6403   003AFA  0E00               	movlw	0
  6404   003AFC  6E16               	movwf	(pad@i+1)^0,c
  6405   003AFE  0E00               	movlw	0
  6406   003B00  6E15               	movwf	pad@i^0,c
  6407                           
  6408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6409   003B02  EF8D  F01D         	goto	l4141
  6410   003B06                     l4137:
  6411                           
  6412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6413   003B06  0E00               	movlw	0
  6414   003B08  6E02               	movwf	(fputc@c+1)^0,c
  6415   003B0A  0E20               	movlw	32
  6416   003B0C  6E01               	movwf	fputc@c^0,c
  6417   003B0E  C00F  F003         	movff	pad@fp,fputc@fp
  6418   003B12  ECE3  F01B         	call	_fputc	;wreg free
  6419   003B16                     
  6420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6421   003B16  4A15               	infsnz	pad@i^0,f,c
  6422   003B18  2A16               	incf	(pad@i+1)^0,f,c
  6423   003B1A                     l4141:
  6424                           
  6425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6426   003B1A  5012               	movf	pad@p^0,w,c
  6427   003B1C  5C15               	subwf	pad@i^0,w,c
  6428   003B1E  5016               	movf	(pad@i+1)^0,w,c
  6429   003B20  0A80               	xorlw	128
  6430   003B22  6E14               	movwf	??_pad^0,c
  6431   003B24  5013               	movf	(pad@p+1)^0,w,c
  6432   003B26  0A80               	xorlw	128
  6433   003B28  5814               	subwfb	??_pad^0,w,c
  6434   003B2A  A0D8               	btfss	status,0,c
  6435   003B2C  EF9A  F01D         	goto	u4471
  6436   003B30  EF9C  F01D         	goto	u4470
  6437   003B34                     u4471:
  6438   003B34  EF83  F01D         	goto	l4137
  6439   003B38                     u4470:
  6440   003B38                     
  6441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6442   003B38  C010  F009         	movff	pad@buf,fputs@s
  6443   003B3C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6444   003B40  C00F  F00B         	movff	pad@fp,fputs@fp
  6445   003B44  ECF6  F01E         	call	_fputs	;wreg free
  6446   003B48  0012               	return		;funcret
  6447   003B4A                     __end_of_pad:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function _fputs *****************
  6451 ;; Defined at:
  6452 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6455 ;;		 -> dbuf(80), 
  6456 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6457 ;;		 -> sprintf@f(12), 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  i               2   12[COMRAM] int 
  6460 ;;  c               1   11[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  2    8[COMRAM] int 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6470 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;Total ram usage:        6 bytes
  6475 ;; Hardware stack levels used: 1
  6476 ;; Hardware stack levels required when called: 2
  6477 ;; This function calls:
  6478 ;;		_fputc
  6479 ;; This function is called by:
  6480 ;;		_pad
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text23
  6485   003DEC                     __ptext23:
  6486                           	callstack 0
  6487   003DEC                     _fputs:
  6488                           	callstack 23
  6489   003DEC  0E00               	movlw	0
  6490   003DEE  6E0E               	movwf	(fputs@i+1)^0,c
  6491   003DF0  0E00               	movlw	0
  6492   003DF2  6E0D               	movwf	fputs@i^0,c
  6493   003DF4  EF05  F01F         	goto	l4131
  6494   003DF8                     l4127:
  6495   003DF8  C00C  F001         	movff	fputs@c,fputc@c
  6496   003DFC  6A02               	clrf	(fputc@c+1)^0,c
  6497   003DFE  C00B  F003         	movff	fputs@fp,fputc@fp
  6498   003E02  ECE3  F01B         	call	_fputc	;wreg free
  6499   003E06  4A0D               	infsnz	fputs@i^0,f,c
  6500   003E08  2A0E               	incf	(fputs@i+1)^0,f,c
  6501   003E0A                     l4131:
  6502   003E0A  500D               	movf	fputs@i^0,w,c
  6503   003E0C  2409               	addwf	fputs@s^0,w,c
  6504   003E0E  6ED9               	movwf	fsr2l,c
  6505   003E10  500E               	movf	(fputs@i+1)^0,w,c
  6506   003E12  200A               	addwfc	(fputs@s+1)^0,w,c
  6507   003E14  6EDA               	movwf	fsr2h,c
  6508   003E16  50DF               	movf	indf2,w,c
  6509   003E18  6E0C               	movwf	fputs@c^0,c
  6510   003E1A  500C               	movf	fputs@c^0,w,c
  6511   003E1C  A4D8               	btfss	status,2,c
  6512   003E1E  EF13  F01F         	goto	u4451
  6513   003E22  EF15  F01F         	goto	u4450
  6514   003E26                     u4451:
  6515   003E26  EFFC  F01E         	goto	l4127
  6516   003E2A                     u4450:
  6517   003E2A  0012               	return		;funcret
  6518   003E2C                     __end_of_fputs:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _fputc *****************
  6522 ;; Defined at:
  6523 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  c               2    0[COMRAM] int 
  6526 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6527 ;;		 -> sprintf@f(12), 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  2    0[COMRAM] int 
  6532 ;; Registers used:
  6533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6539 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;Total ram usage:        8 bytes
  6544 ;; Hardware stack levels used: 1
  6545 ;; Hardware stack levels required when called: 1
  6546 ;; This function calls:
  6547 ;;		_putch
  6548 ;; This function is called by:
  6549 ;;		_pad
  6550 ;;		_vfpfcnvrt
  6551 ;;		_fputs
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text24
  6556   0037C6                     __ptext24:
  6557                           	callstack 0
  6558   0037C6                     _fputc:
  6559                           	callstack 26
  6560   0037C6  5003               	movf	fputc@fp^0,w,c
  6561   0037C8  B4D8               	btfsc	status,2,c
  6562   0037CA  EFE9  F01B         	goto	u2231
  6563   0037CE  EFEB  F01B         	goto	u2230
  6564   0037D2                     u2231:
  6565   0037D2  EFF3  F01B         	goto	l2607
  6566   0037D6                     u2230:
  6567   0037D6  5003               	movf	fputc@fp^0,w,c
  6568   0037D8  A4D8               	btfss	status,2,c
  6569   0037DA  EFF1  F01B         	goto	u2241
  6570   0037DE  EFF3  F01B         	goto	u2240
  6571   0037E2                     u2241:
  6572   0037E2  EFF8  F01B         	goto	l2609
  6573   0037E6                     u2240:
  6574   0037E6                     l2607:
  6575   0037E6  5001               	movf	fputc@c^0,w,c
  6576   0037E8  ECDD  F01F         	call	_putch
  6577   0037EC  EF38  F01C         	goto	l1064
  6578   0037F0                     l2609:
  6579   0037F0  5003               	movf	fputc@fp^0,w,c
  6580   0037F2  6ED9               	movwf	fsr2l,c
  6581   0037F4  6ADA               	clrf	fsr2h,c
  6582   0037F6  0E0A               	movlw	10
  6583   0037F8  26D9               	addwf	fsr2l,f,c
  6584   0037FA  50DE               	movf	postinc2,w,c
  6585   0037FC  10DE               	iorwf	postinc2,w,c
  6586   0037FE  B4D8               	btfsc	status,2,c
  6587   003800  EF04  F01C         	goto	u2251
  6588   003804  EF06  F01C         	goto	u2250
  6589   003808                     u2251:
  6590   003808  EF1F  F01C         	goto	l2613
  6591   00380C                     u2250:
  6592   00380C  5003               	movf	fputc@fp^0,w,c
  6593   00380E  6ED9               	movwf	fsr2l,c
  6594   003810  6ADA               	clrf	fsr2h,c
  6595   003812  0E0A               	movlw	10
  6596   003814  26D9               	addwf	fsr2l,f,c
  6597   003816  5003               	movf	fputc@fp^0,w,c
  6598   003818  6EE1               	movwf	fsr1l,c
  6599   00381A  6AE2               	clrf	fsr1h,c
  6600   00381C  0E03               	movlw	3
  6601   00381E  26E1               	addwf	fsr1l,f,c
  6602   003820  50DE               	movf	postinc2,w,c
  6603   003822  5CE6               	subwf	postinc1,w,c
  6604   003824  50E6               	movf	postinc1,w,c
  6605   003826  0A80               	xorlw	128
  6606   003828  6E08               	movwf	(??_fputc+4)^0,c
  6607   00382A  50DE               	movf	postinc2,w,c
  6608   00382C  0A80               	xorlw	128
  6609   00382E  5808               	subwfb	(??_fputc+4)^0,w,c
  6610   003830  B0D8               	btfsc	status,0,c
  6611   003832  EF1D  F01C         	goto	u2261
  6612   003836  EF1F  F01C         	goto	u2260
  6613   00383A                     u2261:
  6614   00383A  EF38  F01C         	goto	l1064
  6615   00383E                     u2260:
  6616   00383E                     l2613:
  6617   00383E  5003               	movf	fputc@fp^0,w,c
  6618   003840  6ED9               	movwf	fsr2l,c
  6619   003842  6ADA               	clrf	fsr2h,c
  6620   003844  0E03               	movlw	3
  6621   003846  26D9               	addwf	fsr2l,f,c
  6622   003848  50DF               	movf	indf2,w,c
  6623   00384A  6E04               	movwf	??_fputc^0,c
  6624   00384C  5003               	movf	fputc@fp^0,w,c
  6625   00384E  6ED9               	movwf	fsr2l,c
  6626   003850  6ADA               	clrf	fsr2h,c
  6627   003852  50DF               	movf	indf2,w,c
  6628   003854  2404               	addwf	??_fputc^0,w,c
  6629   003856  6ED9               	movwf	fsr2l,c
  6630   003858  6ADA               	clrf	fsr2h,c
  6631   00385A  0060  F007  FFDF   	movff	fputc@c,indf2
  6632   003860  5003               	movf	fputc@fp^0,w,c
  6633   003862  6ED9               	movwf	fsr2l,c
  6634   003864  6ADA               	clrf	fsr2h,c
  6635   003866  0E03               	movlw	3
  6636   003868  26D9               	addwf	fsr2l,f,c
  6637   00386A  2ADE               	incf	postinc2,f,c
  6638   00386C  0E00               	movlw	0
  6639   00386E  22DD               	addwfc	postdec2,f,c
  6640   003870                     l1064:
  6641   003870  0012               	return		;funcret
  6642   003872                     __end_of_fputc:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function _putch *****************
  6646 ;; Defined at:
  6647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  c               1    wreg     unsigned char 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  c               1    0[COMRAM] unsigned char 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;Total ram usage:        0 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; This function calls:
  6668 ;;		Nothing
  6669 ;; This function is called by:
  6670 ;;		_fputc
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text25
  6675   003FBA                     __ptext25:
  6676                           	callstack 0
  6677   003FBA                     _putch:
  6678                           	callstack 26
  6679   003FBA  0012               	return		;funcret
  6680   003FBC                     __end_of_putch:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _abs *****************
  6684 ;; Defined at:
  6685 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  a               2    6[COMRAM] int 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  2    6[COMRAM] int 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;Total ram usage:        4 bytes
  6704 ;; Hardware stack levels used: 1
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_dtoa
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text26
  6713   003F0C                     __ptext26:
  6714                           	callstack 0
  6715   003F0C                     _abs:
  6716                           	callstack 26
  6717   003F0C  BE08               	btfsc	(abs@a+1)^0,7,c
  6718   003F0E  EF8B  F01F         	goto	u3391
  6719   003F12  EF8D  F01F         	goto	u3390
  6720   003F16                     u3391:
  6721   003F16  EF93  F01F         	goto	l1023
  6722   003F1A                     u3390:
  6723   003F1A  C007  F007         	movff	abs@a,?_abs
  6724   003F1E  C008  F008         	movff	abs@a+1,?_abs+1
  6725   003F22  EF9F  F01F         	goto	l1026
  6726   003F26                     l1023:
  6727   003F26  C007  F009         	movff	abs@a,??_abs
  6728   003F2A  C008  F00A         	movff	abs@a+1,??_abs+1
  6729   003F2E  1E09               	comf	??_abs^0,f,c
  6730   003F30  1E0A               	comf	(??_abs+1)^0,f,c
  6731   003F32  4A09               	infsnz	??_abs^0,f,c
  6732   003F34  2A0A               	incf	(??_abs+1)^0,f,c
  6733   003F36  C009  F007         	movff	??_abs,?_abs
  6734   003F3A  C00A  F008         	movff	??_abs+1,?_abs+1
  6735   003F3E                     l1026:
  6736   003F3E  0012               	return		;funcret
  6737   003F40                     __end_of_abs:
  6738                           	callstack 0
  6739                           
  6740 ;; *************** function ___awmod *****************
  6741 ;; Defined at:
  6742 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  dividend        2    0[COMRAM] int 
  6745 ;;  divisor         2    2[COMRAM] int 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  sign            1    5[COMRAM] unsigned char 
  6748 ;;  counter         1    4[COMRAM] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2    0[COMRAM] int 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;Total ram usage:        6 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_dtoa
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text27
  6772   003668                     __ptext27:
  6773                           	callstack 0
  6774   003668                     ___awmod:
  6775                           	callstack 26
  6776   003668  0E00               	movlw	0
  6777   00366A  6E06               	movwf	___awmod@sign^0,c
  6778   00366C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6779   00366E  EF3D  F01B         	goto	u3150
  6780   003672  EF3B  F01B         	goto	u3151
  6781   003676                     u3151:
  6782   003676  EF43  F01B         	goto	l3159
  6783   00367A                     u3150:
  6784   00367A  6C01               	negf	___awmod@dividend^0,c
  6785   00367C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6786   00367E  B0D8               	btfsc	status,0,c
  6787   003680  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6788   003682  0E01               	movlw	1
  6789   003684  6E06               	movwf	___awmod@sign^0,c
  6790   003686                     l3159:
  6791   003686  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6792   003688  EF4A  F01B         	goto	u3160
  6793   00368C  EF48  F01B         	goto	u3161
  6794   003690                     u3161:
  6795   003690  EF4E  F01B         	goto	l3163
  6796   003694                     u3160:
  6797   003694  6C03               	negf	___awmod@divisor^0,c
  6798   003696  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6799   003698  B0D8               	btfsc	status,0,c
  6800   00369A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6801   00369C                     l3163:
  6802   00369C  5003               	movf	___awmod@divisor^0,w,c
  6803   00369E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6804   0036A0  B4D8               	btfsc	status,2,c
  6805   0036A2  EF55  F01B         	goto	u3171
  6806   0036A6  EF57  F01B         	goto	u3170
  6807   0036AA                     u3171:
  6808   0036AA  EF7B  F01B         	goto	l3179
  6809   0036AE                     u3170:
  6810   0036AE  0E01               	movlw	1
  6811   0036B0  6E05               	movwf	___awmod@counter^0,c
  6812   0036B2  EF5F  F01B         	goto	l3169
  6813   0036B6                     l3167:
  6814   0036B6  90D8               	bcf	status,0,c
  6815   0036B8  3603               	rlcf	___awmod@divisor^0,f,c
  6816   0036BA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6817   0036BC  2A05               	incf	___awmod@counter^0,f,c
  6818   0036BE                     l3169:
  6819   0036BE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6820   0036C0  EF64  F01B         	goto	u3181
  6821   0036C4  EF66  F01B         	goto	u3180
  6822   0036C8                     u3181:
  6823   0036C8  EF5B  F01B         	goto	l3167
  6824   0036CC                     u3180:
  6825   0036CC                     l3171:
  6826   0036CC  5003               	movf	___awmod@divisor^0,w,c
  6827   0036CE  5C01               	subwf	___awmod@dividend^0,w,c
  6828   0036D0  5004               	movf	(___awmod@divisor+1)^0,w,c
  6829   0036D2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6830   0036D4  A0D8               	btfss	status,0,c
  6831   0036D6  EF6F  F01B         	goto	u3191
  6832   0036DA  EF71  F01B         	goto	u3190
  6833   0036DE                     u3191:
  6834   0036DE  EF75  F01B         	goto	l3175
  6835   0036E2                     u3190:
  6836   0036E2  5003               	movf	___awmod@divisor^0,w,c
  6837   0036E4  5E01               	subwf	___awmod@dividend^0,f,c
  6838   0036E6  5004               	movf	(___awmod@divisor+1)^0,w,c
  6839   0036E8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6840   0036EA                     l3175:
  6841   0036EA  90D8               	bcf	status,0,c
  6842   0036EC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6843   0036EE  3203               	rrcf	___awmod@divisor^0,f,c
  6844   0036F0  2E05               	decfsz	___awmod@counter^0,f,c
  6845   0036F2  EF66  F01B         	goto	l3171
  6846   0036F6                     l3179:
  6847   0036F6  5006               	movf	___awmod@sign^0,w,c
  6848   0036F8  B4D8               	btfsc	status,2,c
  6849   0036FA  EF81  F01B         	goto	u3201
  6850   0036FE  EF83  F01B         	goto	u3200
  6851   003702                     u3201:
  6852   003702  EF87  F01B         	goto	l3183
  6853   003706                     u3200:
  6854   003706  6C01               	negf	___awmod@dividend^0,c
  6855   003708  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6856   00370A  B0D8               	btfsc	status,0,c
  6857   00370C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6858   00370E                     l3183:
  6859   00370E  C001  F001         	movff	___awmod@dividend,?___awmod
  6860   003712  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6861   003716  0012               	return		;funcret
  6862   003718                     __end_of___awmod:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function ___awdiv *****************
  6866 ;; Defined at:
  6867 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  dividend        2    0[COMRAM] int 
  6870 ;;  divisor         2    2[COMRAM] int 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  quotient        2    6[COMRAM] int 
  6873 ;;  sign            1    5[COMRAM] unsigned char 
  6874 ;;  counter         1    4[COMRAM] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2    0[COMRAM] int 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;Total ram usage:        8 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_dtoa
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text28
  6898   0034E6                     __ptext28:
  6899                           	callstack 0
  6900   0034E6                     ___awdiv:
  6901                           	callstack 26
  6902   0034E6  0E00               	movlw	0
  6903   0034E8  6E06               	movwf	___awdiv@sign^0,c
  6904   0034EA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6905   0034EC  EF7C  F01A         	goto	u3090
  6906   0034F0  EF7A  F01A         	goto	u3091
  6907   0034F4                     u3091:
  6908   0034F4  EF82  F01A         	goto	l3115
  6909   0034F8                     u3090:
  6910   0034F8  6C03               	negf	___awdiv@divisor^0,c
  6911   0034FA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6912   0034FC  B0D8               	btfsc	status,0,c
  6913   0034FE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6914   003500  0E01               	movlw	1
  6915   003502  6E06               	movwf	___awdiv@sign^0,c
  6916   003504                     l3115:
  6917   003504  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6918   003506  EF89  F01A         	goto	u3100
  6919   00350A  EF87  F01A         	goto	u3101
  6920   00350E                     u3101:
  6921   00350E  EF8F  F01A         	goto	l3121
  6922   003512                     u3100:
  6923   003512  6C01               	negf	___awdiv@dividend^0,c
  6924   003514  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6925   003516  B0D8               	btfsc	status,0,c
  6926   003518  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6927   00351A  0E01               	movlw	1
  6928   00351C  1A06               	xorwf	___awdiv@sign^0,f,c
  6929   00351E                     l3121:
  6930   00351E  0E00               	movlw	0
  6931   003520  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6932   003522  0E00               	movlw	0
  6933   003524  6E07               	movwf	___awdiv@quotient^0,c
  6934   003526  5003               	movf	___awdiv@divisor^0,w,c
  6935   003528  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6936   00352A  B4D8               	btfsc	status,2,c
  6937   00352C  EF9A  F01A         	goto	u3111
  6938   003530  EF9C  F01A         	goto	u3110
  6939   003534                     u3111:
  6940   003534  EFC4  F01A         	goto	l3143
  6941   003538                     u3110:
  6942   003538  0E01               	movlw	1
  6943   00353A  6E05               	movwf	___awdiv@counter^0,c
  6944   00353C  EFA4  F01A         	goto	l3129
  6945   003540                     l3127:
  6946   003540  90D8               	bcf	status,0,c
  6947   003542  3603               	rlcf	___awdiv@divisor^0,f,c
  6948   003544  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6949   003546  2A05               	incf	___awdiv@counter^0,f,c
  6950   003548                     l3129:
  6951   003548  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6952   00354A  EFA9  F01A         	goto	u3121
  6953   00354E  EFAB  F01A         	goto	u3120
  6954   003552                     u3121:
  6955   003552  EFA0  F01A         	goto	l3127
  6956   003556                     u3120:
  6957   003556                     l3131:
  6958   003556  90D8               	bcf	status,0,c
  6959   003558  3607               	rlcf	___awdiv@quotient^0,f,c
  6960   00355A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6961   00355C  5003               	movf	___awdiv@divisor^0,w,c
  6962   00355E  5C01               	subwf	___awdiv@dividend^0,w,c
  6963   003560  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6964   003562  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6965   003564  A0D8               	btfss	status,0,c
  6966   003566  EFB7  F01A         	goto	u3131
  6967   00356A  EFB9  F01A         	goto	u3130
  6968   00356E                     u3131:
  6969   00356E  EFBE  F01A         	goto	l3139
  6970   003572                     u3130:
  6971   003572  5003               	movf	___awdiv@divisor^0,w,c
  6972   003574  5E01               	subwf	___awdiv@dividend^0,f,c
  6973   003576  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6974   003578  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6975   00357A  8007               	bsf	___awdiv@quotient^0,0,c
  6976   00357C                     l3139:
  6977   00357C  90D8               	bcf	status,0,c
  6978   00357E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6979   003580  3203               	rrcf	___awdiv@divisor^0,f,c
  6980   003582  2E05               	decfsz	___awdiv@counter^0,f,c
  6981   003584  EFAB  F01A         	goto	l3131
  6982   003588                     l3143:
  6983   003588  5006               	movf	___awdiv@sign^0,w,c
  6984   00358A  B4D8               	btfsc	status,2,c
  6985   00358C  EFCA  F01A         	goto	u3141
  6986   003590  EFCC  F01A         	goto	u3140
  6987   003594                     u3141:
  6988   003594  EFD0  F01A         	goto	l3147
  6989   003598                     u3140:
  6990   003598  6C07               	negf	___awdiv@quotient^0,c
  6991   00359A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6992   00359C  B0D8               	btfsc	status,0,c
  6993   00359E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6994   0035A0                     l3147:
  6995   0035A0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6996   0035A4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6997   0035A8  0012               	return		;funcret
  6998   0035AA                     __end_of___awdiv:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _loadData16 *****************
  7002 ;; Defined at:
  7003 ;;		line 273 in file "SPI26K83.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  address         2   25[COMRAM] int 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  valFinale       4   35[COMRAM] float 
  7008 ;;  floatValue      4   31[COMRAM] float 
  7009 ;;  val             2   43[COMRAM] int 
  7010 ;;  addressHighV    2   41[COMRAM] int 
  7011 ;;  addressLowVa    2   39[COMRAM] int 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  4   25[COMRAM] float 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;Total ram usage:       20 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 1
  7028 ;; This function calls:
  7029 ;;		___fldiv
  7030 ;;		___xxtofl
  7031 ;;		_loadData
  7032 ;; This function is called by:
  7033 ;;		_main
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text29
  7038   003872                     __ptext29:
  7039                           	callstack 0
  7040   003872                     _loadData16:
  7041                           	callstack 29
  7042   003872                     
  7043                           ;SPI26K83.c: 274:     int addressLowValue = loadData(address);
  7044   003872  C01A  F001         	movff	loadData16@address,loadData@address
  7045   003876  C01B  F002         	movff	loadData16@address+1,loadData@address+1
  7046   00387A  EC09  F01A         	call	_loadData	;wreg free
  7047   00387E  C001  F028         	movff	?_loadData,loadData16@addressLowValue
  7048   003882  C002  F029         	movff	?_loadData+1,loadData16@addressLowValue+1
  7049                           
  7050                           ;SPI26K83.c: 275:     int addressHighValue = loadData(address+1);
  7051   003886  0E01               	movlw	1
  7052   003888  241A               	addwf	loadData16@address^0,w,c
  7053   00388A  6E01               	movwf	loadData@address^0,c
  7054   00388C  0E00               	movlw	0
  7055   00388E  201B               	addwfc	(loadData16@address+1)^0,w,c
  7056   003890  6E02               	movwf	(loadData@address+1)^0,c
  7057   003892  EC09  F01A         	call	_loadData	;wreg free
  7058   003896  C001  F02A         	movff	?_loadData,loadData16@addressHighValue
  7059   00389A  C002  F02B         	movff	?_loadData+1,loadData16@addressHighValue+1
  7060   00389E                     
  7061                           ;SPI26K83.c: 276:     int val = (addressHighValue<< 8) | 0x00 + addressLowValue;
  7062   00389E  502A               	movf	loadData16@addressHighValue^0,w,c
  7063   0038A0  6E1F               	movwf	(??_loadData16+1)^0,c
  7064   0038A2  6A1E               	clrf	??_loadData16^0,c
  7065   0038A4  5028               	movf	loadData16@addressLowValue^0,w,c
  7066   0038A6  101E               	iorwf	??_loadData16^0,w,c
  7067   0038A8  6E2C               	movwf	loadData16@val^0,c
  7068   0038AA  5029               	movf	(loadData16@addressLowValue+1)^0,w,c
  7069   0038AC  101F               	iorwf	(??_loadData16+1)^0,w,c
  7070   0038AE  6E2D               	movwf	(loadData16@val+1)^0,c
  7071   0038B0                     
  7072                           ;SPI26K83.c: 277:     float floatValue = val;
  7073   0038B0  C02C  F009         	movff	loadData16@val,___xxtofl@val
  7074   0038B4  C02D  F00A         	movff	loadData16@val+1,___xxtofl@val+1
  7075   0038B8  0E00               	movlw	0
  7076   0038BA  BE0A               	btfsc	(___xxtofl@val+1)^0,7,c
  7077   0038BC  0EFF               	movlw	-1
  7078   0038BE  6E0B               	movwf	(___xxtofl@val+2)^0,c
  7079   0038C0  6E0C               	movwf	(___xxtofl@val+3)^0,c
  7080   0038C2  0E01               	movlw	1
  7081   0038C4  ECEE  F016         	call	___xxtofl
  7082   0038C8  C009  F020         	movff	?___xxtofl,loadData16@floatValue
  7083   0038CC  C00A  F021         	movff	?___xxtofl+1,loadData16@floatValue+1
  7084   0038D0  C00B  F022         	movff	?___xxtofl+2,loadData16@floatValue+2
  7085   0038D4  C00C  F023         	movff	?___xxtofl+3,loadData16@floatValue+3
  7086   0038D8                     
  7087                           ;SPI26K83.c: 278:     float valFinale = floatValue / 100;
  7088   0038D8  C020  F001         	movff	loadData16@floatValue,___fldiv@b
  7089   0038DC  C021  F002         	movff	loadData16@floatValue+1,___fldiv@b+1
  7090   0038E0  C022  F003         	movff	loadData16@floatValue+2,___fldiv@b+2
  7091   0038E4  C023  F004         	movff	loadData16@floatValue+3,___fldiv@b+3
  7092   0038E8  0E00               	movlw	0
  7093   0038EA  6E05               	movwf	___fldiv@a^0,c
  7094   0038EC  0E00               	movlw	0
  7095   0038EE  6E06               	movwf	(___fldiv@a+1)^0,c
  7096   0038F0  0EC8               	movlw	200
  7097   0038F2  6E07               	movwf	(___fldiv@a+2)^0,c
  7098   0038F4  0E42               	movlw	66
  7099   0038F6  6E08               	movwf	(___fldiv@a+3)^0,c
  7100   0038F8  EC8D  F011         	call	___fldiv	;wreg free
  7101   0038FC  C001  F024         	movff	?___fldiv,loadData16@valFinale
  7102   003900  C002  F025         	movff	?___fldiv+1,loadData16@valFinale+1
  7103   003904  C003  F026         	movff	?___fldiv+2,loadData16@valFinale+2
  7104   003908  C004  F027         	movff	?___fldiv+3,loadData16@valFinale+3
  7105   00390C                     
  7106                           ;SPI26K83.c: 279:     return valFinale;
  7107   00390C  C024  F01A         	movff	loadData16@valFinale,?_loadData16
  7108   003910  C025  F01B         	movff	loadData16@valFinale+1,?_loadData16+1
  7109   003914  C026  F01C         	movff	loadData16@valFinale+2,?_loadData16+2
  7110   003918  C027  F01D         	movff	loadData16@valFinale+3,?_loadData16+3
  7111   00391C  0012               	return		;funcret
  7112   00391E                     __end_of_loadData16:
  7113                           	callstack 0
  7114                           
  7115 ;; *************** function _loadData *****************
  7116 ;; Defined at:
  7117 ;;		line 244 in file "SPI26K83.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  address         2    0[COMRAM] int 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  valEEPROM3      1    7[COMRAM] unsigned char 
  7122 ;;  valEEPROM2      1    6[COMRAM] unsigned char 
  7123 ;;  valEEPROM1      1    0        unsigned char 
  7124 ;;  valEEPROM       1    5[COMRAM] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  2    0[COMRAM] int 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0, prodl, prodh
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;Total ram usage:        8 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;;		_loadData16
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text30
  7149   003412                     __ptext30:
  7150                           	callstack 0
  7151   003412                     _loadData:
  7152                           	callstack 29
  7153   003412                     
  7154                           ;SPI26K83.c: 248:     PORTBbits.RB3 = 1;
  7155   003412  86CB               	bsf	203,3,c	;volatile
  7156                           
  7157                           ;SPI26K83.c: 249:     SPI1TWIDTH = 0;
  7158   003414  0E00               	movlw	0
  7159   003416  013D               	movlb	61	; () banked
  7160   003418  6F18               	movwf	24,b	;volatile
  7161                           
  7162                           ;SPI26K83.c: 250:     SPI1TCNTL = 3;
  7163   00341A  0E03               	movlw	3
  7164   00341C  6F12               	movwf	18,b	;volatile
  7165                           
  7166                           ;SPI26K83.c: 251:     SPI1TCNTH = 0;
  7167   00341E  0E00               	movlw	0
  7168   003420  6F13               	movwf	19,b	;volatile
  7169   003422                     
  7170                           ; BSR set to: 61
  7171                           ;SPI26K83.c: 252:     SPI1CON2bits.TXR = 1;
  7172   003422  8316               	bsf	22,1,b	;volatile
  7173   003424                     
  7174                           ; BSR set to: 61
  7175                           ;SPI26K83.c: 253:     SPI1CON2bits.RXR = 1;
  7176   003424  8116               	bsf	22,0,b	;volatile
  7177   003426                     
  7178                           ; BSR set to: 61
  7179                           ;SPI26K83.c: 254:     SPI1CON0bits.EN = 1;
  7180   003426  8F14               	bsf	20,7,b	;volatile
  7181   003428                     
  7182                           ; BSR set to: 61
  7183                           ;SPI26K83.c: 255:     SPI1TXB = 0b11000000 + (address >> 4);
  7184   003428  C001  F003         	movff	loadData@address,??_loadData
  7185   00342C  C002  F004         	movff	loadData@address+1,??_loadData+1
  7186   003430  0E04               	movlw	4
  7187   003432  6E05               	movwf	(??_loadData+2)^0,c
  7188   003434                     u4125:
  7189   003434  3404               	rlcf	(??_loadData+1)^0,w,c
  7190   003436  3204               	rrcf	(??_loadData+1)^0,f,c
  7191   003438  3203               	rrcf	??_loadData^0,f,c
  7192   00343A  2E05               	decfsz	(??_loadData+2)^0,f,c
  7193   00343C  EF1A  F01A         	goto	u4125
  7194   003440  5003               	movf	??_loadData^0,w,c
  7195   003442  0FC0               	addlw	192
  7196   003444  6F11               	movwf	17,b	;volatile
  7197   003446                     l168:
  7198                           
  7199                           ; BSR set to: 61
  7200   003446  AB17               	btfss	23,5,b	;volatile
  7201   003448  EF28  F01A         	goto	u4131
  7202   00344C  EF2A  F01A         	goto	u4130
  7203   003450                     u4131:
  7204   003450  EF23  F01A         	goto	l168
  7205   003454                     u4130:
  7206   003454                     
  7207                           ; BSR set to: 61
  7208   003454  5110               	movf	16,w,b	;volatile
  7209   003456                     
  7210                           ; BSR set to: 61
  7211                           ;SPI26K83.c: 258:     SPI1TXB = 0b0000 + (address << 4) + 0000;
  7212   003456  3801               	swapf	loadData@address^0,w,c
  7213   003458  0BF0               	andlw	240
  7214   00345A  6F11               	movwf	17,b	;volatile
  7215   00345C                     l171:
  7216                           
  7217                           ; BSR set to: 61
  7218   00345C  AB17               	btfss	23,5,b	;volatile
  7219   00345E  EF33  F01A         	goto	u4141
  7220   003462  EF35  F01A         	goto	u4140
  7221   003466                     u4141:
  7222   003466  EF2E  F01A         	goto	l171
  7223   00346A                     u4140:
  7224   00346A                     
  7225                           ; BSR set to: 61
  7226                           ;SPI26K83.c: 260:     valEEPROM2 = SPI1RXB;
  7227   00346A  006F F440  F007    	movff	15632,loadData@valEEPROM2	;volatile
  7228                           
  7229                           ;SPI26K83.c: 261:     SPI1TXB = 0b11111111;
  7230   003470  6911               	setf	17,b	;volatile
  7231   003472                     l174:
  7232                           
  7233                           ; BSR set to: 61
  7234   003472  AB17               	btfss	23,5,b	;volatile
  7235   003474  EF3E  F01A         	goto	u4151
  7236   003478  EF40  F01A         	goto	u4150
  7237   00347C                     u4151:
  7238   00347C  EF39  F01A         	goto	l174
  7239   003480                     u4150:
  7240   003480                     
  7241                           ; BSR set to: 61
  7242                           ;SPI26K83.c: 263:     valEEPROM3 = SPI1RXB;
  7243   003480  006F F440  F008    	movff	15632,loadData@valEEPROM3	;volatile
  7244   003486                     
  7245                           ; BSR set to: 61
  7246                           ;SPI26K83.c: 264:     PORTCbits.RC2 = !PORTCbits.RC2;
  7247   003486  A4CC               	btfss	204,2,c	;volatile
  7248   003488  EF48  F01A         	goto	u4161
  7249   00348C  EF4C  F01A         	goto	u4160
  7250   003490                     u4161:
  7251   003490  6A03               	clrf	??_loadData^0,c
  7252   003492  2A03               	incf	??_loadData^0,f,c
  7253   003494  EF4D  F01A         	goto	u4178
  7254   003498                     u4160:
  7255   003498  6A03               	clrf	??_loadData^0,c
  7256   00349A                     u4178:
  7257   00349A  4603               	rlncf	??_loadData^0,f,c
  7258   00349C  4603               	rlncf	??_loadData^0,f,c
  7259   00349E  50CC               	movf	204,w,c	;volatile
  7260   0034A0  1803               	xorwf	??_loadData^0,w,c
  7261   0034A2  0BFB               	andlw	-5
  7262   0034A4  1803               	xorwf	??_loadData^0,w,c
  7263   0034A6  6ECC               	movwf	204,c	;volatile
  7264   0034A8                     
  7265                           ;SPI26K83.c: 265:     SPI1CON2bits.RXR = 0;
  7266   0034A8  013D               	movlb	61	; () banked
  7267   0034AA  9116               	bcf	22,0,b	;volatile
  7268   0034AC                     
  7269                           ; BSR set to: 61
  7270                           ;SPI26K83.c: 266:     SPI1CON2bits.TXR = 0;
  7271   0034AC  9316               	bcf	22,1,b	;volatile
  7272   0034AE                     
  7273                           ; BSR set to: 61
  7274                           ;SPI26K83.c: 267:     PORTBbits.RB3 = 0;
  7275   0034AE  96CB               	bcf	203,3,c	;volatile
  7276   0034B0                     
  7277                           ; BSR set to: 61
  7278                           ;SPI26K83.c: 268:     SPI1CON0bits.EN = 0;
  7279   0034B0  9F14               	bcf	20,7,b	;volatile
  7280   0034B2                     
  7281                           ; BSR set to: 61
  7282                           ;SPI26K83.c: 269:     _delay((unsigned long)((20)*(64000000/4000.0)));
  7283   0034B2  0E02               	movlw	2
  7284   0034B4  6E04               	movwf	(??_loadData+1)^0,c
  7285   0034B6  0EA0               	movlw	160
  7286   0034B8  6E03               	movwf	??_loadData^0,c
  7287   0034BA  0E92               	movlw	146
  7288   0034BC                     u5097:
  7289   0034BC  2EE8               	decfsz	wreg,f,c
  7290   0034BE  D7FE               	bra	u5097
  7291   0034C0  2E03               	decfsz	??_loadData^0,f,c
  7292   0034C2  D7FC               	bra	u5097
  7293   0034C4  2E04               	decfsz	(??_loadData+1)^0,f,c
  7294   0034C6  D7FA               	bra	u5097
  7295   0034C8  D000               	nop2	
  7296   0034CA                     
  7297                           ;SPI26K83.c: 271:     return valEEPROM = (valEEPROM2 << 4) + (valEEPROM3 >>4);
  7298   0034CA  C008  F003         	movff	loadData@valEEPROM3,??_loadData
  7299   0034CE  3A03               	swapf	??_loadData^0,f,c
  7300   0034D0  0E0F               	movlw	15
  7301   0034D2  1603               	andwf	??_loadData^0,f,c
  7302   0034D4  5007               	movf	loadData@valEEPROM2^0,w,c
  7303   0034D6  0D10               	mullw	16
  7304   0034D8  50F3               	movf	243,w,c
  7305   0034DA  2403               	addwf	??_loadData^0,w,c
  7306   0034DC  6E06               	movwf	loadData@valEEPROM^0,c
  7307   0034DE  C006  F001         	movff	loadData@valEEPROM,?_loadData
  7308   0034E2  6A02               	clrf	(?_loadData+1)^0,c
  7309   0034E4  0012               	return		;funcret
  7310   0034E6                     __end_of_loadData:
  7311                           	callstack 0
  7312                           
  7313 ;; *************** function ___xxtofl *****************
  7314 ;; Defined at:
  7315 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  sign            1    wreg     unsigned char 
  7318 ;;  val             4    8[COMRAM] long 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  sign            1   16[COMRAM] unsigned char 
  7321 ;;  arg             4   18[COMRAM] unsigned long 
  7322 ;;  exp             1   17[COMRAM] unsigned char 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  4    8[COMRAM] unsigned char 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;Total ram usage:       14 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;;		_loadData16
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text31
  7347   002DDC                     __ptext31:
  7348                           	callstack 0
  7349   002DDC                     ___xxtofl:
  7350                           	callstack 29
  7351                           
  7352                           ;incstack = 0
  7353                           ;___xxtofl@sign stored from wreg
  7354   002DDC  6E11               	movwf	___xxtofl@sign^0,c
  7355   002DDE  5011               	movf	___xxtofl@sign^0,w,c
  7356   002DE0  B4D8               	btfsc	status,2,c
  7357   002DE2  EFF5  F016         	goto	u4251
  7358   002DE6  EFF7  F016         	goto	u4250
  7359   002DEA                     u4251:
  7360   002DEA  EF19  F017         	goto	l844
  7361   002DEE                     u4250:
  7362   002DEE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  7363   002DF0  EFFE  F016         	goto	u4260
  7364   002DF4  EFFC  F016         	goto	u4261
  7365   002DF8                     u4261:
  7366   002DF8  EF19  F017         	goto	l844
  7367   002DFC                     u4260:
  7368   002DFC  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  7369   002E00  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  7370   002E04  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  7371   002E08  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  7372   002E0C  1E0D               	comf	??___xxtofl^0,f,c
  7373   002E0E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  7374   002E10  1E0F               	comf	(??___xxtofl+2)^0,f,c
  7375   002E12  1E10               	comf	(??___xxtofl+3)^0,f,c
  7376   002E14  2A0D               	incf	??___xxtofl^0,f,c
  7377   002E16  0E00               	movlw	0
  7378   002E18  220E               	addwfc	(??___xxtofl+1)^0,f,c
  7379   002E1A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  7380   002E1C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  7381   002E1E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  7382   002E22  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  7383   002E26  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  7384   002E2A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  7385   002E2E  EF21  F017         	goto	l3837
  7386   002E32                     l844:
  7387   002E32  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  7388   002E36  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7389   002E3A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7390   002E3E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7391   002E42                     l3837:
  7392   002E42  5009               	movf	___xxtofl@val^0,w,c
  7393   002E44  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  7394   002E46  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  7395   002E48  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  7396   002E4A  A4D8               	btfss	status,2,c
  7397   002E4C  EF2A  F017         	goto	u4271
  7398   002E50  EF2C  F017         	goto	u4270
  7399   002E54                     u4271:
  7400   002E54  EF36  F017         	goto	l3843
  7401   002E58                     u4270:
  7402   002E58  0E00               	movlw	0
  7403   002E5A  6E09               	movwf	?___xxtofl^0,c
  7404   002E5C  0E00               	movlw	0
  7405   002E5E  6E0A               	movwf	(?___xxtofl+1)^0,c
  7406   002E60  0E00               	movlw	0
  7407   002E62  6E0B               	movwf	(?___xxtofl+2)^0,c
  7408   002E64  0E00               	movlw	0
  7409   002E66  6E0C               	movwf	(?___xxtofl+3)^0,c
  7410   002E68  EFC7  F017         	goto	l847
  7411   002E6C                     l3843:
  7412   002E6C  0E96               	movlw	150
  7413   002E6E  6E12               	movwf	___xxtofl@exp^0,c
  7414   002E70  EF40  F017         	goto	l3847
  7415   002E74                     l3845:
  7416   002E74  2A12               	incf	___xxtofl@exp^0,f,c
  7417   002E76  90D8               	bcf	status,0,c
  7418   002E78  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  7419   002E7A  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  7420   002E7C  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  7421   002E7E  3213               	rrcf	___xxtofl@arg^0,f,c
  7422   002E80                     l3847:
  7423   002E80  0E00               	movlw	0
  7424   002E82  1413               	andwf	___xxtofl@arg^0,w,c
  7425   002E84  6E0D               	movwf	??___xxtofl^0,c
  7426   002E86  0E00               	movlw	0
  7427   002E88  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  7428   002E8A  6E0E               	movwf	(??___xxtofl+1)^0,c
  7429   002E8C  0E00               	movlw	0
  7430   002E8E  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  7431   002E90  6E0F               	movwf	(??___xxtofl+2)^0,c
  7432   002E92  0EFE               	movlw	254
  7433   002E94  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  7434   002E96  6E10               	movwf	(??___xxtofl+3)^0,c
  7435   002E98  500D               	movf	??___xxtofl^0,w,c
  7436   002E9A  100E               	iorwf	(??___xxtofl+1)^0,w,c
  7437   002E9C  100F               	iorwf	(??___xxtofl+2)^0,w,c
  7438   002E9E  1010               	iorwf	(??___xxtofl+3)^0,w,c
  7439   002EA0  A4D8               	btfss	status,2,c
  7440   002EA2  EF55  F017         	goto	u4281
  7441   002EA6  EF57  F017         	goto	u4280
  7442   002EAA                     u4281:
  7443   002EAA  EF3A  F017         	goto	l3845
  7444   002EAE                     u4280:
  7445   002EAE  EF65  F017         	goto	l851
  7446   002EB2                     l3849:
  7447   002EB2  2A12               	incf	___xxtofl@exp^0,f,c
  7448   002EB4  0E01               	movlw	1
  7449   002EB6  2613               	addwf	___xxtofl@arg^0,f,c
  7450   002EB8  0E00               	movlw	0
  7451   002EBA  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  7452   002EBC  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  7453   002EBE  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  7454   002EC0  90D8               	bcf	status,0,c
  7455   002EC2  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  7456   002EC4  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  7457   002EC6  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  7458   002EC8  3213               	rrcf	___xxtofl@arg^0,f,c
  7459   002ECA                     l851:
  7460   002ECA  0E00               	movlw	0
  7461   002ECC  1413               	andwf	___xxtofl@arg^0,w,c
  7462   002ECE  6E0D               	movwf	??___xxtofl^0,c
  7463   002ED0  0E00               	movlw	0
  7464   002ED2  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  7465   002ED4  6E0E               	movwf	(??___xxtofl+1)^0,c
  7466   002ED6  0E00               	movlw	0
  7467   002ED8  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  7468   002EDA  6E0F               	movwf	(??___xxtofl+2)^0,c
  7469   002EDC  0EFF               	movlw	255
  7470   002EDE  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  7471   002EE0  6E10               	movwf	(??___xxtofl+3)^0,c
  7472   002EE2  500D               	movf	??___xxtofl^0,w,c
  7473   002EE4  100E               	iorwf	(??___xxtofl+1)^0,w,c
  7474   002EE6  100F               	iorwf	(??___xxtofl+2)^0,w,c
  7475   002EE8  1010               	iorwf	(??___xxtofl+3)^0,w,c
  7476   002EEA  A4D8               	btfss	status,2,c
  7477   002EEC  EF7A  F017         	goto	u4291
  7478   002EF0  EF7C  F017         	goto	u4290
  7479   002EF4                     u4291:
  7480   002EF4  EF59  F017         	goto	l3849
  7481   002EF8                     u4290:
  7482   002EF8  EF84  F017         	goto	l3857
  7483   002EFC                     l3855:
  7484   002EFC  0612               	decf	___xxtofl@exp^0,f,c
  7485   002EFE  90D8               	bcf	status,0,c
  7486   002F00  3613               	rlcf	___xxtofl@arg^0,f,c
  7487   002F02  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  7488   002F04  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  7489   002F06  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  7490   002F08                     l3857:
  7491   002F08  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  7492   002F0A  EF89  F017         	goto	u4301
  7493   002F0E  EF8B  F017         	goto	u4300
  7494   002F12                     u4301:
  7495   002F12  EF93  F017         	goto	l858
  7496   002F16                     u4300:
  7497   002F16  0E02               	movlw	2
  7498   002F18  6012               	cpfslt	___xxtofl@exp^0,c
  7499   002F1A  EF91  F017         	goto	u4311
  7500   002F1E  EF93  F017         	goto	u4310
  7501   002F22                     u4311:
  7502   002F22  EF7E  F017         	goto	l3855
  7503   002F26                     u4310:
  7504   002F26                     l858:
  7505   002F26  B012               	btfsc	___xxtofl@exp^0,0,c
  7506   002F28  EF98  F017         	goto	u4321
  7507   002F2C  EF9A  F017         	goto	u4320
  7508   002F30                     u4321:
  7509   002F30  EF9B  F017         	goto	l3863
  7510   002F34                     u4320:
  7511   002F34  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  7512   002F36                     l3863:
  7513   002F36  90D8               	bcf	status,0,c
  7514   002F38  3212               	rrcf	___xxtofl@exp^0,f,c
  7515   002F3A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  7516   002F3E  6A0E               	clrf	(??___xxtofl+1)^0,c
  7517   002F40  6A0F               	clrf	(??___xxtofl+2)^0,c
  7518   002F42  6A10               	clrf	(??___xxtofl+3)^0,c
  7519   002F44  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  7520   002F48  6A0F               	clrf	(??___xxtofl+2)^0,c
  7521   002F4A  6A0E               	clrf	(??___xxtofl+1)^0,c
  7522   002F4C  6A0D               	clrf	??___xxtofl^0,c
  7523   002F4E  500D               	movf	??___xxtofl^0,w,c
  7524   002F50  1213               	iorwf	___xxtofl@arg^0,f,c
  7525   002F52  500E               	movf	(??___xxtofl+1)^0,w,c
  7526   002F54  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  7527   002F56  500F               	movf	(??___xxtofl+2)^0,w,c
  7528   002F58  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  7529   002F5A  5010               	movf	(??___xxtofl+3)^0,w,c
  7530   002F5C  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  7531   002F5E  5011               	movf	___xxtofl@sign^0,w,c
  7532   002F60  B4D8               	btfsc	status,2,c
  7533   002F62  EFB5  F017         	goto	u4331
  7534   002F66  EFB7  F017         	goto	u4330
  7535   002F6A                     u4331:
  7536   002F6A  EFBF  F017         	goto	l3873
  7537   002F6E                     u4330:
  7538   002F6E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  7539   002F70  EFBE  F017         	goto	u4340
  7540   002F74  EFBC  F017         	goto	u4341
  7541   002F78                     u4341:
  7542   002F78  EFBF  F017         	goto	l3873
  7543   002F7C                     u4340:
  7544   002F7C  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  7545   002F7E                     l3873:
  7546   002F7E  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  7547   002F82  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  7548   002F86  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  7549   002F8A  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  7550   002F8E                     l847:
  7551   002F8E  0012               	return		;funcret
  7552   002F90                     __end_of___xxtofl:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function ___fldiv *****************
  7556 ;; Defined at:
  7557 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  b               4    0[COMRAM] unsigned char 
  7560 ;;  a               4    4[COMRAM] unsigned char 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  grs             4   19[COMRAM] unsigned long 
  7563 ;;  rem             4   12[COMRAM] unsigned long 
  7564 ;;  new_exp         2   17[COMRAM] short 
  7565 ;;  aexp            1   24[COMRAM] unsigned char 
  7566 ;;  bexp            1   23[COMRAM] unsigned char 
  7567 ;;  sign            1   16[COMRAM] unsigned char 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  4    0[COMRAM] unsigned char 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7577 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;Total ram usage:       25 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; This function calls:
  7584 ;;		Nothing
  7585 ;; This function is called by:
  7586 ;;		_loadData16
  7587 ;;		_efgtoa
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text32
  7592   00231A                     __ptext32:
  7593                           	callstack 0
  7594   00231A                     ___fldiv:
  7595                           	callstack 26
  7596   00231A  5004               	movf	(___fldiv@b+3)^0,w,c
  7597   00231C  0B80               	andlw	128
  7598   00231E  6E11               	movwf	___fldiv@sign^0,c
  7599   002320  5004               	movf	(___fldiv@b+3)^0,w,c
  7600   002322  2404               	addwf	(___fldiv@b+3)^0,w,c
  7601   002324  6E18               	movwf	___fldiv@bexp^0,c
  7602   002326  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7603   002328  EF98  F011         	goto	u2671
  7604   00232C  EF9A  F011         	goto	u2670
  7605   002330                     u2671:
  7606   002330  EF9B  F011         	goto	l2839
  7607   002334                     u2670:
  7608   002334  8018               	bsf	___fldiv@bexp^0,0,c
  7609   002336                     l2839:
  7610   002336  5018               	movf	___fldiv@bexp^0,w,c
  7611   002338  B4D8               	btfsc	status,2,c
  7612   00233A  EFA1  F011         	goto	u2681
  7613   00233E  EFA3  F011         	goto	u2680
  7614   002342                     u2681:
  7615   002342  EFB8  F011         	goto	l2849
  7616   002346                     u2680:
  7617   002346  2818               	incf	___fldiv@bexp^0,w,c
  7618   002348  A4D8               	btfss	status,2,c
  7619   00234A  EFA9  F011         	goto	u2691
  7620   00234E  EFAB  F011         	goto	u2690
  7621   002352                     u2691:
  7622   002352  EFB3  F011         	goto	l2845
  7623   002356                     u2690:
  7624   002356  0E00               	movlw	0
  7625   002358  6E01               	movwf	___fldiv@b^0,c
  7626   00235A  0E00               	movlw	0
  7627   00235C  6E02               	movwf	(___fldiv@b+1)^0,c
  7628   00235E  0E00               	movlw	0
  7629   002360  6E03               	movwf	(___fldiv@b+2)^0,c
  7630   002362  0E00               	movlw	0
  7631   002364  6E04               	movwf	(___fldiv@b+3)^0,c
  7632   002366                     l2845:
  7633   002366  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7634   002368  0E00               	movlw	0
  7635   00236A  6E04               	movwf	(___fldiv@b+3)^0,c
  7636   00236C  EFC0  F011         	goto	l2851
  7637   002370                     l2849:
  7638   002370  0E00               	movlw	0
  7639   002372  6E01               	movwf	___fldiv@b^0,c
  7640   002374  0E00               	movlw	0
  7641   002376  6E02               	movwf	(___fldiv@b+1)^0,c
  7642   002378  0E00               	movlw	0
  7643   00237A  6E03               	movwf	(___fldiv@b+2)^0,c
  7644   00237C  0E00               	movlw	0
  7645   00237E  6E04               	movwf	(___fldiv@b+3)^0,c
  7646   002380                     l2851:
  7647   002380  5008               	movf	(___fldiv@a+3)^0,w,c
  7648   002382  0B80               	andlw	128
  7649   002384  1A11               	xorwf	___fldiv@sign^0,f,c
  7650   002386  5008               	movf	(___fldiv@a+3)^0,w,c
  7651   002388  2408               	addwf	(___fldiv@a+3)^0,w,c
  7652   00238A  6E19               	movwf	___fldiv@aexp^0,c
  7653   00238C  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7654   00238E  EFCB  F011         	goto	u2701
  7655   002392  EFCD  F011         	goto	u2700
  7656   002396                     u2701:
  7657   002396  EFCE  F011         	goto	l2859
  7658   00239A                     u2700:
  7659   00239A  8019               	bsf	___fldiv@aexp^0,0,c
  7660   00239C                     l2859:
  7661   00239C  5019               	movf	___fldiv@aexp^0,w,c
  7662   00239E  B4D8               	btfsc	status,2,c
  7663   0023A0  EFD4  F011         	goto	u2711
  7664   0023A4  EFD6  F011         	goto	u2710
  7665   0023A8                     u2711:
  7666   0023A8  EFEB  F011         	goto	l2869
  7667   0023AC                     u2710:
  7668   0023AC  2819               	incf	___fldiv@aexp^0,w,c
  7669   0023AE  A4D8               	btfss	status,2,c
  7670   0023B0  EFDC  F011         	goto	u2721
  7671   0023B4  EFDE  F011         	goto	u2720
  7672   0023B8                     u2721:
  7673   0023B8  EFE6  F011         	goto	l2865
  7674   0023BC                     u2720:
  7675   0023BC  0E00               	movlw	0
  7676   0023BE  6E05               	movwf	___fldiv@a^0,c
  7677   0023C0  0E00               	movlw	0
  7678   0023C2  6E06               	movwf	(___fldiv@a+1)^0,c
  7679   0023C4  0E00               	movlw	0
  7680   0023C6  6E07               	movwf	(___fldiv@a+2)^0,c
  7681   0023C8  0E00               	movlw	0
  7682   0023CA  6E08               	movwf	(___fldiv@a+3)^0,c
  7683   0023CC                     l2865:
  7684   0023CC  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7685   0023CE  0E00               	movlw	0
  7686   0023D0  6E08               	movwf	(___fldiv@a+3)^0,c
  7687   0023D2  EFF3  F011         	goto	l2871
  7688   0023D6                     l2869:
  7689   0023D6  0E00               	movlw	0
  7690   0023D8  6E05               	movwf	___fldiv@a^0,c
  7691   0023DA  0E00               	movlw	0
  7692   0023DC  6E06               	movwf	(___fldiv@a+1)^0,c
  7693   0023DE  0E00               	movlw	0
  7694   0023E0  6E07               	movwf	(___fldiv@a+2)^0,c
  7695   0023E2  0E00               	movlw	0
  7696   0023E4  6E08               	movwf	(___fldiv@a+3)^0,c
  7697   0023E6                     l2871:
  7698   0023E6  5005               	movf	___fldiv@a^0,w,c
  7699   0023E8  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7700   0023EA  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7701   0023EC  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7702   0023EE  A4D8               	btfss	status,2,c
  7703   0023F0  EFFC  F011         	goto	u2731
  7704   0023F4  EFFE  F011         	goto	u2730
  7705   0023F8                     u2731:
  7706   0023F8  EF16  F012         	goto	l2883
  7707   0023FC                     u2730:
  7708   0023FC  0E00               	movlw	0
  7709   0023FE  6E01               	movwf	___fldiv@b^0,c
  7710   002400  0E00               	movlw	0
  7711   002402  6E02               	movwf	(___fldiv@b+1)^0,c
  7712   002404  0E00               	movlw	0
  7713   002406  6E03               	movwf	(___fldiv@b+2)^0,c
  7714   002408  0E00               	movlw	0
  7715   00240A  6E04               	movwf	(___fldiv@b+3)^0,c
  7716   00240C  0E80               	movlw	128
  7717   00240E  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7718   002410  0E7F               	movlw	127
  7719   002412  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7720   002414                     l2877:
  7721   002414  5011               	movf	___fldiv@sign^0,w,c
  7722   002416  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7723   002418  C001  F001         	movff	___fldiv@b,?___fldiv
  7724   00241C  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7725   002420  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7726   002424  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7727   002428  EF59  F013         	goto	l771
  7728   00242C                     l2883:
  7729   00242C  5018               	movf	___fldiv@bexp^0,w,c
  7730   00242E  A4D8               	btfss	status,2,c
  7731   002430  EF1C  F012         	goto	u2741
  7732   002434  EF1E  F012         	goto	u2740
  7733   002438                     u2741:
  7734   002438  EF28  F012         	goto	l2891
  7735   00243C                     u2740:
  7736   00243C  0E00               	movlw	0
  7737   00243E  6E01               	movwf	?___fldiv^0,c
  7738   002440  0E00               	movlw	0
  7739   002442  6E02               	movwf	(?___fldiv+1)^0,c
  7740   002444  0E00               	movlw	0
  7741   002446  6E03               	movwf	(?___fldiv+2)^0,c
  7742   002448  0E00               	movlw	0
  7743   00244A  6E04               	movwf	(?___fldiv+3)^0,c
  7744   00244C  EF59  F013         	goto	l771
  7745   002450                     l2891:
  7746   002450  5019               	movf	___fldiv@aexp^0,w,c
  7747   002452  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7748   002456  6A0A               	clrf	(??___fldiv+1)^0,c
  7749   002458  5E09               	subwf	??___fldiv^0,f,c
  7750   00245A  0E00               	movlw	0
  7751   00245C  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7752   00245E  0E7F               	movlw	127
  7753   002460  2409               	addwf	??___fldiv^0,w,c
  7754   002462  6E12               	movwf	___fldiv@new_exp^0,c
  7755   002464  0E00               	movlw	0
  7756   002466  200A               	addwfc	(??___fldiv+1)^0,w,c
  7757   002468  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7758   00246A  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7759   00246E  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7760   002472  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7761   002476  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7762   00247A  0E00               	movlw	0
  7763   00247C  6E01               	movwf	___fldiv@b^0,c
  7764   00247E  0E00               	movlw	0
  7765   002480  6E02               	movwf	(___fldiv@b+1)^0,c
  7766   002482  0E00               	movlw	0
  7767   002484  6E03               	movwf	(___fldiv@b+2)^0,c
  7768   002486  0E00               	movlw	0
  7769   002488  6E04               	movwf	(___fldiv@b+3)^0,c
  7770   00248A  0E00               	movlw	0
  7771   00248C  6E14               	movwf	___fldiv@grs^0,c
  7772   00248E  0E00               	movlw	0
  7773   002490  6E15               	movwf	(___fldiv@grs+1)^0,c
  7774   002492  0E00               	movlw	0
  7775   002494  6E16               	movwf	(___fldiv@grs+2)^0,c
  7776   002496  0E00               	movlw	0
  7777   002498  6E17               	movwf	(___fldiv@grs+3)^0,c
  7778   00249A  0E00               	movlw	0
  7779   00249C  6E19               	movwf	___fldiv@aexp^0,c
  7780   00249E  EF89  F012         	goto	l773
  7781   0024A2                     l2901:
  7782   0024A2  5019               	movf	___fldiv@aexp^0,w,c
  7783   0024A4  B4D8               	btfsc	status,2,c
  7784   0024A6  EF57  F012         	goto	u2751
  7785   0024AA  EF59  F012         	goto	u2750
  7786   0024AE                     u2751:
  7787   0024AE  EF70  F012         	goto	l2909
  7788   0024B2                     u2750:
  7789   0024B2  90D8               	bcf	status,0,c
  7790   0024B4  360D               	rlcf	___fldiv@rem^0,f,c
  7791   0024B6  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7792   0024B8  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7793   0024BA  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7794   0024BC  90D8               	bcf	status,0,c
  7795   0024BE  3601               	rlcf	___fldiv@b^0,f,c
  7796   0024C0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7797   0024C2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7798   0024C4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7799   0024C6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7800   0024C8  EF68  F012         	goto	u2761
  7801   0024CC  EF6A  F012         	goto	u2760
  7802   0024D0                     u2761:
  7803   0024D0  EF6B  F012         	goto	l776
  7804   0024D4                     u2760:
  7805   0024D4  8001               	bsf	___fldiv@b^0,0,c
  7806   0024D6                     l776:
  7807   0024D6  90D8               	bcf	status,0,c
  7808   0024D8  3614               	rlcf	___fldiv@grs^0,f,c
  7809   0024DA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7810   0024DC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7811   0024DE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7812   0024E0                     l2909:
  7813   0024E0  5005               	movf	___fldiv@a^0,w,c
  7814   0024E2  5C0D               	subwf	___fldiv@rem^0,w,c
  7815   0024E4  5006               	movf	(___fldiv@a+1)^0,w,c
  7816   0024E6  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7817   0024E8  5007               	movf	(___fldiv@a+2)^0,w,c
  7818   0024EA  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7819   0024EC  5008               	movf	(___fldiv@a+3)^0,w,c
  7820   0024EE  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7821   0024F0  A0D8               	btfss	status,0,c
  7822   0024F2  EF7D  F012         	goto	u2771
  7823   0024F6  EF7F  F012         	goto	u2770
  7824   0024FA                     u2771:
  7825   0024FA  EF88  F012         	goto	l2915
  7826   0024FE                     u2770:
  7827   0024FE  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7828   002500  5005               	movf	___fldiv@a^0,w,c
  7829   002502  5E0D               	subwf	___fldiv@rem^0,f,c
  7830   002504  5006               	movf	(___fldiv@a+1)^0,w,c
  7831   002506  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7832   002508  5007               	movf	(___fldiv@a+2)^0,w,c
  7833   00250A  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7834   00250C  5008               	movf	(___fldiv@a+3)^0,w,c
  7835   00250E  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7836   002510                     l2915:
  7837   002510  2A19               	incf	___fldiv@aexp^0,f,c
  7838   002512                     l773:
  7839   002512  0E19               	movlw	25
  7840   002514  6419               	cpfsgt	___fldiv@aexp^0,c
  7841   002516  EF8F  F012         	goto	u2781
  7842   00251A  EF91  F012         	goto	u2780
  7843   00251E                     u2781:
  7844   00251E  EF51  F012         	goto	l2901
  7845   002522                     u2780:
  7846   002522  500D               	movf	___fldiv@rem^0,w,c
  7847   002524  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7848   002526  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7849   002528  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7850   00252A  B4D8               	btfsc	status,2,c
  7851   00252C  EF9A  F012         	goto	u2791
  7852   002530  EF9C  F012         	goto	u2790
  7853   002534                     u2791:
  7854   002534  EFB4  F012         	goto	l2927
  7855   002538                     u2790:
  7856   002538  8014               	bsf	___fldiv@grs^0,0,c
  7857   00253A  EFB4  F012         	goto	l2927
  7858   00253E                     l2921:
  7859   00253E  90D8               	bcf	status,0,c
  7860   002540  3601               	rlcf	___fldiv@b^0,f,c
  7861   002542  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7862   002544  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7863   002546  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7864   002548  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7865   00254A  EFA9  F012         	goto	u2801
  7866   00254E  EFAB  F012         	goto	u2800
  7867   002552                     u2801:
  7868   002552  EFAC  F012         	goto	l782
  7869   002556                     u2800:
  7870   002556  8001               	bsf	___fldiv@b^0,0,c
  7871   002558                     l782:
  7872   002558  90D8               	bcf	status,0,c
  7873   00255A  3614               	rlcf	___fldiv@grs^0,f,c
  7874   00255C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7875   00255E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7876   002560  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7877   002562  0612               	decf	___fldiv@new_exp^0,f,c
  7878   002564  A0D8               	btfss	status,0,c
  7879   002566  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7880   002568                     l2927:
  7881   002568  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7882   00256A  EFB9  F012         	goto	u2811
  7883   00256E  EFBB  F012         	goto	u2810
  7884   002572                     u2811:
  7885   002572  EF9F  F012         	goto	l2921
  7886   002576                     u2810:
  7887   002576  0E00               	movlw	0
  7888   002578  6E19               	movwf	___fldiv@aexp^0,c
  7889   00257A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7890   00257C  EFC2  F012         	goto	u2821
  7891   002580  EFC4  F012         	goto	u2820
  7892   002584                     u2821:
  7893   002584  EFE8  F012         	goto	l784
  7894   002588                     u2820:
  7895   002588  0EFF               	movlw	255
  7896   00258A  1414               	andwf	___fldiv@grs^0,w,c
  7897   00258C  6E09               	movwf	??___fldiv^0,c
  7898   00258E  0EFF               	movlw	255
  7899   002590  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7900   002592  6E0A               	movwf	(??___fldiv+1)^0,c
  7901   002594  0EFF               	movlw	255
  7902   002596  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7903   002598  6E0B               	movwf	(??___fldiv+2)^0,c
  7904   00259A  0E7F               	movlw	127
  7905   00259C  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7906   00259E  6E0C               	movwf	(??___fldiv+3)^0,c
  7907   0025A0  5009               	movf	??___fldiv^0,w,c
  7908   0025A2  100A               	iorwf	(??___fldiv+1)^0,w,c
  7909   0025A4  100B               	iorwf	(??___fldiv+2)^0,w,c
  7910   0025A6  100C               	iorwf	(??___fldiv+3)^0,w,c
  7911   0025A8  B4D8               	btfsc	status,2,c
  7912   0025AA  EFD9  F012         	goto	u2831
  7913   0025AE  EFDB  F012         	goto	u2830
  7914   0025B2                     u2831:
  7915   0025B2  EFDF  F012         	goto	l785
  7916   0025B6                     u2830:
  7917   0025B6                     l2935:
  7918   0025B6  0E01               	movlw	1
  7919   0025B8  6E19               	movwf	___fldiv@aexp^0,c
  7920   0025BA  EFE8  F012         	goto	l784
  7921   0025BE                     l785:
  7922   0025BE  A001               	btfss	___fldiv@b^0,0,c
  7923   0025C0  EFE4  F012         	goto	u2841
  7924   0025C4  EFE6  F012         	goto	u2840
  7925   0025C8                     u2841:
  7926   0025C8  EFE8  F012         	goto	l784
  7927   0025CC                     u2840:
  7928   0025CC  EFDB  F012         	goto	l2935
  7929   0025D0                     l784:
  7930   0025D0  5019               	movf	___fldiv@aexp^0,w,c
  7931   0025D2  B4D8               	btfsc	status,2,c
  7932   0025D4  EFEE  F012         	goto	u2851
  7933   0025D8  EFF0  F012         	goto	u2850
  7934   0025DC                     u2851:
  7935   0025DC  EF14  F013         	goto	l2947
  7936   0025E0                     u2850:
  7937   0025E0  0E01               	movlw	1
  7938   0025E2  2601               	addwf	___fldiv@b^0,f,c
  7939   0025E4  0E00               	movlw	0
  7940   0025E6  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7941   0025E8  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7942   0025EA  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7943   0025EC  A004               	btfss	(___fldiv@b+3)^0,0,c
  7944   0025EE  EFFB  F012         	goto	u2861
  7945   0025F2  EFFD  F012         	goto	u2860
  7946   0025F6                     u2861:
  7947   0025F6  EF14  F013         	goto	l2947
  7948   0025FA                     u2860:
  7949   0025FA  C001  F009         	movff	___fldiv@b,??___fldiv
  7950   0025FE  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7951   002602  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7952   002606  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7953   00260A  340C               	rlcf	(??___fldiv+3)^0,w,c
  7954   00260C  320C               	rrcf	(??___fldiv+3)^0,f,c
  7955   00260E  320B               	rrcf	(??___fldiv+2)^0,f,c
  7956   002610  320A               	rrcf	(??___fldiv+1)^0,f,c
  7957   002612  3209               	rrcf	??___fldiv^0,f,c
  7958   002614  C009  F001         	movff	??___fldiv,___fldiv@b
  7959   002618  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7960   00261C  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7961   002620  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7962   002624  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7963   002626  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7964   002628                     l2947:
  7965   002628  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7966   00262A  EF1F  F013         	goto	u2871
  7967   00262E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7968   002630  E108               	bnz	u2870
  7969   002632  2812               	incf	___fldiv@new_exp^0,w,c
  7970   002634  A0D8               	btfss	status,0,c
  7971   002636  EF1F  F013         	goto	u2871
  7972   00263A  EF21  F013         	goto	u2870
  7973   00263E                     u2871:
  7974   00263E  EF2C  F013         	goto	l2951
  7975   002642                     u2870:
  7976   002642  0E00               	movlw	0
  7977   002644  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7978   002646  6812               	setf	___fldiv@new_exp^0,c
  7979   002648  0E00               	movlw	0
  7980   00264A  6E01               	movwf	___fldiv@b^0,c
  7981   00264C  0E00               	movlw	0
  7982   00264E  6E02               	movwf	(___fldiv@b+1)^0,c
  7983   002650  0E00               	movlw	0
  7984   002652  6E03               	movwf	(___fldiv@b+2)^0,c
  7985   002654  0E00               	movlw	0
  7986   002656  6E04               	movwf	(___fldiv@b+3)^0,c
  7987   002658                     l2951:
  7988   002658  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7989   00265A  EF39  F013         	goto	u2880
  7990   00265E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7991   002660  E106               	bnz	u2881
  7992   002662  0412               	decf	___fldiv@new_exp^0,w,c
  7993   002664  B0D8               	btfsc	status,0,c
  7994   002666  EF37  F013         	goto	u2881
  7995   00266A  EF39  F013         	goto	u2880
  7996   00266E                     u2881:
  7997   00266E  EF47  F013         	goto	l2955
  7998   002672                     u2880:
  7999   002672  0E00               	movlw	0
  8000   002674  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8001   002676  0E00               	movlw	0
  8002   002678  6E12               	movwf	___fldiv@new_exp^0,c
  8003   00267A  0E00               	movlw	0
  8004   00267C  6E01               	movwf	___fldiv@b^0,c
  8005   00267E  0E00               	movlw	0
  8006   002680  6E02               	movwf	(___fldiv@b+1)^0,c
  8007   002682  0E00               	movlw	0
  8008   002684  6E03               	movwf	(___fldiv@b+2)^0,c
  8009   002686  0E00               	movlw	0
  8010   002688  6E04               	movwf	(___fldiv@b+3)^0,c
  8011   00268A  0E00               	movlw	0
  8012   00268C  6E11               	movwf	___fldiv@sign^0,c
  8013   00268E                     l2955:
  8014   00268E  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8015   002692  A018               	btfss	___fldiv@bexp^0,0,c
  8016   002694  EF4E  F013         	goto	u2891
  8017   002698  EF50  F013         	goto	u2890
  8018   00269C                     u2891:
  8019   00269C  EF53  F013         	goto	l2961
  8020   0026A0                     u2890:
  8021   0026A0  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8022   0026A2  EF54  F013         	goto	l2963
  8023   0026A6                     l2961:
  8024   0026A6  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8025   0026A8                     l2963:
  8026   0026A8  90D8               	bcf	status,0,c
  8027   0026AA  3018               	rrcf	___fldiv@bexp^0,w,c
  8028   0026AC  6E04               	movwf	(___fldiv@b+3)^0,c
  8029   0026AE  EF0A  F012         	goto	l2877
  8030   0026B2                     l771:
  8031   0026B2  0012               	return		;funcret
  8032   0026B4                     __end_of___fldiv:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function _deleteAll *****************
  8036 ;; Defined at:
  8037 ;;		line 281 in file "SPI26K83.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;Total ram usage:        2 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_main
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text33
  8065   003B4A                     __ptext33:
  8066                           	callstack 0
  8067   003B4A                     _deleteAll:
  8068                           	callstack 30
  8069   003B4A                     
  8070                           ;SPI26K83.c: 282:      PORTBbits.RB3 = 1;
  8071   003B4A  86CB               	bsf	203,3,c	;volatile
  8072   003B4C                     
  8073                           ;SPI26K83.c: 283:     SPI1TWIDTH = 0;
  8074   003B4C  0E00               	movlw	0
  8075   003B4E  013D               	movlb	61	; () banked
  8076   003B50  6F18               	movwf	24,b	;volatile
  8077                           
  8078                           ;SPI26K83.c: 284:     SPI1TCNTL = 1;
  8079   003B52  0E01               	movlw	1
  8080   003B54  6F12               	movwf	18,b	;volatile
  8081                           
  8082                           ;SPI26K83.c: 285:     SPI1TCNTH = 0;
  8083   003B56  0E00               	movlw	0
  8084   003B58  6F13               	movwf	19,b	;volatile
  8085   003B5A                     
  8086                           ; BSR set to: 61
  8087                           ;SPI26K83.c: 286:     SPI1CON2bits.TXR = 1;
  8088   003B5A  8316               	bsf	22,1,b	;volatile
  8089   003B5C                     
  8090                           ; BSR set to: 61
  8091                           ;SPI26K83.c: 287:     SPI1CON0bits.EN = 1;
  8092   003B5C  8F14               	bsf	20,7,b	;volatile
  8093                           
  8094                           ;SPI26K83.c: 288:     SPI1TXB = 0b10010000;
  8095   003B5E  0E90               	movlw	144
  8096   003B60  6F11               	movwf	17,b	;volatile
  8097   003B62                     l183:
  8098                           
  8099                           ; BSR set to: 61
  8100   003B62  AB17               	btfss	23,5,b	;volatile
  8101   003B64  EFB6  F01D         	goto	u4391
  8102   003B68  EFB8  F01D         	goto	u4390
  8103   003B6C                     u4391:
  8104   003B6C  EFB1  F01D         	goto	l183
  8105   003B70                     u4390:
  8106   003B70                     
  8107                           ; BSR set to: 61
  8108                           ;SPI26K83.c: 290:     SPI1CON2bits.TXR = 0;
  8109   003B70  9316               	bcf	22,1,b	;volatile
  8110                           
  8111                           ;SPI26K83.c: 291:     PORTBbits.RB3 = 0;
  8112   003B72  96CB               	bcf	203,3,c	;volatile
  8113                           
  8114                           ;SPI26K83.c: 292:     SPI1CON0bits.EN = 0;
  8115   003B74  9F14               	bcf	20,7,b	;volatile
  8116   003B76                     
  8117                           ; BSR set to: 61
  8118                           ;SPI26K83.c: 293:     PORTBbits.RB4 = !PORTBbits.RB4;
  8119   003B76  A8CB               	btfss	203,4,c	;volatile
  8120   003B78  EFC0  F01D         	goto	u4401
  8121   003B7C  EFC4  F01D         	goto	u4400
  8122   003B80                     u4401:
  8123   003B80  6A01               	clrf	??_deleteAll^0,c
  8124   003B82  2A01               	incf	??_deleteAll^0,f,c
  8125   003B84  EFC5  F01D         	goto	u4418
  8126   003B88                     u4400:
  8127   003B88  6A01               	clrf	??_deleteAll^0,c
  8128   003B8A                     u4418:
  8129   003B8A  3A01               	swapf	??_deleteAll^0,f,c
  8130   003B8C  50CB               	movf	203,w,c	;volatile
  8131   003B8E  1801               	xorwf	??_deleteAll^0,w,c
  8132   003B90  0BEF               	andlw	-17
  8133   003B92  1801               	xorwf	??_deleteAll^0,w,c
  8134   003B94  6ECB               	movwf	203,c	;volatile
  8135   003B96                     
  8136                           ;SPI26K83.c: 294:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8137   003B96  0E09               	movlw	9
  8138   003B98  6E02               	movwf	(??_deleteAll+1)^0,c
  8139   003B9A  0E1E               	movlw	30
  8140   003B9C  6E01               	movwf	??_deleteAll^0,c
  8141   003B9E  0EE4               	movlw	228
  8142   003BA0                     u5107:
  8143   003BA0  2EE8               	decfsz	wreg,f,c
  8144   003BA2  D7FE               	bra	u5107
  8145   003BA4  2E01               	decfsz	??_deleteAll^0,f,c
  8146   003BA6  D7FC               	bra	u5107
  8147   003BA8  2E02               	decfsz	(??_deleteAll+1)^0,f,c
  8148   003BAA  D7FA               	bra	u5107
  8149   003BAC  D000               	nop2	
  8150   003BAE  0012               	return		;funcret
  8151   003BB0                     __end_of_deleteAll:
  8152                           	callstack 0
  8153                           
  8154 ;; *************** function _Lcd_Write_String *****************
  8155 ;; Defined at:
  8156 ;;		line 94 in file "./lcd.h"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  a               1    4[COMRAM] PTR unsigned char 
  8159 ;;		 -> main@ligne1(64), 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  i               2    5[COMRAM] int 
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8171 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;Total ram usage:        3 bytes
  8176 ;; Hardware stack levels used: 1
  8177 ;; Hardware stack levels required when called: 2
  8178 ;; This function calls:
  8179 ;;		_Lcd_Write_Char
  8180 ;; This function is called by:
  8181 ;;		_main
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text34
  8186   003E9C                     __ptext34:
  8187                           	callstack 0
  8188   003E9C                     _Lcd_Write_String:
  8189                           	callstack 28
  8190   003E9C                     
  8191                           ;./lcd.h: 94: void Lcd_Write_String(char *a);./lcd.h: 95: {;./lcd.h: 96:  int i;;./lcd.h
      +                          : 97:  for(i=0;a[i]!='\0';i++)
  8192   003E9C  0E00               	movlw	0
  8193   003E9E  6E07               	movwf	(Lcd_Write_String@i+1)^0,c
  8194   003EA0  0E00               	movlw	0
  8195   003EA2  6E06               	movwf	Lcd_Write_String@i^0,c
  8196   003EA4  EF5D  F01F         	goto	l3939
  8197   003EA8                     l3935:
  8198                           
  8199                           ;./lcd.h: 98:     Lcd_Write_Char(a[i]);
  8200   003EA8  5005               	movf	Lcd_Write_String@a^0,w,c
  8201   003EAA  2406               	addwf	Lcd_Write_String@i^0,w,c
  8202   003EAC  6ED9               	movwf	fsr2l,c
  8203   003EAE  6ADA               	clrf	fsr2h,c
  8204   003EB0  50DF               	movf	indf2,w,c
  8205   003EB2  EC6A  F01F         	call	_Lcd_Write_Char
  8206   003EB6  4A06               	infsnz	Lcd_Write_String@i^0,f,c
  8207   003EB8  2A07               	incf	(Lcd_Write_String@i+1)^0,f,c
  8208   003EBA                     l3939:
  8209   003EBA  5005               	movf	Lcd_Write_String@a^0,w,c
  8210   003EBC  2406               	addwf	Lcd_Write_String@i^0,w,c
  8211   003EBE  6ED9               	movwf	fsr2l,c
  8212   003EC0  6ADA               	clrf	fsr2h,c
  8213   003EC2  50DF               	movf	indf2,w,c
  8214   003EC4  A4D8               	btfss	status,2,c
  8215   003EC6  EF67  F01F         	goto	u4381
  8216   003ECA  EF69  F01F         	goto	u4380
  8217   003ECE                     u4381:
  8218   003ECE  EF54  F01F         	goto	l3935
  8219   003ED2                     u4380:
  8220   003ED2  0012               	return		;funcret
  8221   003ED4                     __end_of_Lcd_Write_String:
  8222                           	callstack 0
  8223                           
  8224 ;; *************** function _Lcd_Write_Char *****************
  8225 ;; Defined at:
  8226 ;;		line 78 in file "./lcd.h"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  a               1    wreg     unsigned char 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  a               1    3[COMRAM] unsigned char 
  8231 ;;  y               1    2[COMRAM] unsigned char 
  8232 ;;  temp            1    1[COMRAM] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;Total ram usage:        3 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 1
  8249 ;; This function calls:
  8250 ;;		_Lcd_Port
  8251 ;; This function is called by:
  8252 ;;		_Lcd_Write_String
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text35
  8257   003ED4                     __ptext35:
  8258                           	callstack 0
  8259   003ED4                     _Lcd_Write_Char:
  8260                           	callstack 28
  8261                           
  8262                           ;incstack = 0
  8263                           ;Lcd_Write_Char@a stored from wreg
  8264   003ED4  6E04               	movwf	Lcd_Write_Char@a^0,c
  8265   003ED6                     
  8266                           ;./lcd.h: 78: void Lcd_Write_Char(char a);./lcd.h: 79: {;./lcd.h: 80:    char temp,y;;./
      +                          lcd.h: 81:    temp = a&0x0F;
  8267   003ED6  5004               	movf	Lcd_Write_Char@a^0,w,c
  8268   003ED8  0B0F               	andlw	15
  8269   003EDA  6E02               	movwf	Lcd_Write_Char@temp^0,c
  8270                           
  8271                           ;./lcd.h: 82:    y = a&0xF0;
  8272   003EDC  5004               	movf	Lcd_Write_Char@a^0,w,c
  8273   003EDE  0BF0               	andlw	240
  8274   003EE0  6E03               	movwf	Lcd_Write_Char@y^0,c
  8275   003EE2                     
  8276                           ;./lcd.h: 83:    PORTAbits.RA0 = 1;
  8277   003EE2  80CA               	bsf	202,0,c	;volatile
  8278   003EE4                     
  8279                           ;./lcd.h: 84:    Lcd_Port(y>>4);
  8280   003EE4  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8281   003EE6  0B0F               	andlw	15
  8282   003EE8  EC0B  F01E         	call	_Lcd_Port
  8283   003EEC                     
  8284                           ;./lcd.h: 85:    PORTAbits.RA1 = 1;
  8285   003EEC  82CA               	bsf	202,1,c	;volatile
  8286   003EEE                     
  8287                           ;./lcd.h: 86:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  8288   003EEE  0ED5               	movlw	213
  8289   003EF0                     u5117:
  8290   003EF0  2EE8               	decfsz	wreg,f,c
  8291   003EF2  D7FE               	bra	u5117
  8292   003EF4  0000               	nop	
  8293   003EF6                     
  8294                           ;./lcd.h: 87:    PORTAbits.RA1 = 0;
  8295   003EF6  92CA               	bcf	202,1,c	;volatile
  8296   003EF8                     
  8297                           ;./lcd.h: 88:    Lcd_Port(temp);
  8298   003EF8  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8299   003EFA  EC0B  F01E         	call	_Lcd_Port
  8300   003EFE                     
  8301                           ;./lcd.h: 89:    PORTAbits.RA1 = 1;
  8302   003EFE  82CA               	bsf	202,1,c	;volatile
  8303   003F00                     
  8304                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  8305   003F00  0ED5               	movlw	213
  8306   003F02                     u5127:
  8307   003F02  2EE8               	decfsz	wreg,f,c
  8308   003F04  D7FE               	bra	u5127
  8309   003F06  0000               	nop	
  8310   003F08                     
  8311                           ;./lcd.h: 91:    PORTAbits.RA1 = 0;
  8312   003F08  92CA               	bcf	202,1,c	;volatile
  8313   003F0A  0012               	return		;funcret
  8314   003F0C                     __end_of_Lcd_Write_Char:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _Lcd_Set_Cursor *****************
  8318 ;; Defined at:
  8319 ;;		line 38 in file "./lcd.h"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  a               1    wreg     unsigned char 
  8322 ;;  b               1    3[COMRAM] unsigned char 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  a               1    4[COMRAM] unsigned char 
  8325 ;;  temp            1    7[COMRAM] unsigned char 
  8326 ;;  y               1    6[COMRAM] unsigned char 
  8327 ;;  z               1    5[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;Total ram usage:        5 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 2
  8344 ;; This function calls:
  8345 ;;		_Lcd_Cmd
  8346 ;; This function is called by:
  8347 ;;		_main
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text36
  8352   003BB0                     __ptext36:
  8353                           	callstack 0
  8354   003BB0                     _Lcd_Set_Cursor:
  8355                           	callstack 28
  8356                           
  8357                           ;incstack = 0
  8358                           ;Lcd_Set_Cursor@a stored from wreg
  8359   003BB0  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  8360   003BB2                     
  8361                           ;./lcd.h: 38: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: {;./lcd.h: 40:  char temp
      +                          ,z,y;;./lcd.h: 41:  if(a == 1)
  8362   003BB2  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  8363   003BB4  A4D8               	btfss	status,2,c
  8364   003BB6  EFDF  F01D         	goto	u4361
  8365   003BBA  EFE1  F01D         	goto	u4360
  8366   003BBE                     u4361:
  8367   003BBE  EFF2  F01D         	goto	l3897
  8368   003BC2                     u4360:
  8369   003BC2                     
  8370                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
  8371   003BC2  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8372   003BC4  0F7F               	addlw	127
  8373   003BC6  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8374                           
  8375                           ;./lcd.h: 44:   z = temp>>4;
  8376   003BC8  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8377   003BCA  0B0F               	andlw	15
  8378   003BCC  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8379                           
  8380                           ;./lcd.h: 45:   y = temp & 0x0F;
  8381   003BCE  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8382   003BD0  0B0F               	andlw	15
  8383   003BD2  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8384   003BD4                     
  8385                           ;./lcd.h: 46:   Lcd_Cmd(z);
  8386   003BD4  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8387   003BD6  ECC6  F01F         	call	_Lcd_Cmd
  8388   003BDA                     
  8389                           ;./lcd.h: 47:   Lcd_Cmd(y);
  8390   003BDA  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8391   003BDC  ECC6  F01F         	call	_Lcd_Cmd
  8392                           
  8393                           ;./lcd.h: 48:  }
  8394   003BE0  EF0A  F01E         	goto	l117
  8395   003BE4                     l3897:
  8396   003BE4  0E02               	movlw	2
  8397   003BE6  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8398   003BE8  A4D8               	btfss	status,2,c
  8399   003BEA  EFF9  F01D         	goto	u4371
  8400   003BEE  EFFB  F01D         	goto	u4370
  8401   003BF2                     u4371:
  8402   003BF2  EF0A  F01E         	goto	l117
  8403   003BF6                     u4370:
  8404   003BF6                     
  8405                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
  8406   003BF6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8407   003BF8  0FBF               	addlw	191
  8408   003BFA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8409                           
  8410                           ;./lcd.h: 52:   z = temp>>4;
  8411   003BFC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8412   003BFE  0B0F               	andlw	15
  8413   003C00  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8414                           
  8415                           ;./lcd.h: 53:   y = temp & 0x0F;
  8416   003C02  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8417   003C04  0B0F               	andlw	15
  8418   003C06  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8419   003C08                     
  8420                           ;./lcd.h: 54:   Lcd_Cmd(z);
  8421   003C08  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8422   003C0A  ECC6  F01F         	call	_Lcd_Cmd
  8423   003C0E                     
  8424                           ;./lcd.h: 55:   Lcd_Cmd(y);
  8425   003C0E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8426   003C10  ECC6  F01F         	call	_Lcd_Cmd
  8427   003C14                     l117:
  8428   003C14  0012               	return		;funcret
  8429   003C16                     __end_of_Lcd_Set_Cursor:
  8430                           	callstack 0
  8431                           
  8432 ;; *************** function _Lcd_Init *****************
  8433 ;; Defined at:
  8434 ;;		line 59 in file "./lcd.h"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;		None
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;Total ram usage:        2 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 2
  8455 ;; This function calls:
  8456 ;;		_Lcd_Cmd
  8457 ;;		_Lcd_Port
  8458 ;; This function is called by:
  8459 ;;		_main
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text37
  8464   003A68                     __ptext37:
  8465                           	callstack 0
  8466   003A68                     _Lcd_Init:
  8467                           	callstack 28
  8468   003A68                     
  8469                           ;./lcd.h: 61:   Lcd_Port(0x00);
  8470   003A68  0E00               	movlw	0
  8471   003A6A  EC0B  F01E         	call	_Lcd_Port
  8472   003A6E                     
  8473                           ;./lcd.h: 62:    _delay((unsigned long)((20)*(64000000/4000.0)));
  8474   003A6E  0E02               	movlw	2
  8475   003A70  6E05               	movwf	(??_Lcd_Init+1)^0,c
  8476   003A72  0EA0               	movlw	160
  8477   003A74  6E04               	movwf	??_Lcd_Init^0,c
  8478   003A76  0E92               	movlw	146
  8479   003A78                     u5137:
  8480   003A78  2EE8               	decfsz	wreg,f,c
  8481   003A7A  D7FE               	bra	u5137
  8482   003A7C  2E04               	decfsz	??_Lcd_Init^0,f,c
  8483   003A7E  D7FC               	bra	u5137
  8484   003A80  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  8485   003A82  D7FA               	bra	u5137
  8486   003A84  D000               	nop2	
  8487   003A86                     
  8488                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
  8489   003A86  0E03               	movlw	3
  8490   003A88  ECC6  F01F         	call	_Lcd_Cmd
  8491   003A8C                     
  8492                           ;./lcd.h: 64:  _delay((unsigned long)((5)*(64000000/4000.0)));
  8493   003A8C  0E68               	movlw	104
  8494   003A8E  6E04               	movwf	??_Lcd_Init^0,c
  8495   003A90  0EE4               	movlw	228
  8496   003A92                     u5147:
  8497   003A92  2EE8               	decfsz	wreg,f,c
  8498   003A94  D7FE               	bra	u5147
  8499   003A96  2E04               	decfsz	??_Lcd_Init^0,f,c
  8500   003A98  D7FC               	bra	u5147
  8501   003A9A  D000               	nop2	
  8502   003A9C                     
  8503                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  8504   003A9C  0E03               	movlw	3
  8505   003A9E  ECC6  F01F         	call	_Lcd_Cmd
  8506   003AA2                     
  8507                           ;./lcd.h: 66:  _delay((unsigned long)((11)*(64000000/4000.0)));
  8508   003AA2  0EE5               	movlw	229
  8509   003AA4  6E04               	movwf	??_Lcd_Init^0,c
  8510   003AA6  0E91               	movlw	145
  8511   003AA8                     u5157:
  8512   003AA8  2EE8               	decfsz	wreg,f,c
  8513   003AAA  D7FE               	bra	u5157
  8514   003AAC  2E04               	decfsz	??_Lcd_Init^0,f,c
  8515   003AAE  D7FC               	bra	u5157
  8516   003AB0  0000               	nop	
  8517   003AB2                     
  8518                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  8519   003AB2  0E03               	movlw	3
  8520   003AB4  ECC6  F01F         	call	_Lcd_Cmd
  8521   003AB8                     
  8522                           ;./lcd.h: 69:   Lcd_Cmd(0x02);
  8523   003AB8  0E02               	movlw	2
  8524   003ABA  ECC6  F01F         	call	_Lcd_Cmd
  8525   003ABE                     
  8526                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  8527   003ABE  0E02               	movlw	2
  8528   003AC0  ECC6  F01F         	call	_Lcd_Cmd
  8529   003AC4                     
  8530                           ;./lcd.h: 71:   Lcd_Cmd(0x08);
  8531   003AC4  0E08               	movlw	8
  8532   003AC6  ECC6  F01F         	call	_Lcd_Cmd
  8533   003ACA                     
  8534                           ;./lcd.h: 72:   Lcd_Cmd(0x00);
  8535   003ACA  0E00               	movlw	0
  8536   003ACC  ECC6  F01F         	call	_Lcd_Cmd
  8537   003AD0                     
  8538                           ;./lcd.h: 73:   Lcd_Cmd(0x0C);
  8539   003AD0  0E0C               	movlw	12
  8540   003AD2  ECC6  F01F         	call	_Lcd_Cmd
  8541   003AD6                     
  8542                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  8543   003AD6  0E00               	movlw	0
  8544   003AD8  ECC6  F01F         	call	_Lcd_Cmd
  8545   003ADC                     
  8546                           ;./lcd.h: 75:   Lcd_Cmd(0x06);
  8547   003ADC  0E06               	movlw	6
  8548   003ADE  ECC6  F01F         	call	_Lcd_Cmd
  8549   003AE2  0012               	return		;funcret
  8550   003AE4                     __end_of_Lcd_Init:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function _Lcd_Clear *****************
  8554 ;; Defined at:
  8555 ;;		line 32 in file "./lcd.h"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2  110[None  ] int 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used: 1
  8575 ;; Hardware stack levels required when called: 2
  8576 ;; This function calls:
  8577 ;;		_Lcd_Cmd
  8578 ;; This function is called by:
  8579 ;;		_main
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text38
  8584   003FAC                     __ptext38:
  8585                           	callstack 0
  8586   003FAC                     _Lcd_Clear:
  8587                           	callstack 28
  8588   003FAC                     
  8589                           ;./lcd.h: 34:  Lcd_Cmd(0);
  8590   003FAC  0E00               	movlw	0
  8591   003FAE  ECC6  F01F         	call	_Lcd_Cmd
  8592                           
  8593                           ;./lcd.h: 35:  Lcd_Cmd(1);
  8594   003FB2  0E01               	movlw	1
  8595   003FB4  ECC6  F01F         	call	_Lcd_Cmd
  8596   003FB8  0012               	return		;funcret
  8597   003FBA                     __end_of_Lcd_Clear:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function _Lcd_Cmd *****************
  8601 ;; Defined at:
  8602 ;;		line 23 in file "./lcd.h"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  a               1    wreg     unsigned char 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;  a               1    2[COMRAM] unsigned char 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;Total ram usage:        2 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 1
  8623 ;; This function calls:
  8624 ;;		_Lcd_Port
  8625 ;; This function is called by:
  8626 ;;		_Lcd_Clear
  8627 ;;		_Lcd_Set_Cursor
  8628 ;;		_Lcd_Init
  8629 ;;		_Lcd_Shift_Right
  8630 ;;		_Lcd_Shift_Left
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text39
  8635   003F8C                     __ptext39:
  8636                           	callstack 0
  8637   003F8C                     _Lcd_Cmd:
  8638                           	callstack 28
  8639                           
  8640                           ;incstack = 0
  8641                           ;Lcd_Cmd@a stored from wreg
  8642   003F8C  6E03               	movwf	Lcd_Cmd@a^0,c
  8643   003F8E                     
  8644                           ;./lcd.h: 23: void Lcd_Cmd(char a);./lcd.h: 24: {;./lcd.h: 25:  PORTAbits.RA0 = 0;
  8645   003F8E  90CA               	bcf	202,0,c	;volatile
  8646   003F90                     
  8647                           ;./lcd.h: 26:  Lcd_Port(a);
  8648   003F90  5003               	movf	Lcd_Cmd@a^0,w,c
  8649   003F92  EC0B  F01E         	call	_Lcd_Port
  8650   003F96                     
  8651                           ;./lcd.h: 27:  PORTAbits.RA1 = 1;
  8652   003F96  82CA               	bsf	202,1,c	;volatile
  8653   003F98                     
  8654                           ;./lcd.h: 28:     _delay((unsigned long)((4)*(64000000/4000.0)));
  8655   003F98  0E54               	movlw	84
  8656   003F9A  6E02               	movwf	??_Lcd_Cmd^0,c
  8657   003F9C  0E1C               	movlw	28
  8658   003F9E                     u5167:
  8659   003F9E  2EE8               	decfsz	wreg,f,c
  8660   003FA0  D7FE               	bra	u5167
  8661   003FA2  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  8662   003FA4  D7FC               	bra	u5167
  8663   003FA6  D000               	nop2	
  8664   003FA8                     
  8665                           ;./lcd.h: 29:     PORTAbits.RA1 = 0;
  8666   003FA8  92CA               	bcf	202,1,c	;volatile
  8667   003FAA  0012               	return		;funcret
  8668   003FAC                     __end_of_Lcd_Cmd:
  8669                           	callstack 0
  8670                           
  8671 ;; *************** function _Lcd_Port *****************
  8672 ;; Defined at:
  8673 ;;		line 1 in file "./lcd.h"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  a               1    wreg     unsigned char 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  a               1    0[COMRAM] unsigned char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;Total ram usage:        1 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_Lcd_Cmd
  8697 ;;		_Lcd_Init
  8698 ;;		_Lcd_Write_Char
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text40
  8703   003C16                     __ptext40:
  8704                           	callstack 0
  8705   003C16                     _Lcd_Port:
  8706                           	callstack 28
  8707                           
  8708                           ;incstack = 0
  8709                           ;Lcd_Port@a stored from wreg
  8710   003C16  6E01               	movwf	Lcd_Port@a^0,c
  8711   003C18                     
  8712                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
  8713   003C18  A001               	btfss	Lcd_Port@a^0,0,c
  8714   003C1A  EF11  F01E         	goto	u4031
  8715   003C1E  EF13  F01E         	goto	u4030
  8716   003C22                     u4031:
  8717   003C22  EF16  F01E         	goto	l97
  8718   003C26                     u4030:
  8719   003C26                     
  8720                           ;./lcd.h: 4:   PORTAbits.RA2 = 1;
  8721   003C26  84CA               	bsf	202,2,c	;volatile
  8722   003C28  EF17  F01E         	goto	l3651
  8723   003C2C                     l97:
  8724                           
  8725                           ;./lcd.h: 6:   PORTAbits.RA2 = 0;
  8726   003C2C  94CA               	bcf	202,2,c	;volatile
  8727   003C2E                     l3651:
  8728                           
  8729                           ;./lcd.h: 8:  if(a & 2)
  8730   003C2E  A201               	btfss	Lcd_Port@a^0,1,c
  8731   003C30  EF1C  F01E         	goto	u4041
  8732   003C34  EF1E  F01E         	goto	u4040
  8733   003C38                     u4041:
  8734   003C38  EF21  F01E         	goto	l99
  8735   003C3C                     u4040:
  8736   003C3C                     
  8737                           ;./lcd.h: 9:   PORTAbits.RA3 = 1;
  8738   003C3C  86CA               	bsf	202,3,c	;volatile
  8739   003C3E  EF22  F01E         	goto	l3655
  8740   003C42                     l99:
  8741                           
  8742                           ;./lcd.h: 11:   PORTAbits.RA3 = 0;
  8743   003C42  96CA               	bcf	202,3,c	;volatile
  8744   003C44                     l3655:
  8745                           
  8746                           ;./lcd.h: 13:  if(a & 4)
  8747   003C44  A401               	btfss	Lcd_Port@a^0,2,c
  8748   003C46  EF27  F01E         	goto	u4051
  8749   003C4A  EF29  F01E         	goto	u4050
  8750   003C4E                     u4051:
  8751   003C4E  EF2C  F01E         	goto	l101
  8752   003C52                     u4050:
  8753   003C52                     
  8754                           ;./lcd.h: 14:   PORTAbits.RA4 = 1;
  8755   003C52  88CA               	bsf	202,4,c	;volatile
  8756   003C54  EF2D  F01E         	goto	l3659
  8757   003C58                     l101:
  8758                           
  8759                           ;./lcd.h: 16:   PORTAbits.RA4 = 0;
  8760   003C58  98CA               	bcf	202,4,c	;volatile
  8761   003C5A                     l3659:
  8762                           
  8763                           ;./lcd.h: 18:  if(a & 8)
  8764   003C5A  A601               	btfss	Lcd_Port@a^0,3,c
  8765   003C5C  EF32  F01E         	goto	u4061
  8766   003C60  EF34  F01E         	goto	u4060
  8767   003C64                     u4061:
  8768   003C64  EF37  F01E         	goto	l103
  8769   003C68                     u4060:
  8770   003C68                     
  8771                           ;./lcd.h: 19:   PORTAbits.RA5 = 1;
  8772   003C68  8ACA               	bsf	202,5,c	;volatile
  8773   003C6A  EF38  F01E         	goto	l105
  8774   003C6E                     l103:
  8775                           
  8776                           ;./lcd.h: 21:   PORTAbits.RA5 = 0;
  8777   003C6E  9ACA               	bcf	202,5,c	;volatile
  8778   003C70                     l105:
  8779   003C70  0012               	return		;funcret
  8780   003C72                     __end_of_Lcd_Port:
  8781                           	callstack 0
  8782                           
  8783                           	psect	rparam
  8784   000000                     
  8785                           	psect	config
  8786                           
  8787                           ;Config register CONFIG1L @ 0x300000
  8788                           ;	External Oscillator Selection
  8789                           ;	FEXTOSC = OFF, Oscillator not enabled
  8790                           ;	Reset Oscillator Selection
  8791                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  8792   300000                     	org	3145728
  8793   300000  8C                 	db	140
  8794                           
  8795                           ;Config register CONFIG1H @ 0x300001
  8796                           ;	Clock out Enable bit
  8797                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8798                           ;	PRLOCKED One-Way Set Enable bit
  8799                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  8800                           ;	Clock Switch Enable bit
  8801                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8802                           ;	Fail-Safe Clock Monitor Enable bit
  8803                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8804   300001                     	org	3145729
  8805   300001  FD                 	db	253
  8806                           
  8807                           ;Config register CONFIG2L @ 0x300002
  8808                           ;	MCLR Enable bit
  8809                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8810                           ;	Power-up timer selection bits
  8811                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8812                           ;	Multi-vector enable bit
  8813                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  8814                           ;	IVTLOCK bit One-way set enable bit
  8815                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  8816                           ;	Low Power BOR Enable bit
  8817                           ;	LPBOREN = OFF, ULPBOR disabled
  8818                           ;	Brown-out Reset Enable bits
  8819                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8820   300002                     	org	3145730
  8821   300002  E7                 	db	231
  8822                           
  8823                           ;Config register CONFIG2H @ 0x300003
  8824                           ;	Brown-out Reset Voltage Selection bits
  8825                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8826                           ;	ZCD Disable bit
  8827                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8828                           ;	PPSLOCK bit One-Way Set Enable bit
  8829                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  8830                           ;	Stack Full/Underflow Reset Enable bit
  8831                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8832                           ;	Debugger Enable bit
  8833                           ;	DEBUG = OFF, Background debugger disabled
  8834                           ;	Extended Instruction Set Enable bit
  8835                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8836   300003                     	org	3145731
  8837   300003  F7                 	db	247
  8838                           
  8839                           ;Config register CONFIG3L @ 0x300004
  8840                           ;	WDT Period selection bits
  8841                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8842                           ;	WDT operating mode
  8843                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8844   300004                     	org	3145732
  8845   300004  9F                 	db	159
  8846                           
  8847                           ;Config register CONFIG3H @ 0x300005
  8848                           ;	WDT Window Select bits
  8849                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8850                           ;	WDT input clock selector
  8851                           ;	WDTCCS = SC, Software Control
  8852   300005                     	org	3145733
  8853   300005  FF                 	db	255
  8854                           
  8855                           ;Config register CONFIG4L @ 0x300006
  8856                           ;	Boot Block Size selection bits
  8857                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8858                           ;	Boot Block enable bit
  8859                           ;	BBEN = OFF, Boot block disabled
  8860                           ;	Storage Area Flash enable bit
  8861                           ;	SAFEN = OFF, SAF disabled
  8862                           ;	Application Block write protection bit
  8863                           ;	WRTAPP = OFF, Application Block not write protected
  8864   300006                     	org	3145734
  8865   300006  FF                 	db	255
  8866                           
  8867                           ;Config register CONFIG4H @ 0x300007
  8868                           ;	Boot Block Write Protection bit
  8869                           ;	WRTB = OFF, Boot Block not write-protected
  8870                           ;	Configuration Register Write Protection bit
  8871                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  8872                           ;	Data EEPROM Write Protection bit
  8873                           ;	WRTD = OFF, Data EEPROM not write-protected
  8874                           ;	SAF Write protection bit
  8875                           ;	WRTSAF = OFF, SAF not Write Protected
  8876                           ;	Low Voltage Programming Enable bit
  8877                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  8878   300007                     	org	3145735
  8879   300007  DF                 	db	223
  8880                           
  8881                           ;Config register CONFIG5L @ 0x300008
  8882                           ;	PFM and Data EEPROM Code Protection bit
  8883                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8884   300008                     	org	3145736
  8885   300008  FF                 	db	255
  8886                           
  8887                           ;Config register CONFIG5H @ 0x300009
  8888                           ;	unspecified, using default values
  8889   300009                     	org	3145737
  8890   300009  FF                 	db	255
  8891                           tosu	equ	0x3FFF
  8892                           tosh	equ	0x3FFE
  8893                           tosl	equ	0x3FFD
  8894                           stkptr	equ	0x3FFC
  8895                           pclatu	equ	0x3FFB
  8896                           pclath	equ	0x3FFA
  8897                           pcl	equ	0x3FF9
  8898                           tblptru	equ	0x3FF8
  8899                           tblptrh	equ	0x3FF7
  8900                           tblptrl	equ	0x3FF6
  8901                           tablat	equ	0x3FF5
  8902                           prodh	equ	0x3FF4
  8903                           prodl	equ	0x3FF3
  8904                           indf0	equ	0x3FEF
  8905                           postinc0	equ	0x3FEE
  8906                           postdec0	equ	0x3FED
  8907                           preinc0	equ	0x3FEC
  8908                           plusw0	equ	0x3FEB
  8909                           fsr0h	equ	0x3FEA
  8910                           fsr0l	equ	0x3FE9
  8911                           wreg	equ	0x3FE8
  8912                           indf1	equ	0x3FE7
  8913                           postinc1	equ	0x3FE6
  8914                           postdec1	equ	0x3FE5
  8915                           preinc1	equ	0x3FE4
  8916                           plusw1	equ	0x3FE3
  8917                           fsr1h	equ	0x3FE2
  8918                           fsr1l	equ	0x3FE1
  8919                           bsr	equ	0x3FE0
  8920                           indf2	equ	0x3FDF
  8921                           postinc2	equ	0x3FDE
  8922                           postdec2	equ	0x3FDD
  8923                           preinc2	equ	0x3FDC
  8924                           plusw2	equ	0x3FDB
  8925                           fsr2h	equ	0x3FDA
  8926                           fsr2l	equ	0x3FD9
  8927                           status	equ	0x3FD8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     80      93
    BANK0           160    129     129
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 64
		 -> main@ligne1(BANK0[64]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S948$buffer	PTR unsigned char  size(2) Largest target is 0

    S948$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> main@ligne1(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _writeData16->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _loadData16->___fldiv
    ___xxtofl->_loadData
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   38596
                                             78 COMRAM     2     2      0
                                             53 BANK0     76    76      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___xxtofl
                          _deleteAll
                           _loadData
                         _loadData16
                            _sprintf
                        _writeData16
 ---------------------------------------------------------------------------------
 (1) _writeData16                                         14     8      6    3891
                                             35 COMRAM    14     8      6
                            ___flmul
                            ___fltol
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _writeData                                            7     3      4     392
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   29217
                                             65 COMRAM    13    13      0
                                             47 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   28533
                                             64 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   28036
                                             53 COMRAM    11     8      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   20703
                                             45 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             25 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     9      3    4750
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2959
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _loadData16                                          20    16      4    3189
                                             25 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
                           _loadData
 ---------------------------------------------------------------------------------
 (2) _loadData                                             9     7      2     321
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              8 COMRAM    14    10      4
                           _loadData (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _deleteAll                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     420
                                              4 COMRAM     3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___xxtofl
     _loadData (ARG)
   _deleteAll
   _loadData
   _loadData16
     ___fldiv
     ___xxtofl
     _loadData
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
             ___flmul (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _writeData16
     ___flmul
     ___fltol
     _writeData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     309      0       0      52        0.0%
BITBIGSFRllhhhh    228      0       0      43        0.0%
BITBIGSFRllhhhh    1CA      0       0      38        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     81      81       5       80.6%
BITBIGSFRllhhhh     8C      0       0      39        0.0%
BITBIGSFRllhhhl     80      0       0      45        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     50      5D       1       97.9%
BITBIGSFRllhhhh     40      0       0      41        0.0%
BITBIGSFRh          33      0       0      36        0.0%
BITBIGSFRlllh       29      0       0      49        0.0%
BITBIGSFRllhl        F      0       0      48        0.0%
BITBIGSFRllhhlh      D      0       0      46        0.0%
BITBIGSFRllllhl      8      0       0      51        0.0%
BITBIGSFRllhhhh      7      0       0      40        0.0%
BITBIGSFRlh          5      0       0      37        0.0%
BITBIGSFRllhhhl      3      0       0      44        0.0%
BITBIGSFRllhhhh      2      0       0      42        0.0%
BITBIGSFRllllhh      1      0       0      50        0.0%
BITBIGSFRllhhll      1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      53        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Dec 20 10:55:27 2023

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                ___fldiv@sign 0011  
                        l97 3C2C                          l99 3C42                ___awdiv@sign 0006  
       ___wmul@multiplicand 0003                         l101 3C58                         l103 3C6E  
                       l111 3FB8                         l120 3AE2                         l105 3C70  
                       l123 3F0A                         l108 3FAA                         l140 2A24  
                       l117 3C14                         l143 2A36                         l129 3ED2  
                       l153 35DC                         l145 2A44                         l170 3454  
                       l162 3666                         l171 345C                         l180 391C  
                       l420 35A8                         l156 360C                         l173 346A  
                       l165 3A66                         l174 3472                         l183 3B62  
                       l159 3620                         l176 3480                         l168 3446  
                       l185 3B70                         l177 34E4                         l433 3716  
                       l186 3BAE                         l189 3F68                         l454 32CC  
                       l463 3E9A                         l448 39C6                         l810 21AA  
                       l459 3312                         l803 1F90                         l900 3B48  
                       l820 22DA                         l812 2222                         l813 2210  
                       l717 1BFA                         l734 1D14                         l726 1ECA  
                       l718 1BE8                         l486 320E                         l807 2318  
                       l743 1DE4                         l719 1BAE                         l904 2FBE  
                       l744 1DD2                         l906 2FC6                         l771 26B2  
                       l851 2ECA                         l907 300C                         l844 2E32  
                       l932 13A6                         l773 2512                         l782 2558  
                       l918 3108                         l934 11EC                         l847 2F8E  
                       l759 3D66                         l784 25D0                         l776 24D6  
                       l785 25BE                         l929 1A0A                         l858 2F26  
                       l962 17F0                         l867 3E62                         l974 37BC  
                       l896 3AFA                         l978 37C4                         l986 2962  
                       _abs 3F0C                         _pad 3AE4                ___awmod@sign 0006  
                       wreg 3FE8                ___flmul@aexp 0012                ___flmul@bexp 0013  
              ___flmul@sign 000D                ___flmul@temp 0018                ___flmul@prod 0014  
              ___fltol@exp1 0023                        l1023 3F26                        l1032 2DDA  
                      l1008 3DA8                        l1026 3F3E                        l1018 3410  
                      l1035 2D1E                        ?_abs 0007                        l1052 3CCA  
                      l1046 3D20                        l1064 3870                        l1072 3E2A  
                      l3001 1F7A                        l1081 3DEA                        l1075 3FBA  
                      l3011 1FC4                        l3003 1F80                        l3021 2020  
                      l3013 1FD4                        l3005 1FA0                        l3101 3D22  
                      l3111 34F8                        l3031 2066                        l3023 202C  
                      l3015 1FDE                        l3007 1FB0                        l3103 3D32  
                      l3121 351E                        l3113 3500                        l3041 20D4  
                      l3033 2076                        l3025 2038                        l3017 1FF8  
                      l3131 3556                        l3123 3526                        l3115 3504  
                      l3107 34E6                        l3211 328C                        l3203 3210  
                      l3051 2172                        l3043 20E4                        l3035 2086  
                      l3027 2046                        l3019 2004                        l3141 3582  
                      l3133 355C                        l3125 3538                        l3117 3512  
                      l3109 34EA                        l3221 3310                        l3213 329A  
                      l3205 323E                        l3061 21C8                        l3053 2190  
                      l3045 2104                        l3037 20A4                        l3029 2056  
                      l3301 33A6                        l3135 3572                        l3127 3540  
                      l3143 3588                        l3119 351A                        l3151 3668  
                      l3215 32AC                        l3207 324E                        l3071 2232  
                      l3063 21CC                        l3055 219A                        l3047 212E  
                      l3039 20B4                        l3311 3408                        l3145 3598  
                      l3137 357A                        l3129 3548                        l3161 3694  
                      l3153 366C                        l4201 30EC                        l3217 32BA  
                      l3209 327C                        l3081 2294                        l3073 223E  
                      l3065 21DA                        l3057 21A8                        l3049 2164  
                      l3225 3E64                        l3241 315E                        l3233 310A  
                      l3305 33B2                        l3321 3CDA                        l3147 35A0  
                      l3139 357C                        l3171 36CC                        l3163 369C  
                      l3155 367A                        l2611 380C                        l2603 37C6  
                      l4131 3E0A                        l3219 330A                        l3091 22FC  
                      l3083 22A8                        l3075 224C                        l3067 2208  
                      l3059 21BA                        l3227 3E7A                        l3243 3160  
                      l3235 3120                        l3307 33C4                        l3331 2C40  
                      l3323 3CEE                        l4211 1044                        l3181 3706  
                      l3173 36E2                        l3165 36AE                        l3157 3682  
                      l2613 383E                        l2605 37D6                        l4125 3DEC  
                      l4141 3B1A                        l4133 3AE4                        l3093 22FE  
                      l3085 22C2                        l3077 2276                        l3229 3E8A  
                      l2701 1B96                        l2621 1A26                        l3245 3170  
                      l3341 2D0E                        l3333 2C54                        l4301 13DA  
                      l4221 108E                        l4213 1048                        l4205 1020  
                      l3183 370E                        l3175 36EA                        l3167 36B6  
                      l3159 3686                        l2607 37E6                        l4127 3DF8  
                      l4143 3B38                        l4135 3AF2                        l3191 395C  
                      l3087 22DE                        l3095 2304                        l3079 227A  
                      l2711 1BDA                        l2703 1BA6                        l2631 1A5A  
                      l2623 1A28                        l3271 31EE                        l3255 319A  
                      l3247 3174                        l3239 3134                        l3351 2DCA  
                      l3335 2C62                        l3343 2D42                        l3327 2BCA  
                      l3319 3CCC                        l4151 3C86                        l4311 142A  
                      l4303 13E0                        l4231 10DC                        l4223 109E  
                      l4215 106C                        l4207 1026                        l3177 36F0  
                      l3169 36BE                        l2609 37F0                        l4129 3E06  
                      l4137 3B06                        l4161 2F90                        l3193 398A  
                      l3097 2308                        l3089 22EE                        l2801 1E8A  
                      l2713 1BDC                        l2705 1BBC                        l2641 1A8C  
                      l2625 1A38                        l2633 1A62                        l2617 1A0C  
                      l3273 31FE                        l3265 31C2                        l3257 31A4  
                      l3249 3182                        l3345 2D7E                        l3329 2BEA  
                      l4153 3C96                        l4145 3DAA                        l4401 1914  
                      l4321 14C2                        l4305 13F2                        l4313 1432  
                      l4241 1114                        l4233 10EE                        l4225 10AA  
                      l4217 1076                        l4209 1036                        l3179 36F6  
                      l3291 3F1A                        l4139 3B16                        l4171 2FF4  
                      l4163 2FB2                        l3195 399A                        l3187 391E  
                      l2811 1EAA                        l2803 1E8E                        l2731 1C64  
                      l2723 1C2C                        l2715 1BE6                        l2707 1BC8  
                      l2651 1AC2                        l2643 1A92                        l2635 1A72  
                      l2627 1A48                        l2619 1A18                        l3267 31CE  
                      l3259 31AE                        l3347 2D92                        l3339 2CD2  
                      l4155 3C9A                        l4147 3DB2                        l4411 1968  
                      l4403 1918                        l4331 15A6                        l4323 151A  
                      l4315 143A                        l4307 1400                        l4251 1172  
                      l4243 111E                        l4235 10F2                        l4227 10B2  
                      l4219 107E                        l2901 24A2                        l4181 3024  
                      l4173 3000                        l4165 2FCE                        l3197 39BE  
                      l3189 394C                        l2813 1EB8                        l2805 1E9C  
                      l2733 1C68                        l2725 1C3C                        l2717 1C08  
                      l2741 1C88                        l2709 1BCC                        l2661 1AFE  
                      l2653 1AD2                        l2645 1AA0                        l2637 1A78  
                      l2629 1A58                        l3269 31DE                        l3293 3314  
                      l3349 2DBA                        l4157 3CAC                        l4149 3C72  
                      l4421 19E6                        l4413 1998                        l4405 1936  
                      l4341 1640                        l4333 15D8                        l4325 154E  
                      l4317 144A                        l4309 1418                        l4253 1176  
                      l4237 10F8                        l4229 10B6                        l2911 24FE  
                      l2903 24B2                        l4191 3098                        l4183 3056  
                      l4175 3008                        l4167 2FDE                        l3199 39C4  
                      l2815 1EBA                        l2807 1EA2                        l2743 1CAE  
                      l2751 1D04                        l2735 1C76                        l2727 1C4A  
                      l2719 1C18                        l2671 1B1C                        l2663 1B0C  
                      l2655 1AD4                        l2647 1AA2                        l2639 1A8A  
                      l3295 3334                        l4159 3CB0                        l4423 19EE  
                      l4415 19A6                        l4407 1952                        l4351 1718  
                      l4343 1674                        l4335 15EE                        l4319 145E  
                      l4327 1554                        l4271 11FC                        l4255 117C  
                      l4239 1100                        l4247 113A                        l4431 26E0  
                      l4511 3D68                        l2921 253E                        l2913 2500  
                      l2905 24C6                        l2841 2346                        l2833 231A  
                      l3801 34B2                        l3289 3F0C                        l4193 30AA  
                      l4185 305C                        l4177 3014                        l4169 2FE4  
                      l2809 1EA4                        l2761 1D58                        l2753 1D2A  
                      l2745 1CE2                        l2737 1C78                        l2729 1C58  
                      l2681 1B30                        l2673 1B20                        l2665 1B10  
                      l2649 1AB2                        l2657 1ADC                        l3297 3372  
                      l4417 19BE                        l4409 195A                        l4361 1742  
                      l4345 16CA                        l4353 171C                        l4337 1620  
                      l4329 1572                        l4281 12E4                        l4273 1202  
                      l4257 1184                        l4249 1160                        l4265 119C  
                      l3641 376C                        l3633 3718                        l4441 2730  
                      l4433 26EC                        l4513 3D70                        l4521 3E2C  
                      l4601 2BBE                        l3651 3C2E                        l2931 257A  
                      l2923 2548                        l2915 2510                        l2907 24D4  
                      l2851 2380                        l2843 2356                        l2835 2326  
                      l3803 34CA                        l4195 30C4                        l4187 3062  
                      l4179 301E                        l2771 1D82                        l2763 1D66  
                      l2755 1D3A                        l2747 1CE4                        l2739 1C82  
                      l2691 1B44                        l2683 1B34                        l2675 1B24  
                      l2667 1B14                        l2659 1AEC                        l3299 339A  
                      l4419 19CE                        l4371 1810                        l4363 174E  
                      l4355 172C                        l4347 16D0                        l4339 1630  
                      l4283 12F8                        l4291 1374                        l4275 1236  
                      l4267 11B6                        l2827 3F40                        l3643 378C  
                      l3635 3720                        l4451 279C                        l4443 273A  
                      l4435 26F0                        l4427 26B4                        l4515 3D80  
                      l4523 3E34                        l3811 35BA                        l3661 3C68  
                      l3653 3C3C                        l3901 3C08                        l2941 25EC  
                      l2933 2588                        l2925 2556                        l2917 2522  
                      l2909 24E0                        l2861 23AC                        l2853 2386  
                      l2845 2366                        l2837 2334                        l4197 30D4  
                      l4189 307E                        l2781 1DB4                        l2773 1D92  
                      l2765 1D68                        l2749 1CF4                        l2693 1B48  
                      l2685 1B38                        l2677 1B28                        l2669 1B18  
                      l4381 1842                        l4373 1820                        l4365 17C6  
                      l4357 1734                        l4349 1704                        l4293 13AE  
                      l4285 132C                        l4277 1274                        l2829 3F60  
                      l3637 3744                        l3645 3794                        l4461 27D6  
                      l4445 2758                        l4437 2714                        l4429 26D8  
                      l4517 3D9E                        l4525 3E3C                        l3821 362E  
                      l3813 35BC                        l4541 29F2                        l4533 2964  
                      ?_pad 000F                        l3655 3C44                        l3647 3C18  
                      l3751 3F96                        l3911 3A8C                        l3903 3C0E  
                      l2951 2658                        l2943 25FA                        l2935 25B6  
                      l2919 2538                        l2927 2568                        l2871 23E6  
                      l2863 23BC                        l2855 238C                        l2847 2368  
                      l2839 2336                        l3831 2DDE                        l4199 30DA  
                      l2791 1E0E                        l2783 1DCA                        l2767 1D76  
                      l2759 1D4E                        l2775 1D94                        l2687 1B3C  
                      l2679 1B2C                        l2695 1B4C                        l4391 1876  
                      l4383 1846                        l4375 1824                        l4367 17E6  
                      l4359 173A                        l4295 13BC                        l4287 1334  
                      l4279 12A6                        l3639 374C                        l4471 283A  
                      l4463 27DE                        l4455 27B0                        l4447 2776  
                      l4439 271C                        l4527 3E44                        l3823 3650  
                      l3815 35BE                        l3807 35AA                        l4551 2A16  
                      l4543 29F4                        l4535 298A                        l3657 3C52  
                      l3649 3C26                        l3753 3F98                        l3921 3ABE  
                      l3913 3A9C                        l3905 3A68                        l3761 3EE4  
                      l2961 26A6                        l2953 2672                        l2945 2624  
                      l2929 2576                        l2873 23FC                        l2865 23CC  
                      l2857 239A                        l2849 2370                        l3833 2DEE  
                      l2793 1E48                        l2769 1D7E                        l2777 1DA2  
                      l2697 1B50                        l2689 1B40                        l4393 187A  
                      l4385 184C                        l4377 182A                        l4369 1802  
                      l4297 13C8                        l4481 28D6                        l4473 286C  
                      l4457 27BA                        l4449 2792                        l4529 3E56  
                      l3825 3654                        l3817 35EA                        l3809 35AC  
                      l4561 2A4A                        l4553 2A1A                        l4545 2A0C  
                      l4537 29EA                        l3659 3C5A                        l3755 3FA8  
                      l3747 3F8E                        l3931 3ADC                        l3923 3AC4  
                      l3915 3AA2                        l3907 3A6E                        l3771 3EFE  
                      l3763 3EEC                        l2963 26A8                        l2955 268E  
                      l2939 25E0                        l2947 2628                        l2891 2450  
                      l2875 240C                        l2883 242C                        l2867 23CE  
                      l2859 239C                        l3851 2EB4                        l3843 2E6C  
                      l3835 2DFC                        l2971 1ECC                        l2787 1DF4  
                      l2795 1E4A                        l2779 1DA6                        l2699 1B7A  
                      l4395 1880                        l4379 1832                        l4387 1852  
                      l4299 13D2                        l4459 27D0                        l4467 27E6  
                      l3827 3656                        l3819 361A                        l4571 2AA2  
                      l4563 2A5C                        l4555 2A1E                        l4547 2A10  
                      l4539 29EE                        l3749 3F90                        l3925 3ACA  
                      l3917 3AB2                        l3909 3A86                        l3773 3F00  
                      l3765 3EEE                        l3757 3ED6                        l3933 3E9C  
                      l2957 2692                        l2949 2642                        l2893 246A  
                      l2885 243C                        l2877 2414                        l2869 23D6  
                      l3861 2F34                        l3853 2EC0                        l3845 2E74  
                      l3837 2E42                        l3781 3422                        l2981 1F08  
                      l2973 1ED8                        l2797 1E5A                        l2789 1E00  
                      l4397 18D8                        l4389 1864                        l4477 289E  
                      l4469 2818                        l4493 293E                        l3829 3658  
                      l3941 39C8                        l4581 2B02                        l4573 2ABA  
                      l4565 2A74                        l4557 2A20                        l4549 2A12  
                      l3927 3AD0                        l3919 3AB8                        l3775 3F08  
                      l3767 3EF6                        l3759 3EE2                        l3935 3EA8  
                      l2959 26A0                        l2895 247A                        l2887 243C  
                      l2879 2418                        l3871 2F7C                        l3863 2F36  
                      l3855 2EFC                        l3847 2E80                        l3839 2E58  
                      l3791 3486                        l3783 3424                        l2991 1F3A  
                      l2983 1F18                        l2975 1EE6                        l2799 1E6A  
                      l4399 190C                        l4487 2904                        l4479 28C8  
                      l4663 27FA                        l3951 3A44                        l3943 3A08  
                      l4591 2B72                        l4583 2B0A                        l4575 2AD6  
                      l4567 2A78                        l4559 2A32                        l3929 3AD6  
                      l3769 3EF8                        l3937 3EB6                        l2897 248A  
                      l3873 2F7E                        l3865 2F3A                        l3857 2F08  
                      l3849 2EB2                        l3793 34A8                        l3785 3426  
                      l3777 3412                        l3961 38D8                        l2993 1F48  
                      l2985 1F1E                        l2977 1EE8                        l4665 28B2  
                      l4489 2932                        l3953 3A58                        l3945 3A0E  
                      l4593 2B76                        l4585 2B22                        l4577 2ADA  
                      l4569 2A86                        l3891 3BC2                        l3939 3EBA  
                      l2899 249A                        l3867 2F5E                        l3859 2F16  
                      l3795 34AC                        l3787 3428                        l3779 3412  
                      l3963 390C                        l3955 3872                        l2995 1F4A  
                      l2987 1F2E                        l2979 1EF8                        l4667 2924  
                      l3947 3A32                        l4595 2B94                        l4587 2B26  
                      l4579 2AF8                        l3893 3BD4                        l3981 3B4C  
                      l3869 2F6E                        l3797 34AE                        l3789 3456  
                      l3957 389E                        l2997 1F5A                        l2989 1F34  
                      l3949 3A36                        l4597 2B9E                        l4589 2B3E  
                      l3887 3FAC                        l3895 3BDA                        l3983 3B5A  
                      l3799 34B0                        l3959 38B0                        l2999 1F6A  
                      l4599 2BA6                        l3897 3BE4                        l3889 3BB2  
                      l3985 3B5C                        l3899 3BF6                        l3987 3B76  
                      l3979 3B4A                        l3989 3B96                        STR_1 100C  
                      STR_2 1001                        STR_3 1016                        STR_6 101A  
                      u3000 21C8                        u3001 21C4                        u3010 21DA  
                      u3011 21D6                        u3100 3512                        u3020 2208  
                      u2300 1A8A                        u3101 350E                        u3021 2204  
                      u2301 1A86                        u3110 3538                        u2230 37D6  
                      u3030 221E                        u2310 1AA0                        u3111 3534  
                      u2231 37D2                        u3031 221A                        u2311 1A9C  
                      u3120 3556                        u3200 3706                        u2240 37E6  
                      u3040 2232                        u2400 1BDA                        u2320 1AB2  
                      u3121 3552                        u3201 3702                        u2241 37E2  
                      u3041 222E                        u2401 1BD6                        u2321 1AAE  
                      u3130 3572                        u2250 380C                        u3210 394C  
                      u3050 224C                        u2410 1BFA                        u2330 1AC2  
                      u4010 3744                        u3131 356E                        u2251 3808  
                      u3211 3948                        u3051 2248                        u2411 1BF6  
                      u2331 1ABE                        u4011 3740                        u3140 3598  
                      u2260 383E                        u3220 398A                        u3060 2294  
                      u2500 1D3A                        u2420 1C08                        u2340 1AFE  
                      u3300 3120                        u4020 37BC                        u3141 3594  
                      u2261 383A                        u3221 3986                        u3061 2290  
                      u2501 1D36                        u2421 1C04                        u2341 1AFA  
                      u3301 311C                        u4021 37B8                        u4030 3C26  
                      u3150 367A                        u3230 39BE                        u3070 22C2  
                      u2510 1D66                        u2430 1C18                        u2350 1B0C  
                      u2270 1A26                        u3310 3154                        u4031 3C22  
                      u3151 3676                        u3231 39BA                        u3071 22BE  
                      u2511 1D62                        u2431 1C14                        u2351 1B08  
                      u2271 1A22                        u4040 3C3C                        u3160 3694  
                      u3240 323E                        u3080 22FC                        u2600 1E48  
                      u2520 1D76                        u2440 1C4A                        u2360 1B7A  
                      u2280 1A38                        u3320 3182                        u3400 3354  
                      u4041 3C38                        u3161 3690                        u3241 323A  
                      u3081 22F8                        u2601 1E44                        u2521 1D72  
                      u2441 1C46                        u2361 1B76                        u2281 1A34  
                      u3321 317E                        u4050 3C52                        u4130 3454  
                      u3090 34F8                        u3170 36AE                        u3250 327C  
                      u2610 1E5A                        u2530 1D92                        u2450 1C58  
                      u2370 1B92                        u2290 1A48                        u3330 3196  
                      u3410 3372                        u4210 361A                        u4051 3C4E  
                      u4131 3450                        u3091 34F4                        u3171 36AA  
                      u3251 3278                        u2611 1E56                        u2531 1D8E  
                      u2451 1C54                        u2371 1B8C                        u2291 1A44  
                      u3331 3192                        u3315 314A                        u3411 336E  
                      u4211 3616                        u4060 3C68                        u2700 239A  
                      u4300 2F16                        u4140 346A                        u3180 36CC  
                      u3260 329A                        u2620 1E6A                        u2540 1DA2  
                      u2460 1C76                        u2380 1B94                        u3340 31BE  
                      u3420 339A                        u3500 2C40                        u4220 362E  
                      u4061 3C64                        u2701 2396                        u4301 2F12  
                      u4141 3466                        u4125 3434                        u3181 36C8  
                      u3261 3296                        u2621 1E66                        u2541 1D9E  
                      u2461 1C72                        u3341 31BA                        u3421 3396  
                      u3405 334A                        u3501 2C3C                        u4221 362A  
                      u4205 35F6                        u2710 23AC                        u4310 2F26  
                      u4150 3480                        u3190 36E2                        u3270 32BA  
                      u2630 1E8A                        u2550 1DB4                        u2470 1CAE  
                      u2390 1BBC                        u3350 31DE                        u3430 33C4  
                      u3510 2C62                        u4230 3640                        u2711 23A8  
                      u4311 2F22                        u4151 347C                        u3191 36DE  
                      u3271 32B6                        u2631 1E86                        u2551 1DB0  
                      u2471 1CAA                        u2391 1BB8                        u3351 31DA  
                      u3431 33C0                        u3511 2C5E                        u4231 3638  
                      u5007 29FE                        u4400 3B88                        u2800 2556  
                      u2720 23BC                        u4320 2F34                        u4160 3498  
                      u3280 330A                        u2640 1E9C                        u2560 1DCA  
                      u2480 1CF4                        u3360 31EE                        u4401 3B80  
                      u2801 2552                        u2721 23B8                        u4321 2F30  
                      u4161 3490                        u3281 3306                        u2641 1E98  
                      u2561 1DC6                        u2481 1CF0                        u3361 31EA  
                      u5017 2A66                        u2810 2576                        u2730 23FC  
                      u4330 2F6E                        u4250 2DEE                        u3290 3E7A  
                      u2650 1EB8                        u2570 1DE0                        u2490 1D2A  
                      u3450 33FE                        u3530 2CCE                        u5107 3BA0  
                      u2811 2572                        u2731 23F8                        u4331 2F6A  
                      u4251 2DEA                        u3291 3E76                        u2651 1EB4  
                      u2571 1DDC                        u2491 1D26                        u3451 33F8  
                      u3531 2CCA                        u5027 2AAC                        u2820 2588  
                      u2740 243C                        u4340 2F7C                        u4260 2DFC  
                      u4500 2FA0                        u2900 1EE6                        u2580 1DF4  
                      u3460 3400                        u3540 2CF2                        u5117 3EF0  
                      u2821 2584                        u2741 2438                        u4341 2F78  
                      u4261 2DF8                        u4501 2F9A                        u2901 1EE2  
                      u2581 1DF0                        u3445 33D6                        u3525 2C76  
                      u5037 2B14                        u2830 25B6                        u2750 24B2  
                      u2670 2334                        u4270 2E58                        u3390 3F1A  
                      u4510 2FA2                        u2910 1EF8                        u2590 1E0E  
                      u3550 2D0E                        u3526 2C80                        u4190 35EA  
                      u5127 3F02                        u2831 25B2                        u2751 24AE  
                      u2671 2330                        u4271 2E54                        u3391 3F16  
                      u2911 1EF4                        u2591 1E0A                        u3551 2D0A  
                      u3527 2C90                        u4191 35E6                        u5047 2B30  
                      u4360 3BC2                        u2840 25CC                        u2760 24D4  
                      u2680 2346                        u4280 2EAE                        u4520 2FB2  
                      u2920 1F08                        u3560 2D62                        u3480 3CDA  
                      u4600 108E                        u4248 3642                        u5137 3A78  
                      u4361 3BBE                        u2841 25C8                        u2761 24D0  
                      u2681 2342                        u4281 2EAA                        u4521 2FAE  
                      u2921 1F04                        u3545 2CE8                        u3481 3CD6  
                      u4601 108A                        u4185 35CA                        u5057 2BB0  
                      u4370 3BF6                        u4418 3B8A                        u2850 25E0  
                      u2770 24FE                        u2690 2356                        u4290 2EF8  
                      u4178 349A                        u4450 3E2A                        u4530 2FDE  
                      u2930 1F48                        u3570 2D7E                        u3490 2C12  
                      u4610 109E                        u5147 3A92                        u4371 3BF2  
                      u2851 25DC                        u2771 24FA                        u2691 2352  
                      u4291 2EF4                        u4451 3E26                        u4531 2FDA  
                      u2931 1F44                        u3571 2D7A                        u4611 109A  
                      u5067 3A3C                        u4380 3ED2                        u2860 25FA  
                      u2780 2522                        u4460 3AF2                        u4540 2FF4  
                      u2940 1F5A                        u3580 2DBA                        u4700 1370  
                      u4620 10DC                        u5157 3AA8                        u4381 3ECE  
                      u2861 25F6                        u2781 251E                        u4461 3AEE  
                      u4541 2FF0                        u2941 1F56                        u3581 2DB6  
                      u3565 2D58                        u4701 136C                        u4621 10D8  
                      u5077 3A5E                        u4390 3B70                        u2870 2642  
                      u2790 2538                        u4470 3B38                        u4550 3098  
                      u2950 1F6A                        u4710 13A6                        u4630 10EE  
                      u5167 3F9E                        u4391 3B6C                        u2871 263E  
                      u2791 2534                        u4471 3B34                        u4551 3094  
                      u2951 1F66                        u3495 2C08                        u4711 13A2  
                      u4631 10EA                        u5087 365E                        u2880 2672  
                      u4560 30AA                        u2960 1FA0                        u4480 3DEA  
                      u4800 16CA                        u4720 13BC                        u4640 1160  
                      u2881 266E                        u5097 34BC                        u4561 30A6  
                      u2961 1F9C                        u4481 3DE6                        u4801 16C6  
                      u4721 13B8                        u4641 115C                        u2890 26A0  
                      u4570 30C4                        u2970 1FB0                        u4490 3CCA  
                      u4810 1718                        u4730 13F2                        u4650 1172  
                      u2891 269C                        u4571 30C0                        u2971 1FAC  
                      u4491 3CC6                        u4811 1714                        u4731 13EE  
                      u4651 116E                        u4580 30D4                        u2980 214E  
                      u4900 19CE                        u4820 17C6                        u4740 1400  
                      u4660 11E8                        u4581 30D0                        u4901 19CA  
                      u4821 17C2                        u4741 13FC                        u4661 11E4  
                      u2990 21A8                        u4830 1802                        u4750 142A  
                      u4670 1274                        u4590 1044                        u4910 26D8  
                      u2991 21A4                        u4831 17FE                        u4751 1426  
                      u4671 1270                        u4591 1040                        u4911 26D4  
                      u4840 1810                        u4760 1572                        u4680 12A6  
                      u4920 2714                        u2985 2144                        u4841 180C  
                      u4761 156E                        u4681 12A2                        u4921 2710  
                      u4850 1864                        u4770 15D8                        u4690 12E4  
                      u4930 2758                        u4851 1860                        u4771 15D4  
                      u4691 12E0                        u4931 2754                        u4860 1936  
                      u4780 1620                        u4940 2776                        u4861 1932  
                      u4781 161C                        u4941 2772                        u4870 1952  
                      u4790 1630                        u4950 2836                        u4871 194E  
                      u4791 162C                        u4951 2832                        u4880 19B8  
                      u4960 3D9E                        u4881 19B2                        u4961 3D9A  
                      u4890 19BA                        u4970 2A32                        u4971 2A2E  
                      u4980 2A44                        u4981 2A40                        u4990 2A86  
                      u4991 2A82                        abs@a 0007           ?_Lcd_Write_String 0005  
                      _dbuf 0100                        _labs 3CCC                        _main 2964  
                      _dtoa 2F90                        _prec 005B                        pad@i 0015  
                      pad@p 0012                        fsr1h 3FE2                        fsr2h 3FDA  
                      indf2 3FDF                        fsr1l 3FE1                        fsr2l 3FD9  
             ___fpclassifyf 3314                        prodh 3FF4                        prodl 3FF3  
                      start FFFC          ??_Lcd_Write_String 0006             ___fldiv@new_exp 0012  
           __end_of_Lcd_Cmd 3FAC              _SPI1STATUSbits 3D17                ___param_bank 0000  
                     ??_abs 0009                       ??_pad 0014                 _writeData16 39C8  
             ___fltol@sign1 0022                       ?_labs 0001             __end_of___fladd 1ECC  
                     ?_main 0001                       ?_dtoa 0017             __end_of___fldiv 26B4  
           __end_of___awdiv 35AA             __end_of___flneg 3E9C             __end_of___awmod 3718  
           __end_of___flmul 231A             __end_of___flsub 3D68             __end_of___fltol 3210  
           ___awdiv@divisor 0003                       _U1BRG 3DF5             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0037                       _PORTB 3FCB                       _PORTC 3FCC  
                     _TRISA 3FC2                       _TRISB 3FC3                       _TRISC 3FC4  
                     _flags 005D         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 37C6                       _fputs 3DEC                       labs@a 0001  
                     pad@fp 000F                       _width 0059                       _putch 3FBA  
                     dtoa@d 0018                       dtoa@i 0021                       dtoa@p 001E  
                     dtoa@s 0020                       dtoa@w 001C                       tablat 3FF5  
                     status 3FD8             __end_of_sprintf 3E64              ?___fpclassifyf 0001  
             main@affiche16 00D9            __end_of_Lcd_Init 3AE4            __end_of_Lcd_Port 3C72  
           __initialization 3F6A                __end_of_labs 3D22                __end_of_main 2BCA  
              __end_of_dtoa 310A                      ??_labs 0005                      ??_main 004F  
                    ??_dtoa 001A             loadData@address 0001               __activetblptr 0002  
__end_of_read_prec_or_width 37C6                      ?_fputc 0001                      ?_fputs 0009  
          ___awdiv@dividend 0001                      _ANSELA 3A40                      ?_putch 0001  
                    _ANSELB 3A50                      _ANSELC 3A60                      _U1CON0 3DF2  
                    _U1CON1 3DF3                      _U1CON2 3DF4                      _RB1PPS 3A09  
                    _RB2PPS 3A0A                      _RC3PPS 3A13                      _RC5PPS 3A15  
                    _ODCONB 3A52                      _RC6PPS 3A16                   ??_Lcd_Cmd 0002  
          __end_of___xxtofl 2F90                vfprintf@cfmt 0041                      ___flge 3210  
                    ___fleq 391E                   ??___fladd 0009                      ___wmul 3F40  
                 ??___fldiv 0009                   ??___awdiv 0005                   ??___flneg 0005  
                 ??___awmod 0005                   ??___flmul 0009                   ??___flsub 0022  
                 ??___fltol 001E            __end_of_loadData 34E6                      _efgtoa 1020  
                    _floorf 2BCA                      _memcpy 3C72        read_prec_or_width@ap 0008  
                    clear_0 3F70                      clear_1 3F7C            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 0010                      dtoa@fp 0017                      _strcpy 3DAA  
         loadData16@address 001A                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                    tblptrh 3FF7                      tblptrl 3FF6                      tblptru 3FF8  
                    putch@c 0001            __end_of_vfprintf 3DAA                   ??_sprintf 0042  
           Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004             Lcd_Set_Cursor@y 0007  
           Lcd_Set_Cursor@z 0006                  ___flge@ff1 001A                  ___flge@ff2 001E  
           ??___fpclassifyf 0005                ___xxtofl@arg 0013                ___xxtofl@exp 0012  
              ___xxtofl@val 0009                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 3F82                  ___flneg@f1 0001  
         __end_of_Lcd_Clear 3FBA               ___rparam_used 0001                  ___fltol@f1 001A  
            __pcstackCOMRAM 0001               __end_of_fputc 3872               __end_of_fputs 3E2C  
             __end_of_putch 3FBC              _Lcd_Set_Cursor 3BB0                   ?_Lcd_Init 0001  
                 ?_Lcd_Port 0001                     ??_fputc 0004                     ??_fputs 000C  
                   ??_putch 0001                  __pbssBANK1 0100                     ?___flge 001A  
                   ?___fleq 0001                     _I2C2CLK 3D65                     ?___wmul 0001  
        loadData@valEEPROM2 0007          loadData@valEEPROM3 0008            writeData@address 0003  
                   ?_efgtoa 002E                ?_writeData16 0024                     ?_floorf 001A  
                   ?_memcpy 0001      __end_of_Lcd_Set_Cursor 3C16                     ?_strcpy 0001  
                   _U1RXPPS 3AE7                   ?___xxtofl 0009                     _SPI1CLK 3D1C  
                   _SPI1RXB 3D10                     _SPI1TXB 3D11                  ??_Lcd_Init 0004  
                ??_Lcd_Port 0001                   ?_loadData 0001              _Lcd_Write_Char 3ED4  
                   _Lcd_Cmd 3F8C           __end_of_deleteAll 3BB0                  _loadData16 3872  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 1A0C  
                   ___fldiv 231A                     ___awdiv 34E6                     ___flneg 3E64  
                   ___awmod 3668                     ___flmul 1ECC                     ___flsub 3D22  
                   ___fltol 310A                   ?_vfprintf 008C                __psmallconst 1000  
                   __pcinit 3F6A                     __ramtop 1000             ?_Lcd_Set_Cursor 0004  
                   __ptext0 2964                     __ptext1 39C8                     __ptext2 35AA  
                   __ptext3 3E2C                     __ptext4 3D68                     __ptext5 26B4  
                   __ptext6 3718                     __ptext7 3F40                     __ptext8 1020  
                   __ptext9 3DAA       read_prec_or_width@fmt 0007                  ??___xxtofl 000D  
          ___awmod@dividend 0001                     efgtoa@c 0033                     efgtoa@d 006B  
                   efgtoa@e 006F                     efgtoa@f 002F                     efgtoa@g 0082  
                   efgtoa@h 0079                     efgtoa@i 0077                     efgtoa@l 007D  
                   efgtoa@m 006D                     efgtoa@n 0086                     efgtoa@p 0062  
                   efgtoa@t 0064                     efgtoa@u 0088                     efgtoa@w 0071  
            main@valeurTest 00D5                     _sprintf 3E2C      __end_of_Lcd_Write_Char 3F0C  
      end_of_initialization 3F82                     floorf@e 0028                     floorf@m 0024  
                   floorf@u 002A                     floorf@x 001A                  ??_loadData 0003  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 3718           __end_of_vfpfcnvrt 2964                  efgtoa@mode 0069  
                efgtoa@sign 0081                   _SPI1TCNTH 3D13                   _SPI1TCNTL 3D12  
                   postdec2 3FDD         ?_read_prec_or_width 0007                     postinc0 3FEE  
                   postinc1 3FE6                     postinc2 3FDE            vfpfcnvrt@convarg 003B  
                 Lcd_Port@a 0001                  ??_vfprintf 0041                     strcpy@d 0005  
                 _PORTAbits 3FCA                   _PORTBbits 3FCB                   _PORTCbits 3FCC  
         __end_of_writeData 3668                 ___fladd@grs 0010               ___xxtofl@sign 0011  
      ??_read_prec_or_width 0009                 ___fldiv@grs 0014                 ___fldiv@rem 000D  
           ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0005           Lcd_Write_String@i 0006  
             loadData16@val 002C                 ___flmul@grs 000E                  main@ligne1 0095  
               ?_loadData16 001A                   _Lcd_Clear 3FAC              __end_of___flge 3314  
            __end_of___fleq 39C8                 vfpfcnvrt@ap 0038                 vfpfcnvrt@cp 0040  
               vfpfcnvrt@fp 0036              __end_of___wmul 3F6A            _Lcd_Write_String 3E9C  
            __end_of_efgtoa 1A0C              __end_of_floorf 2DDC              __end_of_memcpy 3CCC  
                floorf@F521 0051              __end_of_strcpy 3DEC         start_initialization 3F6A  
               __end_of_abs 3F40                 __end_of_pad 3B4A       __end_of___fpclassifyf 3412  
           main@deletedData 00DD                 vfprintf@fmt 008D                  ?_Lcd_Clear 0001  
                  ??___flge 0022                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 0034                    ??_floorf 001E                    ??_memcpy 0007  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                    ??_strcpy 0004  
           writeData16@data 0030             writeData16@high 002E                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
                 ___flmul@a 0005                   ___flmul@b 0001                 __pbssCOMRAM 0051  
                 ___flsub@a 001E                   ___flsub@b 001A               __pcstackBANK0 0060  
                  ?_Lcd_Cmd 0001                 _efgtoa$1089 0066                   _deleteAll 3B4A  
                 _dtoa$1058 001A            ??_Lcd_Set_Cursor 0005           loadData@valEEPROM 0006  
                  ?___fladd 0001                    ?___fldiv 0001                    ?___awdiv 0001  
                  ?___flneg 0001                    ?___awmod 0001                    ?___flmul 0001  
                  ?___flsub 001A                    ?___fltol 001A   loadData16@addressLowValue 0028  
                  _I2C2CON0 3D5D                 __smallconst 1000                    ?_sprintf 008F  
                _I2C2SDAPPS 3AE6                  _I2C2SCLPPS 3AE5              ___wmul@product 0005  
              _SPI1CON0bits 3D14                _SPI1CON2bits 3D16                  ?_deleteAll 0001  
                  Lcd_Cmd@a 0003                    _SPI1BAUD 3D19                    _SPI1CON0 3D14  
                  _SPI1CON1 3D15                 ??_Lcd_Clear 0004                   _vfpfcnvrt 26B4  
         ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002                    _Lcd_Init 3A68  
                 _writeData 35AA                    _Lcd_Port 3C16                  vfpfcnvrt@c 003F  
  __end_of_Lcd_Write_String 3ED4                ??_loadData16 001E                    __Hrparam 0000  
                 memcpy@tmp 0007                  vfprintf@ap 008E                    __Lrparam 0000  
                vfprintf@fp 008C              writeData16@low 002C                  ?_vfpfcnvrt 0036  
        ___fpclassifyf@F465 0055                  sprintf@fmt 0090                    ___xxtofl 2DDC  
        __end_of_loadData16 391E                  ?_writeData 0001                    __ptext10 3C72  
                  __ptext11 3CCC                    __ptext20 391E                    __ptext12 2BCA  
                  __ptext21 2F90                    __ptext13 3314                    __ptext30 3412  
                  __ptext22 3AE4                    __ptext14 310A                    __ptext31 2DDC  
                  __ptext23 3DEC                    __ptext15 3D22                    __ptext40 3C16  
                  __ptext32 231A                    __ptext24 37C6                    __ptext16 1A0C  
                  __ptext33 3B4A                    __ptext25 3FBA                    __ptext17 3E64  
                  __ptext34 3E9C                    __ptext26 3F0C                    __ptext18 1ECC  
                  __ptext35 3ED4                    __ptext27 3668                    __ptext19 3210  
                  __ptext36 3BB0                    __ptext28 34E6                    __ptext37 3A68  
                  __ptext29 3872                    __ptext38 3FAC                    __ptext39 3F8C  
                _U1CON0bits 3DF2                  _U1FIFObits 3DF7                  strcpy@dest 0001  
                  _loadData 3412                 ??_deleteAll 0001        loadData16@floatValue 0020  
                  efgtoa@fp 002E                    efgtoa@ne 0060                    efgtoa@pp 0068  
                  efgtoa@ou 0073                    isa$xinst 0000               ??_writeData16 002A  
                  _vfprintf 3D68                    memcpy@d1 0001                    memcpy@s1 0003  
loadData16@addressHighValue 002A        writeData16@floatData 0024          Lcd_Write_Char@temp 0002  
                 sprintf@ap 0042               writeData@data 0001                   strcpy@src 0003  
               efgtoa@nmode 006A                  _SPI1SDIPPS 3AE1                  _SPI1TWIDTH 3D18  
               ??_vfpfcnvrt 0039          Lcd_Set_Cursor@temp 0008                    sprintf@f 0043  
                  sprintf@s 008F         loadData16@valFinale 0024         __end_of_writeData16 3A68  
        writeData16@address 0028                 ??_writeData 0005               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F  
