

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 15:59:58 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 21/07/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F26K83 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     _SPI1STATUSbits	set	15639
    92   000000                     _SPI1CON2bits	set	15638
    93   000000                     _SPI1TCNTH	set	15635
    94   000000                     _SPI1TWIDTH	set	15640
    95   000000                     _SPI1CON1	set	15637
    96   000000                     _I2C2SDAPPS	set	15078
    97   000000                     _U1CON0bits	set	15858
    98   000000                     _SPI1CON0bits	set	15636
    99   000000                     _PORTCbits	set	16332
   100   000000                     _PORTBbits	set	16331
   101   000000                     _RB1PPS	set	14857
   102   000000                     _RC6PPS	set	14870
   103   000000                     _ANSELA	set	14912
   104   000000                     _TRISA	set	16322
   105   000000                     _PORTAbits	set	16330
   106   000000                     _PORTC	set	16332
   107   000000                     _PORTB	set	16331
   108   000000                     _TRISC	set	16324
   109   000000                     _TRISB	set	16323
   110   000000                     _ANSELB	set	14928
   111   000000                     _ODCONB	set	14930
   112   000000                     _ANSELC	set	14944
   113   000000                     _SPI1SDIPPS	set	15073
   114   000000                     _I2C2SCLPPS	set	15077
   115   000000                     _U1RXPPS	set	15079
   116   000000                     _SPI1RXB	set	15632
   117   000000                     _SPI1TXB	set	15633
   118   000000                     _SPI1TCNTL	set	15634
   119   000000                     _SPI1CON0	set	15636
   120   000000                     _I2C2CON0	set	15709
   121   000000                     _U1CON0	set	15858
   122   000000                     _RC3PPS	set	14867
   123   000000                     _RC5PPS	set	14869
   124   000000                     _RB2PPS	set	14858
   125   000000                     _U1BRG	set	15861
   126   000000                     _U1FIFObits	set	15863
   127   000000                     _U1CON2	set	15860
   128   000000                     _U1CON1	set	15859
   129   000000                     _I2C2CLK	set	15717
   130   000000                     _SPI1BAUD	set	15641
   131   000000                     _SPI1CLK	set	15644
   132                           
   133                           	psect	smallconst
   134   001000                     __psmallconst:
   135                           	callstack 0
   136   001000  00                 	db	0
   137   001001                     STR_2:
   138   001001  64                 	db	100	;'d'
   139   001002  65                 	db	101	;'e'
   140   001003  6C                 	db	108	;'l'
   141   001004  65                 	db	101	;'e'
   142   001005  74                 	db	116	;'t'
   143   001006  65                 	db	101	;'e'
   144   001007  3D                 	db	61	;'='
   145   001008  20                 	db	32
   146   001009  25                 	db	37
   147   00100A  64                 	db	100	;'d'
   148   00100B  00                 	db	0
   149   00100C                     STR_1:
   150   00100C  76                 	db	118	;'v'
   151   00100D  61                 	db	97	;'a'
   152   00100E  6C                 	db	108	;'l'
   153   00100F  3D                 	db	61	;'='
   154   001010  20                 	db	32
   155   001011  25                 	db	37
   156   001012  2E                 	db	46
   157   001013  32                 	db	50	;'2'
   158   001014  66                 	db	102	;'f'
   159   001015  00                 	db	0
   160   001016                     STR_3:
   161   001016  69                 	db	105	;'i'
   162   001017  6E                 	db	110	;'n'
   163   001018  66                 	db	102	;'f'
   164   001019  00                 	db	0
   165   00101A                     STR_6:
   166   00101A  6E                 	db	110	;'n'
   167   00101B  61                 	db	97	;'a'
   168   00101C  6E                 	db	110	;'n'
   169   00101D  00                 	db	0
   170   00101E  00                 	db	0	; dummy byte at the end
   171   000000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   003FA2                     __pcinit:
   176                           	callstack 0
   177   003FA2                     start_initialization:
   178                           	callstack 0
   179   003FA2                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Clear objects allocated to BANK1 (80 bytes)
   183   003FA2  EE00  F100         	lfsr	0,__pbssBANK1
   184   003FA6  0E50               	movlw	80
   185   003FA8                     clear_0:
   186   003FA8  6AEE               	clrf	postinc0,c
   187   003FAA  06E8               	decf	wreg,f,c
   188   003FAC  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK0 (5 bytes)
   191   003FAE  0100               	movlb	0
   192   003FB0  6BEC               	clrf	(__pbssBANK0+4)& (0+255),b
   193   003FB2  6BEB               	clrf	(__pbssBANK0+3)& (0+255),b
   194   003FB4  6BEA               	clrf	(__pbssBANK0+2)& (0+255),b
   195   003FB6  6BE9               	clrf	(__pbssBANK0+1)& (0+255),b
   196   003FB8  6BE8               	clrf	__pbssBANK0& (0+255),b
   197                           
   198                           ; Clear objects allocated to COMRAM (8 bytes)
   199   003FBA  EE00  F058         	lfsr	0,__pbssCOMRAM
   200   003FBE  0E08               	movlw	8
   201   003FC0                     clear_1:
   202   003FC0  6AEE               	clrf	postinc0,c
   203   003FC2  06E8               	decf	wreg,f,c
   204   003FC4  E1FD               	bnz	clear_1
   205   003FC6                     end_of_initialization:
   206                           	callstack 0
   207   003FC6                     __end_of__initialization:
   208                           	callstack 0
   209   003FC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   210   003FC8  6EF8               	movwf	tblptru,c
   211   003FCA  0100               	movlb	0
   212   003FCC  EF5A  F013         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMRAM
   215   000058                     __pbssCOMRAM:
   216                           	callstack 0
   217   000058                     ___fpclassifyf@F465:
   218                           	callstack 0
   219   000058                     	ds	4
   220   00005C                     _width:
   221                           	callstack 0
   222   00005C                     	ds	2
   223   00005E                     _prec:
   224                           	callstack 0
   225   00005E                     	ds	2
   226                           
   227                           	psect	bssBANK0
   228   0000E8                     __pbssBANK0:
   229                           	callstack 0
   230   0000E8                     floorf@F521:
   231                           	callstack 0
   232   0000E8                     	ds	4
   233   0000EC                     _flags:
   234                           	callstack 0
   235   0000EC                     	ds	1
   236                           
   237                           	psect	bssBANK1
   238   000100                     __pbssBANK1:
   239                           	callstack 0
   240   000100                     _dbuf:
   241                           	callstack 0
   242   000100                     	ds	80
   243                           
   244                           	psect	cstackBANK0
   245   000060                     __pcstackBANK0:
   246                           	callstack 0
   247   000060                     efgtoa@ne:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x0
   251   000060                     	ds	2
   252   000062                     efgtoa@p:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x2
   256   000062                     	ds	2
   257   000064                     efgtoa@t:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x4
   261   000064                     	ds	2
   262   000066                     _efgtoa$1085:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x6
   266   000066                     	ds	2
   267   000068                     efgtoa@pp:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x8
   271   000068                     	ds	1
   272   000069                     efgtoa@mode:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x9
   276   000069                     	ds	1
   277   00006A                     efgtoa@nmode:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0xA
   281   00006A                     	ds	1
   282   00006B                     efgtoa@d:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0xB
   286   00006B                     	ds	2
   287   00006D                     efgtoa@m:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0xD
   291   00006D                     	ds	2
   292   00006F                     efgtoa@e:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xF
   296   00006F                     	ds	2
   297   000071                     efgtoa@w:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x11
   301   000071                     	ds	2
   302   000073                     efgtoa@ou:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x13
   306   000073                     	ds	4
   307   000077                     efgtoa@i:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x17
   311   000077                     	ds	2
   312   000079                     efgtoa@h:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x19
   316   000079                     	ds	4
   317   00007D                     efgtoa@l:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x1D
   321   00007D                     	ds	4
   322   000081                     efgtoa@sign:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x21
   326   000081                     	ds	1
   327   000082                     efgtoa@g:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x22
   331   000082                     	ds	4
   332   000086                     efgtoa@n:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x26
   336   000086                     	ds	2
   337   000088                     efgtoa@u:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x28
   341   000088                     	ds	4
   342   00008C                     vfpfcnvrt@fp:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x2C
   346   00008C                     	ds	1
   347   00008D                     vfpfcnvrt@fmt:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x2D
   351   00008D                     	ds	1
   352   00008E                     vfpfcnvrt@ap:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x2E
   356   00008E                     	ds	1
   357   00008F                     ?_vfprintf:
   358                           	callstack 0
   359   00008F                     vfprintf@fp:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x2F
   363   00008F                     	ds	1
   364   000090                     vfprintf@fmt:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x30
   368   000090                     	ds	1
   369   000091                     vfprintf@ap:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x31
   373   000091                     	ds	1
   374   000092                     ?_sprintf:
   375                           	callstack 0
   376   000092                     sprintf@s:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x32
   380   000092                     	ds	1
   381   000093                     sprintf@fmt:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x33
   385   000093                     	ds	5
   386   000098                     main@ligne1:
   387                           	callstack 0
   388                           
   389                           ; 64 bytes @ 0x38
   390   000098                     	ds	64
   391   0000D8                     main@affiche16:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x78
   395   0000D8                     	ds	4
   396   0000DC                     main@deletedData:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x7C
   400   0000DC                     	ds	4
   401   0000E0                     _main$1406:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x80
   405   0000E0                     	ds	4
   406   0000E4                     main@valeurTest:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x84
   410   0000E4                     	ds	4
   411                           
   412                           	psect	cstackCOMRAM
   413   000001                     __pcstackCOMRAM:
   414                           	callstack 0
   415   000001                     ??_deleteAll:
   416   000001                     ?___fpclassifyf:
   417                           	callstack 0
   418   000001                     ?_loadData:
   419                           	callstack 0
   420   000001                     ?___wmul:
   421                           	callstack 0
   422   000001                     ?___awdiv:
   423                           	callstack 0
   424   000001                     ?___awmod:
   425                           	callstack 0
   426   000001                     ?___fladd:
   427                           	callstack 0
   428   000001                     ?___fldiv:
   429                           	callstack 0
   430   000001                     ?___flmul:
   431                           	callstack 0
   432   000001                     ?_labs:
   433                           	callstack 0
   434   000001                     ?___flneg:
   435                           	callstack 0
   436   000001                     ?___xxtofl:
   437                           	callstack 0
   438   000001                     Lcd_Port@a:
   439                           	callstack 0
   440   000001                     writeData@data:
   441                           	callstack 0
   442   000001                     loadData@address:
   443                           	callstack 0
   444   000001                     ___wmul@multiplier:
   445                           	callstack 0
   446   000001                     ___awdiv@dividend:
   447                           	callstack 0
   448   000001                     ___awmod@dividend:
   449                           	callstack 0
   450   000001                     memcpy@d1:
   451                           	callstack 0
   452   000001                     fputc@c:
   453                           	callstack 0
   454   000001                     strcpy@dest:
   455                           	callstack 0
   456   000001                     ___fleq@ff1:
   457                           	callstack 0
   458   000001                     ___flneg@f1:
   459                           	callstack 0
   460   000001                     ___fladd@b:
   461                           	callstack 0
   462   000001                     ___fldiv@b:
   463                           	callstack 0
   464   000001                     ___flmul@b:
   465                           	callstack 0
   466   000001                     ___xxtofl@val:
   467                           	callstack 0
   468   000001                     ___fpclassifyf@x:
   469                           	callstack 0
   470   000001                     labs@a:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474   000001                     	ds	1
   475   000002                     ??_Lcd_Cmd:
   476   000002                     Lcd_Write_Char@temp:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x1
   480   000002                     	ds	1
   481   000003                     ??_loadData:
   482   000003                     Lcd_Cmd@a:
   483                           	callstack 0
   484   000003                     Lcd_Write_Char@y:
   485                           	callstack 0
   486   000003                     fputc@fp:
   487                           	callstack 0
   488   000003                     strcpy@src:
   489                           	callstack 0
   490   000003                     writeData@address:
   491                           	callstack 0
   492   000003                     ___wmul@multiplicand:
   493                           	callstack 0
   494   000003                     ___awdiv@divisor:
   495                           	callstack 0
   496   000003                     ___awmod@divisor:
   497                           	callstack 0
   498   000003                     memcpy@s1:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x2
   502   000003                     	ds	1
   503   000004                     ??_fputc:
   504   000004                     ??_strcpy:
   505   000004                     ??_Lcd_Init:
   506   000004                     Lcd_Set_Cursor@b:
   507                           	callstack 0
   508   000004                     Lcd_Write_Char@a:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x3
   512   000004                     	ds	1
   513   000005                     ??___fpclassifyf:
   514   000005                     ??_labs:
   515   000005                     ??_writeData:
   516   000005                     ??___xxtofl:
   517   000005                     Lcd_Set_Cursor@a:
   518                           	callstack 0
   519   000005                     Lcd_Write_String@a:
   520                           	callstack 0
   521   000005                     ___awdiv@counter:
   522                           	callstack 0
   523   000005                     ___awmod@counter:
   524                           	callstack 0
   525   000005                     ___wmul@product:
   526                           	callstack 0
   527   000005                     memcpy@n:
   528                           	callstack 0
   529   000005                     strcpy@d:
   530                           	callstack 0
   531   000005                     ___fleq@ff2:
   532                           	callstack 0
   533   000005                     ___fladd@a:
   534                           	callstack 0
   535   000005                     ___fldiv@a:
   536                           	callstack 0
   537   000005                     ___flmul@a:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x4
   541   000005                     	ds	1
   542   000006                     Lcd_Set_Cursor@z:
   543                           	callstack 0
   544   000006                     loadData@valEEPROM:
   545                           	callstack 0
   546   000006                     ___awdiv@sign:
   547                           	callstack 0
   548   000006                     ___awmod@sign:
   549                           	callstack 0
   550   000006                     Lcd_Write_String@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x5
   554   000006                     	ds	1
   555   000007                     ?_abs:
   556                           	callstack 0
   557   000007                     ?_read_prec_or_width:
   558                           	callstack 0
   559   000007                     Lcd_Set_Cursor@y:
   560                           	callstack 0
   561   000007                     loadData@valEEPROM2:
   562                           	callstack 0
   563   000007                     read_prec_or_width@fmt:
   564                           	callstack 0
   565   000007                     memcpy@tmp:
   566                           	callstack 0
   567   000007                     ___awdiv@quotient:
   568                           	callstack 0
   569   000007                     abs@a:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573   000007                     	ds	1
   574   000008                     Lcd_Set_Cursor@temp:
   575                           	callstack 0
   576   000008                     loadData@valEEPROM3:
   577                           	callstack 0
   578   000008                     read_prec_or_width@ap:
   579                           	callstack 0
   580   000008                     memcpy@d:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x7
   584   000008                     	ds	1
   585   000009                     ??___fladd:
   586   000009                     ??___fldiv:
   587   000009                     ??___flmul:
   588   000009                     ??_abs:
   589   000009                     ??___fleq:
   590   000009                     ___xxtofl@sign:
   591                           	callstack 0
   592   000009                     read_prec_or_width@c:
   593                           	callstack 0
   594   000009                     ___fpclassifyf@e:
   595                           	callstack 0
   596   000009                     fputs@s:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x8
   600   000009                     	ds	1
   601   00000A                     ___xxtofl@exp:
   602                           	callstack 0
   603   00000A                     read_prec_or_width@n:
   604                           	callstack 0
   605   00000A                     memcpy@s:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x9
   609   00000A                     	ds	1
   610   00000B                     fputs@fp:
   611                           	callstack 0
   612   00000B                     ___xxtofl@arg:
   613                           	callstack 0
   614   00000B                     ___fpclassifyf@u:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0xA
   618   00000B                     	ds	1
   619   00000C                     fputs@c:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0xB
   623   00000C                     	ds	1
   624   00000D                     ___fladd@signs:
   625                           	callstack 0
   626   00000D                     ___flmul@sign:
   627                           	callstack 0
   628   00000D                     fputs@i:
   629                           	callstack 0
   630   00000D                     ___fldiv@rem:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0xC
   634   00000D                     	ds	1
   635   00000E                     ___fladd@aexp:
   636                           	callstack 0
   637   00000E                     ___flmul@grs:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0xD
   641   00000E                     	ds	1
   642   00000F                     ___fladd@bexp:
   643                           	callstack 0
   644   00000F                     pad@fp:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0xE
   648   00000F                     	ds	1
   649   000010                     ___fladd@grs:
   650                           	callstack 0
   651   000010                     pad@buf:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0xF
   655   000010                     	ds	1
   656   000011                     ___fldiv@sign:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x10
   660   000011                     	ds	1
   661   000012                     ___flmul@aexp:
   662                           	callstack 0
   663   000012                     ___fldiv@new_exp:
   664                           	callstack 0
   665   000012                     pad@p:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x11
   669   000012                     	ds	1
   670   000013                     ___flmul@bexp:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x12
   674   000013                     	ds	1
   675   000014                     ??_pad:
   676   000014                     ___fldiv@grs:
   677                           	callstack 0
   678   000014                     ___flmul@prod:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x13
   682   000014                     	ds	1
   683   000015                     pad@i:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x14
   687   000015                     	ds	2
   688   000017                     dtoa@fp:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x16
   692   000017                     	ds	1
   693   000018                     ___fldiv@bexp:
   694                           	callstack 0
   695   000018                     ___flmul@temp:
   696                           	callstack 0
   697   000018                     dtoa@d:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x17
   701   000018                     	ds	1
   702   000019                     ___fldiv@aexp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x18
   706   000019                     	ds	1
   707   00001A                     ?_loadData16:
   708                           	callstack 0
   709   00001A                     ?___flsub:
   710                           	callstack 0
   711   00001A                     ?_floorf:
   712                           	callstack 0
   713   00001A                     loadData16@address:
   714                           	callstack 0
   715   00001A                     _dtoa$1054:
   716                           	callstack 0
   717   00001A                     ___flge@ff1:
   718                           	callstack 0
   719   00001A                     ___flsub@b:
   720                           	callstack 0
   721   00001A                     floorf@x:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x19
   725   00001A                     	ds	2
   726   00001C                     dtoa@w:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x1B
   730   00001C                     	ds	2
   731   00001E                     ??_loadData16:
   732   00001E                     ??_floorf:
   733   00001E                     dtoa@p:
   734                           	callstack 0
   735   00001E                     ___flge@ff2:
   736                           	callstack 0
   737   00001E                     ___flsub@a:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x1D
   741   00001E                     	ds	2
   742   000020                     dtoa@s:
   743                           	callstack 0
   744   000020                     loadData16@floatValue:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x1F
   748   000020                     	ds	1
   749   000021                     dtoa@i:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x20
   753   000021                     	ds	1
   754   000022                     ??___flge:
   755                           
   756                           ; 1 bytes @ 0x21
   757   000022                     	ds	2
   758   000024                     loadData16@valFinale:
   759                           	callstack 0
   760   000024                     floorf@m:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x23
   764   000024                     	ds	4
   765   000028                     loadData16@addressLowValue:
   766                           	callstack 0
   767   000028                     floorf@e:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x27
   771   000028                     	ds	2
   772   00002A                     loadData16@addressHighValue:
   773                           	callstack 0
   774   00002A                     floorf@u:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x29
   778   00002A                     	ds	2
   779   00002C                     loadData16@val:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x2B
   783   00002C                     	ds	2
   784   00002E                     ?___fltol:
   785                           	callstack 0
   786   00002E                     ___fltol@f1:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x2D
   790   00002E                     	ds	4
   791   000032                     ??___fltol:
   792                           
   793                           ; 1 bytes @ 0x31
   794   000032                     	ds	4
   795   000036                     ___fltol@sign1:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x35
   799   000036                     	ds	1
   800   000037                     ___fltol@exp1:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x36
   804   000037                     	ds	1
   805   000038                     efgtoa@fp:
   806                           	callstack 0
   807   000038                     writeData16@floatData:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x37
   811   000038                     	ds	1
   812   000039                     efgtoa@f:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x38
   816   000039                     	ds	3
   817   00003C                     writeData16@address:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x3B
   821   00003C                     	ds	1
   822   00003D                     efgtoa@c:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x3C
   826   00003D                     	ds	1
   827   00003E                     ??_writeData16:
   828   00003E                     ??_efgtoa:
   829                           
   830                           ; 1 bytes @ 0x3D
   831   00003E                     	ds	2
   832   000040                     ??_vfpfcnvrt:
   833   000040                     writeData16@low:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x3F
   837   000040                     	ds	2
   838   000042                     writeData16@high:
   839                           	callstack 0
   840   000042                     vfpfcnvrt@convarg:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x41
   844   000042                     	ds	2
   845   000044                     writeData16@data:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x43
   849   000044                     	ds	2
   850   000046                     vfpfcnvrt@c:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x45
   854   000046                     	ds	1
   855   000047                     vfpfcnvrt@cp:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x46
   859   000047                     	ds	1
   860   000048                     vfprintf@cfmt:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x47
   864   000048                     	ds	1
   865   000049                     sprintf@ap:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x48
   869   000049                     	ds	1
   870   00004A                     sprintf@f:
   871                           	callstack 0
   872                           
   873                           ; 12 bytes @ 0x49
   874   00004A                     	ds	12
   875   000056                     ??_main:
   876                           
   877                           ; 1 bytes @ 0x55
   878   000056                     	ds	2
   879                           
   880 ;;
   881 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   882 ;;
   883 ;; *************** function _main *****************
   884 ;; Defined at:
   885 ;;		line 107 in file "SPI26K83.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  deletedData     4  124[BANK0 ] float 
   890 ;;  affiche16       4  120[BANK0 ] float 
   891 ;;  ligne1         64   56[BANK0 ] PTR unsigned char [32]
   892 ;;  valeurTest      4  132[BANK0 ] float 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         2      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:       82 bytes
   907 ;; Hardware stack levels required when called: 8
   908 ;; This function calls:
   909 ;;		_Lcd_Clear
   910 ;;		_Lcd_Init
   911 ;;		_Lcd_Set_Cursor
   912 ;;		_Lcd_Write_String
   913 ;;		___fladd
   914 ;;		___fltol
   915 ;;		___xxtofl
   916 ;;		_deleteAll
   917 ;;		_loadData16
   918 ;;		_sprintf
   919 ;;		_writeData16
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926   0026B4                     __ptext0:
   927                           	callstack 0
   928   0026B4                     _main:
   929                           	callstack 23
   930   0026B4                     
   931                           ;SPI26K83.c: 109:     char* ligne1[32];;SPI26K83.c: 111:     TRISA = 0b11000000;
   932   0026B4  0EC0               	movlw	192
   933   0026B6  6EC2               	movwf	194,c	;volatile
   934                           
   935                           ;SPI26K83.c: 112:     TRISB = 0;
   936   0026B8  0E00               	movlw	0
   937   0026BA  6EC3               	movwf	195,c	;volatile
   938                           
   939                           ;SPI26K83.c: 113:     TRISC = 0b10010011;
   940   0026BC  0E93               	movlw	147
   941   0026BE  6EC4               	movwf	196,c	;volatile
   942                           
   943                           ;SPI26K83.c: 116:     ANSELA = 0;
   944   0026C0  0E00               	movlw	0
   945   0026C2  013A               	movlb	58	; () banked
   946   0026C4  6F40               	movwf	64,b	;volatile
   947                           
   948                           ;SPI26K83.c: 117:     ANSELB = 0;
   949   0026C6  0E00               	movlw	0
   950   0026C8  6F50               	movwf	80,b	;volatile
   951                           
   952                           ;SPI26K83.c: 118:     ANSELC = 0;
   953   0026CA  0E00               	movlw	0
   954   0026CC  6F60               	movwf	96,b	;volatile
   955                           
   956                           ;SPI26K83.c: 119:     ODCONB = 0b00000110;
   957   0026CE  0E06               	movlw	6
   958   0026D0  6F52               	movwf	82,b	;volatile
   959                           
   960                           ;SPI26K83.c: 120:     PORTB = 0;
   961   0026D2  0E00               	movlw	0
   962   0026D4  6ECB               	movwf	203,c	;volatile
   963                           
   964                           ;SPI26K83.c: 121:     PORTC = 0;
   965   0026D6  0E00               	movlw	0
   966   0026D8  6ECC               	movwf	204,c	;volatile
   967   0026DA                     
   968                           ; BSR set to: 58
   969                           ;SPI26K83.c: 122:     PORTBbits.RB3 = 0;
   970   0026DA  96CB               	bcf	203,3,c	;volatile
   971                           
   972                           ;SPI26K83.c: 126:     U1RXPPS = 0b00010111;
   973   0026DC  0E17               	movlw	23
   974   0026DE  6FE7               	movwf	231,b	;volatile
   975                           
   976                           ;SPI26K83.c: 127:     RC6PPS = 0b00010011;
   977   0026E0  0E13               	movlw	19
   978   0026E2  6F16               	movwf	22,b	;volatile
   979                           
   980                           ;SPI26K83.c: 129:     I2C2SCLPPS = 0b00001001;
   981   0026E4  0E09               	movlw	9
   982   0026E6  6FE5               	movwf	229,b	;volatile
   983                           
   984                           ;SPI26K83.c: 130:     I2C2SDAPPS = 0b00001010;
   985   0026E8  0E0A               	movlw	10
   986   0026EA  6FE6               	movwf	230,b	;volatile
   987                           
   988                           ;SPI26K83.c: 131:     RB1PPS = 0b00100011;
   989   0026EC  0E23               	movlw	35
   990   0026EE  6F09               	movwf	9,b	;volatile
   991                           
   992                           ;SPI26K83.c: 132:     RB2PPS = 0b00100100;
   993   0026F0  0E24               	movlw	36
   994   0026F2  6F0A               	movwf	10,b	;volatile
   995                           
   996                           ;SPI26K83.c: 134:     SPI1SDIPPS = 0b00010100;
   997   0026F4  0E14               	movlw	20
   998   0026F6  6FE1               	movwf	225,b	;volatile
   999                           
  1000                           ;SPI26K83.c: 135:     RC5PPS = 0b00011111;
  1001   0026F8  0E1F               	movlw	31
  1002   0026FA  6F15               	movwf	21,b	;volatile
  1003                           
  1004                           ;SPI26K83.c: 136:     RC3PPS = 0b00011110;
  1005   0026FC  0E1E               	movlw	30
  1006   0026FE  6F13               	movwf	19,b	;volatile
  1007                           
  1008                           ;SPI26K83.c: 139:     U1CON0 = 0b10100000;
  1009   002700  0EA0               	movlw	160
  1010   002702  013D               	movlb	61	; () banked
  1011   002704  6FF2               	movwf	242,b	;volatile
  1012                           
  1013                           ;SPI26K83.c: 140:     U1CON1 = 0b10000000;
  1014   002706  0E80               	movlw	128
  1015   002708  6FF3               	movwf	243,b	;volatile
  1016                           
  1017                           ;SPI26K83.c: 141:     U1CON2 = 0;
  1018   00270A  0E00               	movlw	0
  1019   00270C  6FF4               	movwf	244,b	;volatile
  1020                           
  1021                           ;SPI26K83.c: 142:     U1BRG = 1666;
  1022   00270E  0E06               	movlw	6
  1023   002710  6FF6               	movwf	246,b	;volatile
  1024   002712  0E82               	movlw	130
  1025   002714  6FF5               	movwf	245,b	;volatile
  1026                           
  1027                           ;SPI26K83.c: 146:     I2C2CON0 = 0b10000100;
  1028   002716  0E84               	movlw	132
  1029   002718  6F5D               	movwf	93,b	;volatile
  1030                           
  1031                           ;SPI26K83.c: 147:     I2C2CLK = 0b00000000;
  1032   00271A  0E00               	movlw	0
  1033   00271C  6F65               	movwf	101,b	;volatile
  1034                           
  1035                           ;SPI26K83.c: 151:     SPI1CON0 = 0b00000010;
  1036   00271E  0E02               	movlw	2
  1037   002720  6F14               	movwf	20,b	;volatile
  1038                           
  1039                           ;SPI26K83.c: 152:     SPI1CON1 = 0b11000000;
  1040   002722  0EC0               	movlw	192
  1041   002724  6F15               	movwf	21,b	;volatile
  1042                           
  1043                           ;SPI26K83.c: 154:     SPI1TWIDTH = 0;
  1044   002726  0E00               	movlw	0
  1045   002728  6F18               	movwf	24,b	;volatile
  1046                           
  1047                           ;SPI26K83.c: 155:     SPI1TCNTL = 0;
  1048   00272A  0E00               	movlw	0
  1049   00272C  6F12               	movwf	18,b	;volatile
  1050                           
  1051                           ;SPI26K83.c: 156:     SPI1TCNTH = 0;
  1052   00272E  0E00               	movlw	0
  1053   002730  6F13               	movwf	19,b	;volatile
  1054                           
  1055                           ;SPI26K83.c: 158:     SPI1CLK = 0b00000010;
  1056   002732  0E02               	movlw	2
  1057   002734  6F1C               	movwf	28,b	;volatile
  1058                           
  1059                           ;SPI26K83.c: 159:     SPI1BAUD = 100;
  1060   002736  0E64               	movlw	100
  1061   002738  6F19               	movwf	25,b	;volatile
  1062   00273A                     
  1063                           ; BSR set to: 61
  1064                           ;SPI26K83.c: 162:     Lcd_Init();
  1065   00273A  EC64  F01D         	call	_Lcd_Init	;wreg free
  1066   00273E                     
  1067                           ;SPI26K83.c: 163:     Lcd_Clear();
  1068   00273E  EC0D  F020         	call	_Lcd_Clear	;wreg free
  1069   002742                     
  1070                           ;SPI26K83.c: 164:     PORTBbits.RB5 = 1;
  1071   002742  8ACB               	bsf	203,5,c	;volatile
  1072   002744                     
  1073                           ;SPI26K83.c: 165:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1074   002744  0E09               	movlw	9
  1075   002746  6E57               	movwf	(??_main+1)^0,c
  1076   002748  0E1E               	movlw	30
  1077   00274A  6E56               	movwf	??_main^0,c
  1078   00274C  0EE4               	movlw	228
  1079   00274E                     u5007:
  1080   00274E  2EE8               	decfsz	wreg,f,c
  1081   002750  D7FE               	bra	u5007
  1082   002752  2E56               	decfsz	??_main^0,f,c
  1083   002754  D7FC               	bra	u5007
  1084   002756  2E57               	decfsz	(??_main+1)^0,f,c
  1085   002758  D7FA               	bra	u5007
  1086   00275A  D000               	nop2	
  1087   00275C                     
  1088                           ;SPI26K83.c: 167:     SPI1CON0bits.EN = 1;
  1089   00275C  013D               	movlb	61	; () banked
  1090   00275E  8F14               	bsf	20,7,b	;volatile
  1091   002760                     
  1092                           ; BSR set to: 61
  1093                           ;SPI26K83.c: 170:     PORTBbits.RB3 = 1;
  1094   002760  86CB               	bsf	203,3,c	;volatile
  1095   002762                     
  1096                           ; BSR set to: 61
  1097                           ;SPI26K83.c: 171:     SPI1TWIDTH = 4;
  1098   002762  0E04               	movlw	4
  1099   002764  6F18               	movwf	24,b	;volatile
  1100   002766                     
  1101                           ; BSR set to: 61
  1102                           ;SPI26K83.c: 172:     SPI1TCNTL = 1;
  1103   002766  0E01               	movlw	1
  1104   002768  6F12               	movwf	18,b	;volatile
  1105   00276A                     
  1106                           ; BSR set to: 61
  1107                           ;SPI26K83.c: 173:     SPI1TCNTH = 0;
  1108   00276A  0E00               	movlw	0
  1109   00276C  6F13               	movwf	19,b	;volatile
  1110   00276E                     
  1111                           ; BSR set to: 61
  1112                           ;SPI26K83.c: 174:     SPI1CON2bits.TXR = 1;
  1113   00276E  8316               	bsf	22,1,b	;volatile
  1114   002770                     
  1115                           ; BSR set to: 61
  1116                           ;SPI26K83.c: 175:     SPI1TXB = 0b10011000;
  1117   002770  0E98               	movlw	152
  1118   002772  6F11               	movwf	17,b	;volatile
  1119   002774                     l138:
  1120                           
  1121                           ; BSR set to: 61
  1122   002774  AB17               	btfss	23,5,b	;volatile
  1123   002776  EFBF  F013         	goto	u4971
  1124   00277A  EFC1  F013         	goto	u4970
  1125   00277E                     u4971:
  1126   00277E  EFBA  F013         	goto	l138
  1127   002782                     u4970:
  1128   002782                     
  1129                           ; BSR set to: 61
  1130                           ;SPI26K83.c: 177:     SPI1TXB = 0b00001111;
  1131   002782  0E0F               	movlw	15
  1132   002784  6F11               	movwf	17,b	;volatile
  1133   002786                     l141:
  1134                           
  1135                           ; BSR set to: 61
  1136   002786  AB17               	btfss	23,5,b	;volatile
  1137   002788  EFC8  F013         	goto	u4981
  1138   00278C  EFCA  F013         	goto	u4980
  1139   002790                     u4981:
  1140   002790  EFC3  F013         	goto	l141
  1141   002794                     u4980:
  1142   002794                     
  1143                           ; BSR set to: 61
  1144                           ;SPI26K83.c: 179:     SPI1CON2bits.TXR = 0;
  1145   002794  9316               	bcf	22,1,b	;volatile
  1146                           
  1147                           ;SPI26K83.c: 180:     PORTBbits.RB3 = 0;
  1148   002796  96CB               	bcf	203,3,c	;volatile
  1149                           
  1150                           ;SPI26K83.c: 181:     SPI1CON0bits.EN = 0;
  1151   002798  9F14               	bcf	20,7,b	;volatile
  1152   00279A                     
  1153                           ; BSR set to: 61
  1154                           ;SPI26K83.c: 183:     float valeurTest = 18.62;
  1155   00279A  0EC3               	movlw	195
  1156   00279C  0100               	movlb	0	; () banked
  1157   00279E  6FE4               	movwf	main@valeurTest& (0+255),b
  1158   0027A0  0EF5               	movlw	245
  1159   0027A2  6FE5               	movwf	(main@valeurTest+1)& (0+255),b
  1160   0027A4  0E94               	movlw	148
  1161   0027A6  6FE6               	movwf	(main@valeurTest+2)& (0+255),b
  1162   0027A8  0E41               	movlw	65
  1163   0027AA  6FE7               	movwf	(main@valeurTest+3)& (0+255),b
  1164   0027AC                     l4611:
  1165                           
  1166                           ;SPI26K83.c: 185:     {;SPI26K83.c: 186:         _delay((unsigned long)((100)*(64000000/
      +                          4000.0)));
  1167   0027AC  0E09               	movlw	9
  1168   0027AE  6E57               	movwf	(??_main+1)^0,c
  1169   0027B0  0E1E               	movlw	30
  1170   0027B2  6E56               	movwf	??_main^0,c
  1171   0027B4  0EE4               	movlw	228
  1172   0027B6                     u5017:
  1173   0027B6  2EE8               	decfsz	wreg,f,c
  1174   0027B8  D7FE               	bra	u5017
  1175   0027BA  2E56               	decfsz	??_main^0,f,c
  1176   0027BC  D7FC               	bra	u5017
  1177   0027BE  2E57               	decfsz	(??_main+1)^0,f,c
  1178   0027C0  D7FA               	bra	u5017
  1179   0027C2  D000               	nop2	
  1180   0027C4                     
  1181                           ;SPI26K83.c: 188:         U1CON0bits.RXEN = 1;
  1182   0027C4  013D               	movlb	61	; () banked
  1183   0027C6  89F2               	bsf	242,4,b	;volatile
  1184   0027C8                     
  1185                           ; BSR set to: 61
  1186                           ;SPI26K83.c: 189:         if (U1FIFObits.RXBE == 0)
  1187   0027C8  B3F7               	btfsc	247,1,b	;volatile
  1188   0027CA  EFE9  F013         	goto	u4991
  1189   0027CE  EFEB  F013         	goto	u4990
  1190   0027D2                     u4991:
  1191   0027D2  EFD6  F013         	goto	l4611
  1192   0027D6                     u4990:
  1193   0027D6                     
  1194                           ; BSR set to: 61
  1195                           ;SPI26K83.c: 190:         {;SPI26K83.c: 192:             valeurTest++;
  1196   0027D6  C0E4  F001         	movff	main@valeurTest,___fladd@b
  1197   0027DA  C0E5  F002         	movff	main@valeurTest+1,___fladd@b+1
  1198   0027DE  C0E6  F003         	movff	main@valeurTest+2,___fladd@b+2
  1199   0027E2  C0E7  F004         	movff	main@valeurTest+3,___fladd@b+3
  1200   0027E6  0E00               	movlw	0
  1201   0027E8  6E05               	movwf	___fladd@a^0,c
  1202   0027EA  0E00               	movlw	0
  1203   0027EC  6E06               	movwf	(___fladd@a+1)^0,c
  1204   0027EE  0E80               	movlw	128
  1205   0027F0  6E07               	movwf	(___fladd@a+2)^0,c
  1206   0027F2  0E3F               	movlw	63
  1207   0027F4  6E08               	movwf	(___fladd@a+3)^0,c
  1208   0027F6  EC06  F00D         	call	___fladd	;wreg free
  1209   0027FA  C001  F0E4         	movff	?___fladd,main@valeurTest
  1210   0027FE  C002  F0E5         	movff	?___fladd+1,main@valeurTest+1
  1211   002802  C003  F0E6         	movff	?___fladd+2,main@valeurTest+2
  1212   002806  C004  F0E7         	movff	?___fladd+3,main@valeurTest+3
  1213   00280A                     
  1214                           ;SPI26K83.c: 194:             writeData16(valeurTest,1);
  1215   00280A  C0E4  F038         	movff	main@valeurTest,writeData16@floatData
  1216   00280E  C0E5  F039         	movff	main@valeurTest+1,writeData16@floatData+1
  1217   002812  C0E6  F03A         	movff	main@valeurTest+2,writeData16@floatData+2
  1218   002816  C0E7  F03B         	movff	main@valeurTest+3,writeData16@floatData+3
  1219   00281A  0E00               	movlw	0
  1220   00281C  6E3D               	movwf	(writeData16@address+1)^0,c
  1221   00281E  0E01               	movlw	1
  1222   002820  6E3C               	movwf	writeData16@address^0,c
  1223   002822  EC14  F01D         	call	_writeData16	;wreg free
  1224   002826                     
  1225                           ;SPI26K83.c: 195:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1226   002826  0E09               	movlw	9
  1227   002828  6E57               	movwf	(??_main+1)^0,c
  1228   00282A  0E1E               	movlw	30
  1229   00282C  6E56               	movwf	??_main^0,c
  1230   00282E  0EE4               	movlw	228
  1231   002830                     u5027:
  1232   002830  2EE8               	decfsz	wreg,f,c
  1233   002832  D7FE               	bra	u5027
  1234   002834  2E56               	decfsz	??_main^0,f,c
  1235   002836  D7FC               	bra	u5027
  1236   002838  2E57               	decfsz	(??_main+1)^0,f,c
  1237   00283A  D7FA               	bra	u5027
  1238   00283C  D000               	nop2	
  1239   00283E                     
  1240                           ;SPI26K83.c: 196:             float affiche16 = loadData16(1);
  1241   00283E  0E00               	movlw	0
  1242   002840  6E1B               	movwf	(loadData16@address+1)^0,c
  1243   002842  0E01               	movlw	1
  1244   002844  6E1A               	movwf	loadData16@address^0,c
  1245   002846  EC69  F01C         	call	_loadData16	;wreg free
  1246   00284A  C01A  F0D8         	movff	?_loadData16,main@affiche16
  1247   00284E  C01B  F0D9         	movff	?_loadData16+1,main@affiche16+1
  1248   002852  C01C  F0DA         	movff	?_loadData16+2,main@affiche16+2
  1249   002856  C01D  F0DB         	movff	?_loadData16+3,main@affiche16+3
  1250   00285A                     
  1251                           ;SPI26K83.c: 197:             Lcd_Clear();
  1252   00285A  EC0D  F020         	call	_Lcd_Clear	;wreg free
  1253   00285E                     
  1254                           ;SPI26K83.c: 198:             sprintf(ligne1,"val= %.2f", affiche16);
  1255   00285E  0E98               	movlw	low main@ligne1
  1256   002860  0100               	movlb	0	; () banked
  1257   002862  6F92               	movwf	sprintf@s& (0+255),b
  1258   002864  0E0C               	movlw	low STR_1
  1259   002866  6F93               	movwf	sprintf@fmt& (0+255),b
  1260   002868  C0D8  F094         	movff	main@affiche16,?_sprintf+2
  1261   00286C  C0D9  F095         	movff	main@affiche16+1,?_sprintf+3
  1262   002870  C0DA  F096         	movff	main@affiche16+2,?_sprintf+4
  1263   002874  C0DB  F097         	movff	main@affiche16+3,?_sprintf+5
  1264   002878  EC47  F01F         	call	_sprintf	;wreg free
  1265   00287C                     
  1266                           ;SPI26K83.c: 199:             Lcd_Set_Cursor(1,1);
  1267   00287C  0E01               	movlw	1
  1268   00287E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1269   002880  0E01               	movlw	1
  1270   002882  EC08  F01E         	call	_Lcd_Set_Cursor
  1271   002886                     
  1272                           ;SPI26K83.c: 200:             Lcd_Write_String(ligne1);
  1273   002886  0E98               	movlw	low main@ligne1
  1274   002888  6E05               	movwf	Lcd_Write_String@a^0,c
  1275   00288A  EC7F  F01F         	call	_Lcd_Write_String	;wreg free
  1276   00288E                     
  1277                           ;SPI26K83.c: 201:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1278   00288E  0E52               	movlw	82
  1279   002890  6E57               	movwf	(??_main+1)^0,c
  1280   002892  0E2B               	movlw	43
  1281   002894  6E56               	movwf	??_main^0,c
  1282   002896  0E00               	movlw	0
  1283   002898                     u5037:
  1284   002898  2EE8               	decfsz	wreg,f,c
  1285   00289A  D7FE               	bra	u5037
  1286   00289C  2E56               	decfsz	??_main^0,f,c
  1287   00289E  D7FC               	bra	u5037
  1288   0028A0  2E57               	decfsz	(??_main+1)^0,f,c
  1289   0028A2  D7FA               	bra	u5037
  1290   0028A4  D000               	nop2	
  1291   0028A6                     
  1292                           ;SPI26K83.c: 202:             deleteAll();
  1293   0028A6  ECD5  F01D         	call	_deleteAll	;wreg free
  1294   0028AA                     
  1295                           ;SPI26K83.c: 203:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1296   0028AA  0E09               	movlw	9
  1297   0028AC  6E57               	movwf	(??_main+1)^0,c
  1298   0028AE  0E1E               	movlw	30
  1299   0028B0  6E56               	movwf	??_main^0,c
  1300   0028B2  0EE4               	movlw	228
  1301   0028B4                     u5047:
  1302   0028B4  2EE8               	decfsz	wreg,f,c
  1303   0028B6  D7FE               	bra	u5047
  1304   0028B8  2E56               	decfsz	??_main^0,f,c
  1305   0028BA  D7FC               	bra	u5047
  1306   0028BC  2E57               	decfsz	(??_main+1)^0,f,c
  1307   0028BE  D7FA               	bra	u5047
  1308   0028C0  D000               	nop2	
  1309   0028C2                     
  1310                           ;SPI26K83.c: 204:             float deletedData = (int) loadData16(1);
  1311   0028C2  0E00               	movlw	0
  1312   0028C4  6E1B               	movwf	(loadData16@address+1)^0,c
  1313   0028C6  0E01               	movlw	1
  1314   0028C8  6E1A               	movwf	loadData16@address^0,c
  1315   0028CA  EC69  F01C         	call	_loadData16	;wreg free
  1316   0028CE  C01A  F02E         	movff	?_loadData16,___fltol@f1
  1317   0028D2  C01B  F02F         	movff	?_loadData16+1,___fltol@f1+1
  1318   0028D6  C01C  F030         	movff	?_loadData16+2,___fltol@f1+2
  1319   0028DA  C01D  F031         	movff	?_loadData16+3,___fltol@f1+3
  1320   0028DE  ECB5  F018         	call	___fltol	;wreg free
  1321   0028E2  C02E  F0E0         	movff	?___fltol,_main$1406
  1322   0028E6  C02F  F0E1         	movff	?___fltol+1,_main$1406+1
  1323   0028EA  0100               	movlb	0	; () banked
  1324   0028EC  0E00               	movlw	0
  1325   0028EE  BFE1               	btfsc	(_main$1406+1)& (0+255),7,b
  1326   0028F0  0EFF               	movlw	-1
  1327   0028F2  6FE2               	movwf	(_main$1406+2)& (0+255),b
  1328   0028F4  6FE3               	movwf	(_main$1406+3)& (0+255),b
  1329   0028F6                     
  1330                           ; BSR set to: 0
  1331                           ;SPI26K83.c: 204:             float deletedData = (int) loadData16(1);
  1332   0028F6  C0E0  F001         	movff	_main$1406,___xxtofl@val
  1333   0028FA  C0E1  F002         	movff	_main$1406+1,___xxtofl@val+1
  1334   0028FE  C0E2  F003         	movff	_main$1406+2,___xxtofl@val+2
  1335   002902  C0E3  F004         	movff	_main$1406+3,___xxtofl@val+3
  1336   002906  0E01               	movlw	1
  1337   002908  EC1E  F017         	call	___xxtofl
  1338   00290C  C001  F0DC         	movff	?___xxtofl,main@deletedData
  1339   002910  C002  F0DD         	movff	?___xxtofl+1,main@deletedData+1
  1340   002914  C003  F0DE         	movff	?___xxtofl+2,main@deletedData+2
  1341   002918  C004  F0DF         	movff	?___xxtofl+3,main@deletedData+3
  1342   00291C                     
  1343                           ;SPI26K83.c: 205:             Lcd_Clear();
  1344   00291C  EC0D  F020         	call	_Lcd_Clear	;wreg free
  1345   002920                     
  1346                           ;SPI26K83.c: 206:             sprintf(ligne1,"delete= %d", deletedData);
  1347   002920  0E98               	movlw	low main@ligne1
  1348   002922  0100               	movlb	0	; () banked
  1349   002924  6F92               	movwf	sprintf@s& (0+255),b
  1350   002926  0E01               	movlw	low STR_2
  1351   002928  6F93               	movwf	sprintf@fmt& (0+255),b
  1352   00292A  C0DC  F094         	movff	main@deletedData,?_sprintf+2
  1353   00292E  C0DD  F095         	movff	main@deletedData+1,?_sprintf+3
  1354   002932  C0DE  F096         	movff	main@deletedData+2,?_sprintf+4
  1355   002936  C0DF  F097         	movff	main@deletedData+3,?_sprintf+5
  1356   00293A  EC47  F01F         	call	_sprintf	;wreg free
  1357   00293E                     
  1358                           ;SPI26K83.c: 207:             Lcd_Set_Cursor(1,1);
  1359   00293E  0E01               	movlw	1
  1360   002940  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1361   002942  0E01               	movlw	1
  1362   002944  EC08  F01E         	call	_Lcd_Set_Cursor
  1363   002948                     
  1364                           ;SPI26K83.c: 208:             Lcd_Write_String(ligne1);
  1365   002948  0E98               	movlw	low main@ligne1
  1366   00294A  6E05               	movwf	Lcd_Write_String@a^0,c
  1367   00294C  EC7F  F01F         	call	_Lcd_Write_String	;wreg free
  1368   002950                     
  1369                           ;SPI26K83.c: 210:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1370   002950  0E52               	movlw	82
  1371   002952  6E57               	movwf	(??_main+1)^0,c
  1372   002954  0E2B               	movlw	43
  1373   002956  6E56               	movwf	??_main^0,c
  1374   002958  0E00               	movlw	0
  1375   00295A                     u5057:
  1376   00295A  2EE8               	decfsz	wreg,f,c
  1377   00295C  D7FE               	bra	u5057
  1378   00295E  2E56               	decfsz	??_main^0,f,c
  1379   002960  D7FC               	bra	u5057
  1380   002962  2E57               	decfsz	(??_main+1)^0,f,c
  1381   002964  D7FA               	bra	u5057
  1382   002966  D000               	nop2	
  1383   002968                     
  1384                           ;SPI26K83.c: 211:             U1CON0bits.RXEN = 0;
  1385   002968  013D               	movlb	61	; () banked
  1386   00296A  99F2               	bcf	242,4,b	;volatile
  1387   00296C  EFD6  F013         	goto	l4611
  1388   002970  EFFE  F07F         	goto	start
  1389   002974                     __end_of_main:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _writeData16 *****************
  1393 ;; Defined at:
  1394 ;;		line 237 in file "SPI26K83.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  floatData       4   55[COMRAM] float 
  1397 ;;  address         2   59[COMRAM] int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  data            2   67[COMRAM] int 
  1400 ;;  high            2   65[COMRAM] int 
  1401 ;;  low             2   63[COMRAM] int 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:       14 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 1
  1418 ;; This function calls:
  1419 ;;		___flmul
  1420 ;;		___fltol
  1421 ;;		_writeData
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text1
  1428   003A28                     __ptext1:
  1429                           	callstack 0
  1430   003A28                     _writeData16:
  1431                           	callstack 29
  1432   003A28                     
  1433                           ;SPI26K83.c: 238:     int data = floatData * 100;
  1434   003A28  0E00               	movlw	0
  1435   003A2A  6E05               	movwf	___flmul@a^0,c
  1436   003A2C  0E00               	movlw	0
  1437   003A2E  6E06               	movwf	(___flmul@a+1)^0,c
  1438   003A30  0EC8               	movlw	200
  1439   003A32  6E07               	movwf	(___flmul@a+2)^0,c
  1440   003A34  0E42               	movlw	66
  1441   003A36  6E08               	movwf	(___flmul@a+3)^0,c
  1442   003A38  C038  F001         	movff	writeData16@floatData,___flmul@b
  1443   003A3C  C039  F002         	movff	writeData16@floatData+1,___flmul@b+1
  1444   003A40  C03A  F003         	movff	writeData16@floatData+2,___flmul@b+2
  1445   003A44  C03B  F004         	movff	writeData16@floatData+3,___flmul@b+3
  1446   003A48  EC66  F00F         	call	___flmul	;wreg free
  1447   003A4C  C001  F02E         	movff	?___flmul,___fltol@f1
  1448   003A50  C002  F02F         	movff	?___flmul+1,___fltol@f1+1
  1449   003A54  C003  F030         	movff	?___flmul+2,___fltol@f1+2
  1450   003A58  C004  F031         	movff	?___flmul+3,___fltol@f1+3
  1451   003A5C  ECB5  F018         	call	___fltol	;wreg free
  1452   003A60  C02E  F044         	movff	?___fltol,writeData16@data
  1453   003A64  C02F  F045         	movff	?___fltol+1,writeData16@data+1
  1454   003A68                     
  1455                           ;SPI26K83.c: 239:     int low = data& 0XFF;
  1456   003A68  5044               	movf	writeData16@data^0,w,c
  1457   003A6A  6E40               	movwf	writeData16@low^0,c
  1458   003A6C  6A41               	clrf	(writeData16@low+1)^0,c
  1459   003A6E                     
  1460                           ;SPI26K83.c: 240:     writeData(low, address);
  1461   003A6E  C040  F001         	movff	writeData16@low,writeData@data
  1462   003A72  C041  F002         	movff	writeData16@low+1,writeData@data+1
  1463   003A76  C03C  F003         	movff	writeData16@address,writeData@address
  1464   003A7A  C03D  F004         	movff	writeData16@address+1,writeData@address+1
  1465   003A7E  EC05  F01B         	call	_writeData	;wreg free
  1466                           
  1467                           ;SPI26K83.c: 241:     int high = (data >> 8) & 0xFF;
  1468   003A82  C045  F03E         	movff	writeData16@data+1,??_writeData16
  1469   003A86  6A3F               	clrf	(??_writeData16+1)^0,c
  1470   003A88  BE3E               	btfsc	??_writeData16^0,7,c
  1471   003A8A  683F               	setf	(??_writeData16+1)^0,c
  1472   003A8C  503E               	movf	??_writeData16^0,w,c
  1473   003A8E  6E42               	movwf	writeData16@high^0,c
  1474   003A90  6A43               	clrf	(writeData16@high+1)^0,c
  1475   003A92                     
  1476                           ;SPI26K83.c: 242:     address += 1;
  1477   003A92  4A3C               	infsnz	writeData16@address^0,f,c
  1478   003A94  2A3D               	incf	(writeData16@address+1)^0,f,c
  1479   003A96                     
  1480                           ;SPI26K83.c: 243:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1481   003A96  0ED0               	movlw	208
  1482   003A98  6E3E               	movwf	??_writeData16^0,c
  1483   003A9A  0ECA               	movlw	202
  1484   003A9C                     u5067:
  1485   003A9C  2EE8               	decfsz	wreg,f,c
  1486   003A9E  D7FE               	bra	u5067
  1487   003AA0  2E3E               	decfsz	??_writeData16^0,f,c
  1488   003AA2  D7FC               	bra	u5067
  1489   003AA4                     
  1490                           ;SPI26K83.c: 244:     writeData(high, address);
  1491   003AA4  C042  F001         	movff	writeData16@high,writeData@data
  1492   003AA8  C043  F002         	movff	writeData16@high+1,writeData@data+1
  1493   003AAC  C03C  F003         	movff	writeData16@address,writeData@address
  1494   003AB0  C03D  F004         	movff	writeData16@address+1,writeData@address+1
  1495   003AB4  EC05  F01B         	call	_writeData	;wreg free
  1496   003AB8                     
  1497                           ;SPI26K83.c: 245:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1498   003AB8  0ED0               	movlw	208
  1499   003ABA  6E3E               	movwf	??_writeData16^0,c
  1500   003ABC  0ECA               	movlw	202
  1501   003ABE                     u5077:
  1502   003ABE  2EE8               	decfsz	wreg,f,c
  1503   003AC0  D7FE               	bra	u5077
  1504   003AC2  2E3E               	decfsz	??_writeData16^0,f,c
  1505   003AC4  D7FC               	bra	u5077
  1506   003AC6  0012               	return		;funcret
  1507   003AC8                     __end_of_writeData16:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _writeData *****************
  1511 ;; Defined at:
  1512 ;;		line 218 in file "SPI26K83.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  data            2    0[COMRAM] int 
  1515 ;;  address         2    2[COMRAM] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, prodl, prodh
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;Total ram usage:        7 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_writeData16
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text2
  1541   00360A                     __ptext2:
  1542                           	callstack 0
  1543   00360A                     _writeData:
  1544                           	callstack 29
  1545   00360A                     
  1546                           ;SPI26K83.c: 219:     PORTBbits.RB3 = 1;
  1547   00360A  86CB               	bsf	203,3,c	;volatile
  1548   00360C                     
  1549                           ;SPI26K83.c: 220:     SPI1TWIDTH = 4;
  1550   00360C  0E04               	movlw	4
  1551   00360E  013D               	movlb	61	; () banked
  1552   003610  6F18               	movwf	24,b	;volatile
  1553                           
  1554                           ;SPI26K83.c: 221:     SPI1TCNTL = 2;
  1555   003612  0E02               	movlw	2
  1556   003614  6F12               	movwf	18,b	;volatile
  1557                           
  1558                           ;SPI26K83.c: 222:     SPI1TCNTH = 0;
  1559   003616  0E00               	movlw	0
  1560   003618  6F13               	movwf	19,b	;volatile
  1561   00361A                     
  1562                           ; BSR set to: 61
  1563                           ;SPI26K83.c: 223:     SPI1CON2bits.TXR = 1;
  1564   00361A  8316               	bsf	22,1,b	;volatile
  1565   00361C                     
  1566                           ; BSR set to: 61
  1567                           ;SPI26K83.c: 224:     SPI1CON0bits.EN = 1;
  1568   00361C  8F14               	bsf	20,7,b	;volatile
  1569   00361E                     
  1570                           ; BSR set to: 61
  1571                           ;SPI26K83.c: 225:     SPI1TXB = 0b10100000 + (address >> 4);
  1572   00361E  C003  F005         	movff	writeData@address,??_writeData
  1573   003622  C004  F006         	movff	writeData@address+1,??_writeData+1
  1574   003626  0E04               	movlw	4
  1575   003628  6E07               	movwf	(??_writeData+2)^0,c
  1576   00362A                     u4125:
  1577   00362A  3406               	rlcf	(??_writeData+1)^0,w,c
  1578   00362C  3206               	rrcf	(??_writeData+1)^0,f,c
  1579   00362E  3205               	rrcf	??_writeData^0,f,c
  1580   003630  2E07               	decfsz	(??_writeData+2)^0,f,c
  1581   003632  EF15  F01B         	goto	u4125
  1582   003636  5005               	movf	??_writeData^0,w,c
  1583   003638  0FA0               	addlw	160
  1584   00363A  6F11               	movwf	17,b	;volatile
  1585   00363C                     l151:
  1586                           
  1587                           ; BSR set to: 61
  1588   00363C  AB17               	btfss	23,5,b	;volatile
  1589   00363E  EF23  F01B         	goto	u4131
  1590   003642  EF25  F01B         	goto	u4130
  1591   003646                     u4131:
  1592   003646  EF1E  F01B         	goto	l151
  1593   00364A                     u4130:
  1594   00364A                     
  1595                           ; BSR set to: 61
  1596                           ;SPI26K83.c: 227:     SPI1TXB = 0b00000000 + (address << 4) + (data >> 4);
  1597   00364A  C001  F005         	movff	writeData@data,??_writeData
  1598   00364E  C002  F006         	movff	writeData@data+1,??_writeData+1
  1599   003652  0E04               	movlw	4
  1600   003654  6E07               	movwf	(??_writeData+2)^0,c
  1601   003656                     u4145:
  1602   003656  3406               	rlcf	(??_writeData+1)^0,w,c
  1603   003658  3206               	rrcf	(??_writeData+1)^0,f,c
  1604   00365A  3205               	rrcf	??_writeData^0,f,c
  1605   00365C  2E07               	decfsz	(??_writeData+2)^0,f,c
  1606   00365E  EF2B  F01B         	goto	u4145
  1607   003662  5003               	movf	writeData@address^0,w,c
  1608   003664  0D10               	mullw	16
  1609   003666  50F3               	movf	243,w,c
  1610   003668  2405               	addwf	??_writeData^0,w,c
  1611   00366A  6F11               	movwf	17,b	;volatile
  1612   00366C                     l154:
  1613                           
  1614                           ; BSR set to: 61
  1615   00366C  AB17               	btfss	23,5,b	;volatile
  1616   00366E  EF3B  F01B         	goto	u4151
  1617   003672  EF3D  F01B         	goto	u4150
  1618   003676                     u4151:
  1619   003676  EF36  F01B         	goto	l154
  1620   00367A                     u4150:
  1621   00367A                     
  1622                           ; BSR set to: 61
  1623                           ;SPI26K83.c: 229:     SPI1TXB = 0b00000000 + (data << 4) + 0000;
  1624   00367A  3801               	swapf	writeData@data^0,w,c
  1625   00367C  0BF0               	andlw	240
  1626   00367E  6F11               	movwf	17,b	;volatile
  1627   003680                     l157:
  1628                           
  1629                           ; BSR set to: 61
  1630   003680  AB17               	btfss	23,5,b	;volatile
  1631   003682  EF45  F01B         	goto	u4161
  1632   003686  EF47  F01B         	goto	u4160
  1633   00368A                     u4161:
  1634   00368A  EF40  F01B         	goto	l157
  1635   00368E                     u4160:
  1636   00368E                     
  1637                           ; BSR set to: 61
  1638                           ;SPI26K83.c: 231:     PORTBbits.RB5 = !PORTBbits.RB5;
  1639   00368E  AACB               	btfss	203,5,c	;volatile
  1640   003690  EF4C  F01B         	goto	u4171
  1641   003694  EF50  F01B         	goto	u4170
  1642   003698                     u4171:
  1643   003698  6A05               	clrf	??_writeData^0,c
  1644   00369A  2A05               	incf	??_writeData^0,f,c
  1645   00369C  EF51  F01B         	goto	u4188
  1646   0036A0                     u4170:
  1647   0036A0  6A05               	clrf	??_writeData^0,c
  1648   0036A2                     u4188:
  1649   0036A2  3A05               	swapf	??_writeData^0,f,c
  1650   0036A4  4605               	rlncf	??_writeData^0,f,c
  1651   0036A6  50CB               	movf	203,w,c	;volatile
  1652   0036A8  1805               	xorwf	??_writeData^0,w,c
  1653   0036AA  0BDF               	andlw	-33
  1654   0036AC  1805               	xorwf	??_writeData^0,w,c
  1655   0036AE  6ECB               	movwf	203,c	;volatile
  1656   0036B0                     
  1657                           ;SPI26K83.c: 232:     SPI1CON2bits.TXR = 0;
  1658   0036B0  013D               	movlb	61	; () banked
  1659   0036B2  9316               	bcf	22,1,b	;volatile
  1660   0036B4                     
  1661                           ; BSR set to: 61
  1662                           ;SPI26K83.c: 233:     PORTBbits.RB3 = 0;
  1663   0036B4  96CB               	bcf	203,3,c	;volatile
  1664   0036B6                     
  1665                           ; BSR set to: 61
  1666                           ;SPI26K83.c: 234:     SPI1CON0bits.EN = 0;
  1667   0036B6  9F14               	bcf	20,7,b	;volatile
  1668   0036B8                     
  1669                           ; BSR set to: 61
  1670                           ;SPI26K83.c: 235:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1671   0036B8  0ED0               	movlw	208
  1672   0036BA  6E05               	movwf	??_writeData^0,c
  1673   0036BC  0ECA               	movlw	202
  1674   0036BE                     u5087:
  1675   0036BE  2EE8               	decfsz	wreg,f,c
  1676   0036C0  D7FE               	bra	u5087
  1677   0036C2  2E05               	decfsz	??_writeData^0,f,c
  1678   0036C4  D7FC               	bra	u5087
  1679   0036C6  0012               	return		;funcret
  1680   0036C8                     __end_of_writeData:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _sprintf *****************
  1684 ;; Defined at:
  1685 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  s               1   50[BANK0 ] PTR unsigned char 
  1688 ;;		 -> main@ligne1(64), 
  1689 ;;  fmt             1   51[BANK0 ] PTR const unsigned char 
  1690 ;;		 -> STR_2(11), STR_1(10), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  f              12   73[COMRAM] struct _IO_FILE
  1693 ;;  ret             2    0        int 
  1694 ;;  ap              1   72[COMRAM] PTR void [1]
  1695 ;;		 -> ?_sprintf(2), 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2   50[BANK0 ] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1705 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Totals:        13       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;Total ram usage:       19 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 7
  1712 ;; This function calls:
  1713 ;;		_vfprintf
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text3
  1720   003E8E                     __ptext3:
  1721                           	callstack 0
  1722   003E8E                     _sprintf:
  1723                           	callstack 23
  1724   003E8E  0E94               	movlw	low (?_sprintf+2)
  1725   003E90  6E49               	movwf	sprintf@ap^0,c
  1726   003E92  C092  F04A         	movff	sprintf@s,sprintf@f
  1727   003E96  0E00               	movlw	0
  1728   003E98  6E4E               	movwf	(sprintf@f+4)^0,c
  1729   003E9A  0E00               	movlw	0
  1730   003E9C  6E4D               	movwf	(sprintf@f+3)^0,c
  1731   003E9E  0E00               	movlw	0
  1732   003EA0  6E55               	movwf	(sprintf@f+11)^0,c
  1733   003EA2  0E00               	movlw	0
  1734   003EA4  6E54               	movwf	(sprintf@f+10)^0,c
  1735   003EA6  0E4A               	movlw	low sprintf@f
  1736   003EA8  0100               	movlb	0	; () banked
  1737   003EAA  6F8F               	movwf	vfprintf@fp& (0+255),b
  1738   003EAC  C093  F090         	movff	sprintf@fmt,vfprintf@fmt
  1739   003EB0  0E49               	movlw	low sprintf@ap
  1740   003EB2  6F91               	movwf	vfprintf@ap& (0+255),b
  1741   003EB4  ECE4  F01E         	call	_vfprintf	;wreg free
  1742   003EB8  0100               	movlb	0	; () banked
  1743   003EBA  5192               	movf	sprintf@s& (0+255),w,b
  1744   003EBC  244D               	addwf	(sprintf@f+3)^0,w,c
  1745   003EBE  6ED9               	movwf	fsr2l,c
  1746   003EC0  6ADA               	clrf	fsr2h,c
  1747   003EC2  6ADF               	clrf	indf2,c
  1748   003EC4                     
  1749                           ; BSR set to: 0
  1750   003EC4  0012               	return		;funcret
  1751   003EC6                     __end_of_sprintf:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _vfprintf *****************
  1755 ;; Defined at:
  1756 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  1759 ;;		 -> sprintf@f(12), 
  1760 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1761 ;;		 -> STR_2(11), STR_1(10), 
  1762 ;;  ap              1   49[BANK0 ] PTR PTR void 
  1763 ;;		 -> sprintf@ap(1), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  cfmt            1   71[COMRAM] PTR unsigned char 
  1766 ;;		 -> STR_2(11), STR_1(10), 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   47[BANK0 ] int 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 6
  1783 ;; This function calls:
  1784 ;;		_vfpfcnvrt
  1785 ;; This function is called by:
  1786 ;;		_sprintf
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text4
  1791   003DC8                     __ptext4:
  1792                           	callstack 0
  1793   003DC8                     _vfprintf:
  1794                           	callstack 23
  1795   003DC8                     
  1796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1797   003DC8  C090  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1800   003DCC  EFF1  F01E         	goto	l4563
  1801   003DD0                     l4561:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1804   003DD0  C08F  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1805   003DD4  0E48               	movlw	low vfprintf@cfmt
  1806   003DD6  0100               	movlb	0	; () banked
  1807   003DD8  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  1808   003DDA  C091  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1809   003DDE  ECBA  F014         	call	_vfpfcnvrt	;wreg free
  1810   003DE2                     l4563:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1813   003DE2  0060  F123  FFF6   	movff	vfprintf@cfmt,tblptrl
  1814   003DE8                     	if	1	;There is more than 1 active tblptr byte
  1815   003DE8  0E10               	movlw	high __smallconst
  1816   003DEA  6EF7               	movwf	tblptrh,c
  1817   003DEC                     	endif
  1818   003DEC                     	if	0	;tblptru may be non-zero
  1819   003DEC                     	endif
  1820   003DEC                     	if	0	;tblptru may be non-zero
  1821   003DEC                     	endif
  1822   003DEC  0008               	tblrd		*
  1823   003DEE  50F5               	movf	tablat,w,c
  1824   003DF0  0900               	iorlw	0
  1825   003DF2  A4D8               	btfss	status,2,c
  1826   003DF4  EFFE  F01E         	goto	u4961
  1827   003DF8  EF00  F01F         	goto	u4960
  1828   003DFC                     u4961:
  1829   003DFC  EFE8  F01E         	goto	l4561
  1830   003E00                     u4960:
  1831   003E00                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1833   003E00  0E00               	movlw	0
  1834   003E02  0100               	movlb	0	; () banked
  1835   003E04  6F90               	movwf	(?_vfprintf+1)& (0+255),b
  1836   003E06  0E00               	movlw	0
  1837   003E08  6F8F               	movwf	?_vfprintf& (0+255),b
  1838   003E0A                     
  1839                           ; BSR set to: 0
  1840   003E0A  0012               	return		;funcret
  1841   003E0C                     __end_of_vfprintf:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _vfpfcnvrt *****************
  1845 ;; Defined at:
  1846 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1849 ;;		 -> sprintf@f(12), 
  1850 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  1851 ;;		 -> vfprintf@cfmt(1), 
  1852 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1853 ;;		 -> sprintf@ap(1), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  convarg         4   65[COMRAM] struct .
  1856 ;;  cp              1   70[COMRAM] PTR unsigned char 
  1857 ;;		 -> STR_2(11), STR_1(10), 
  1858 ;;  c               1   69[COMRAM] unsigned char 
  1859 ;;  done            1    0        _Bool 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1869 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;Total ram usage:       11 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 5
  1876 ;; This function calls:
  1877 ;;		_dtoa
  1878 ;;		_efgtoa
  1879 ;;		_fputc
  1880 ;;		_read_prec_or_width
  1881 ;; This function is called by:
  1882 ;;		_vfprintf
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text5
  1887   002974                     __ptext5:
  1888                           	callstack 0
  1889   002974                     _vfpfcnvrt:
  1890                           	callstack 23
  1891   002974                     
  1892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1893   002974  0100               	movlb	0	; () banked
  1894   002976  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1895   002978  6ED9               	movwf	fsr2l,c
  1896   00297A  6ADA               	clrf	fsr2h,c
  1897   00297C  006F FF7F FFF6     	movff	indf2,tblptrl
  1898   002982                     	if	1	;There is more than 1 active tblptr byte
  1899   002982  0E10               	movlw	high __smallconst
  1900   002984  6EF7               	movwf	tblptrh,c
  1901   002986                     	endif
  1902   002986                     	if	0	;tblptru may be non-zero
  1903   002986                     	endif
  1904   002986                     	if	0	;tblptru may be non-zero
  1905   002986                     	endif
  1906   002986  0008               	tblrd		*
  1907   002988  50F5               	movf	tablat,w,c
  1908   00298A  0A25               	xorlw	37
  1909   00298C  A4D8               	btfss	status,2,c
  1910   00298E  EFCB  F014         	goto	u4911
  1911   002992  EFCD  F014         	goto	u4910
  1912   002996                     u4911:
  1913   002996  EF02  F016         	goto	l4535
  1914   00299A                     u4910:
  1915   00299A                     
  1916                           ; BSR set to: 0
  1917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1918   00299A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1919   00299C  6ED9               	movwf	fsr2l,c
  1920   00299E  6ADA               	clrf	fsr2h,c
  1921   0029A0  2ADF               	incf	indf2,f,c
  1922   0029A2                     
  1923                           ; BSR set to: 0
  1924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1925   0029A2  0E00               	movlw	0
  1926   0029A4  6E5D               	movwf	(_width+1)^0,c
  1927   0029A6  0E00               	movlw	0
  1928   0029A8  6E5C               	movwf	_width^0,c
  1929   0029AA  C05C  F0EC         	movff	_width,_flags
  1930   0029AE                     
  1931                           ; BSR set to: 0
  1932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1933   0029AE  685E               	setf	_prec^0,c
  1934   0029B0  685F               	setf	(_prec+1)^0,c
  1935   0029B2                     
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1938   0029B2  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1939   0029B4  6ED9               	movwf	fsr2l,c
  1940   0029B6  6ADA               	clrf	fsr2h,c
  1941   0029B8  006F FF7F FFF6     	movff	indf2,tblptrl
  1942   0029BE                     	if	1	;There is more than 1 active tblptr byte
  1943   0029BE  0E10               	movlw	high __smallconst
  1944   0029C0  6EF7               	movwf	tblptrh,c
  1945   0029C2                     	endif
  1946   0029C2                     	if	0	;tblptru may be non-zero
  1947   0029C2                     	endif
  1948   0029C2                     	if	0	;tblptru may be non-zero
  1949   0029C2                     	endif
  1950   0029C2  0008               	tblrd		*
  1951   0029C4  50F5               	movf	tablat,w,c
  1952   0029C6  0A2E               	xorlw	46
  1953   0029C8  A4D8               	btfss	status,2,c
  1954   0029CA  EFE9  F014         	goto	u4921
  1955   0029CE  EFEB  F014         	goto	u4920
  1956   0029D2                     u4921:
  1957   0029D2  EFF9  F014         	goto	l4483
  1958   0029D6                     u4920:
  1959   0029D6                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1962   0029D6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1963   0029D8  6ED9               	movwf	fsr2l,c
  1964   0029DA  6ADA               	clrf	fsr2h,c
  1965   0029DC  2ADF               	incf	indf2,f,c
  1966   0029DE                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1969   0029DE  C08D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1970   0029E2  C08E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1971   0029E6  ECBC  F01B         	call	_read_prec_or_width	;wreg free
  1972   0029EA  C007  F05E         	movff	?_read_prec_or_width,_prec
  1973   0029EE  C008  F05F         	movff	?_read_prec_or_width+1,_prec+1
  1974   0029F2                     l4483:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1977   0029F2  0100               	movlb	0	; () banked
  1978   0029F4  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1979   0029F6  6ED9               	movwf	fsr2l,c
  1980   0029F8  6ADA               	clrf	fsr2h,c
  1981   0029FA  50DF               	movf	indf2,w,c
  1982   0029FC  6E47               	movwf	vfpfcnvrt@cp^0,c
  1983   0029FE                     
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1986   0029FE  0060  F11F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1987   002A04                     	if	1	;There is more than 1 active tblptr byte
  1988   002A04  0E10               	movlw	high __smallconst
  1989   002A06  6EF7               	movwf	tblptrh,c
  1990   002A08                     	endif
  1991   002A08                     	if	0	;tblptru may be non-zero
  1992   002A08                     	endif
  1993   002A08                     	if	0	;tblptru may be non-zero
  1994   002A08                     	endif
  1995   002A08  0008               	tblrd		*
  1996   002A0A  50F5               	movf	tablat,w,c
  1997   002A0C  0A64               	xorlw	100
  1998   002A0E  B4D8               	btfsc	status,2,c
  1999   002A10  EF0C  F015         	goto	u4931
  2000   002A14  EF0E  F015         	goto	u4930
  2001   002A18                     u4931:
  2002   002A18  EF1D  F015         	goto	l4489
  2003   002A1C                     u4930:
  2004   002A1C                     
  2005                           ; BSR set to: 0
  2006   002A1C  0060  F11F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2007   002A22                     	if	1	;There is more than 1 active tblptr byte
  2008   002A22  0E10               	movlw	high __smallconst
  2009   002A24  6EF7               	movwf	tblptrh,c
  2010   002A26                     	endif
  2011   002A26                     	if	0	;tblptru may be non-zero
  2012   002A26                     	endif
  2013   002A26                     	if	0	;tblptru may be non-zero
  2014   002A26                     	endif
  2015   002A26  0008               	tblrd		*
  2016   002A28  50F5               	movf	tablat,w,c
  2017   002A2A  0A69               	xorlw	105
  2018   002A2C  A4D8               	btfss	status,2,c
  2019   002A2E  EF1B  F015         	goto	u4941
  2020   002A32  EF1D  F015         	goto	u4940
  2021   002A36                     u4941:
  2022   002A36  EF3A  F015         	goto	l4497
  2023   002A3A                     u4940:
  2024   002A3A                     l4489:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2028   002A3A  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2029   002A3C  6ED9               	movwf	fsr2l,c
  2030   002A3E  6ADA               	clrf	fsr2h,c
  2031   002A40  0E02               	movlw	2
  2032   002A42  26DF               	addwf	indf2,f,c
  2033   002A44  5CDF               	subwf	indf2,w,c
  2034   002A46  6ED9               	movwf	fsr2l,c
  2035   002A48  6ADA               	clrf	fsr2h,c
  2036   002A4A  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg
  2037   002A50  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+1
  2038   002A56                     
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2041   002A56  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2042   002A58  6ED9               	movwf	fsr2l,c
  2043   002A5A  6ADA               	clrf	fsr2h,c
  2044   002A5C  2847               	incf	vfpfcnvrt@cp^0,w,c
  2045   002A5E  6EDF               	movwf	indf2,c
  2046   002A60                     
  2047                           ; BSR set to: 0
  2048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2049   002A60  C08C  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2050   002A64  C042  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2051   002A68  C043  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2052   002A6C  ECF8  F017         	call	_dtoa	;wreg free
  2053   002A70  EF14  F016         	goto	l984
  2054   002A74                     l4497:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2058   002A74  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2059   002A76  6ED9               	movwf	fsr2l,c
  2060   002A78  6ADA               	clrf	fsr2h,c
  2061   002A7A  50DF               	movf	indf2,w,c
  2062   002A7C  6E47               	movwf	vfpfcnvrt@cp^0,c
  2063   002A7E                     
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2066   002A7E  0060  F11F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2067   002A84                     	if	1	;There is more than 1 active tblptr byte
  2068   002A84  0E10               	movlw	high __smallconst
  2069   002A86  6EF7               	movwf	tblptrh,c
  2070   002A88                     	endif
  2071   002A88                     	if	0	;tblptru may be non-zero
  2072   002A88                     	endif
  2073   002A88                     	if	0	;tblptru may be non-zero
  2074   002A88                     	endif
  2075   002A88  0008               	tblrd		*
  2076   002A8A  006F FFD4  F046    	movff	tablat,vfpfcnvrt@c
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2079   002A90  EF55  F015         	goto	l4509
  2080   002A94                     l4501:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2084   002A94  2A47               	incf	vfpfcnvrt@cp^0,f,c
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2087   002A96  EF6E  F015         	goto	l4511
  2088   002A9A                     l4503:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2092   002A9A  0E6C               	movlw	108
  2093   002A9C  6E46               	movwf	vfpfcnvrt@c^0,c
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2096   002A9E  EF6E  F015         	goto	l4511
  2097   002AA2                     l4505:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2101   002AA2  0E00               	movlw	0
  2102   002AA4  6E46               	movwf	vfpfcnvrt@c^0,c
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2105   002AA6  EF6E  F015         	goto	l4511
  2106   002AAA                     l4509:
  2107                           
  2108                           ; BSR set to: 0
  2109   002AAA  5046               	movf	vfpfcnvrt@c^0,w,c
  2110   002AAC  6E40               	movwf	??_vfpfcnvrt^0,c
  2111   002AAE  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  2112                           
  2113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2114                           ; Switch size 1, requested type "simple"
  2115                           ; Number of cases is 1, Range of values is 0 to 0
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte            4     3 (average)
  2119                           ;	Chosen strategy is simple_byte
  2120   002AB0  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2121   002AB2  0A00               	xorlw	0	; case 0
  2122   002AB4  B4D8               	btfsc	status,2,c
  2123   002AB6  EF5F  F015         	goto	l4745
  2124   002ABA  EF51  F015         	goto	l4505
  2125   002ABE                     l4745:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ; Switch size 1, requested type "simple"
  2129                           ; Number of cases is 3, Range of values is 76 to 108
  2130                           ; switch strategies available:
  2131                           ; Name         Instructions Cycles
  2132                           ; simple_byte           10     6 (average)
  2133                           ;	Chosen strategy is simple_byte
  2134   002ABE  5040               	movf	??_vfpfcnvrt^0,w,c
  2135   002AC0  0A4C               	xorlw	76	; case 76
  2136   002AC2  B4D8               	btfsc	status,2,c
  2137   002AC4  EF4A  F015         	goto	l4501
  2138   002AC8  0A2A               	xorlw	42	; case 102
  2139   002ACA  B4D8               	btfsc	status,2,c
  2140   002ACC  EF4D  F015         	goto	l4503
  2141   002AD0  0A0A               	xorlw	10	; case 108
  2142   002AD2  B4D8               	btfsc	status,2,c
  2143   002AD4  EF4A  F015         	goto	l4501
  2144   002AD8  EF51  F015         	goto	l4505
  2145   002ADC                     l4511:
  2146                           
  2147                           ; BSR set to: 0
  2148   002ADC  0060  F11F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2149   002AE2                     	if	1	;There is more than 1 active tblptr byte
  2150   002AE2  0E10               	movlw	high __smallconst
  2151   002AE4  6EF7               	movwf	tblptrh,c
  2152   002AE6                     	endif
  2153   002AE6                     	if	0	;tblptru may be non-zero
  2154   002AE6                     	endif
  2155   002AE6                     	if	0	;tblptru may be non-zero
  2156   002AE6                     	endif
  2157   002AE6  0008               	tblrd		*
  2158   002AE8  50F5               	movf	tablat,w,c
  2159   002AEA  0A66               	xorlw	102
  2160   002AEC  A4D8               	btfss	status,2,c
  2161   002AEE  EF7B  F015         	goto	u4951
  2162   002AF2  EF7D  F015         	goto	u4950
  2163   002AF6                     u4951:
  2164   002AF6  EFFB  F015         	goto	l4531
  2165   002AFA                     u4950:
  2166   002AFA  EFB1  F015         	goto	l4519
  2167   002AFE                     l4513:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2171   002AFE  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2172   002B00  6ED9               	movwf	fsr2l,c
  2173   002B02  6ADA               	clrf	fsr2h,c
  2174   002B04  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2175   002B0A  0E04               	movlw	4
  2176   002B0C  26DF               	addwf	indf2,f,c
  2177   002B0E  5040               	movf	??_vfpfcnvrt^0,w,c
  2178   002B10  6ED9               	movwf	fsr2l,c
  2179   002B12  6ADA               	clrf	fsr2h,c
  2180   002B14  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg
  2181   002B1A  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+1
  2182   002B20  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+2
  2183   002B26  006F FF78  F045    	movff	postinc2,vfpfcnvrt@convarg+3
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2186   002B2C  EFC6  F015         	goto	l4521
  2187   002B30                     l4515:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2191   002B30  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2192   002B32  6ED9               	movwf	fsr2l,c
  2193   002B34  6ADA               	clrf	fsr2h,c
  2194   002B36  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2195   002B3C  0E04               	movlw	4
  2196   002B3E  26DF               	addwf	indf2,f,c
  2197   002B40  5040               	movf	??_vfpfcnvrt^0,w,c
  2198   002B42  6ED9               	movwf	fsr2l,c
  2199   002B44  6ADA               	clrf	fsr2h,c
  2200   002B46  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg
  2201   002B4C  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+1
  2202   002B52  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+2
  2203   002B58  006F FF78  F045    	movff	postinc2,vfpfcnvrt@convarg+3
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2206   002B5E  EFC6  F015         	goto	l4521
  2207   002B62                     l4519:
  2208                           
  2209                           ; BSR set to: 0
  2210   002B62  5046               	movf	vfpfcnvrt@c^0,w,c
  2211   002B64  6E40               	movwf	??_vfpfcnvrt^0,c
  2212   002B66  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  2213                           
  2214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 1, Range of values is 0 to 0
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte            4     3 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221   002B68  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2222   002B6A  0A00               	xorlw	0	; case 0
  2223   002B6C  B4D8               	btfsc	status,2,c
  2224   002B6E  EFBB  F015         	goto	l4747
  2225   002B72  EFC6  F015         	goto	l4521
  2226   002B76                     l4747:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ; Switch size 1, requested type "simple"
  2230                           ; Number of cases is 2, Range of values is 76 to 108
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte            7     4 (average)
  2234                           ;	Chosen strategy is simple_byte
  2235   002B76  5040               	movf	??_vfpfcnvrt^0,w,c
  2236   002B78  0A4C               	xorlw	76	; case 76
  2237   002B7A  B4D8               	btfsc	status,2,c
  2238   002B7C  EF98  F015         	goto	l4515
  2239   002B80  0A20               	xorlw	32	; case 108
  2240   002B82  B4D8               	btfsc	status,2,c
  2241   002B84  EF7F  F015         	goto	l4513
  2242   002B88  EFC6  F015         	goto	l4521
  2243   002B8C                     l4521:
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2247   002B8C  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2248   002B8E  6ED9               	movwf	fsr2l,c
  2249   002B90  6ADA               	clrf	fsr2h,c
  2250   002B92  2847               	incf	vfpfcnvrt@cp^0,w,c
  2251   002B94  6EDF               	movwf	indf2,c
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2254   002B96  EFE4  F015         	goto	l4529
  2255   002B9A                     l4523:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2259   002B9A  C08C  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  2260   002B9E  C042  F039         	movff	vfpfcnvrt@convarg,efgtoa@f
  2261   002BA2  C043  F03A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2262   002BA6  C044  F03B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2263   002BAA  C045  F03C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2264   002BAE  0060  F11F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2265   002BB4                     	if	1	;There is more than 1 active tblptr byte
  2266   002BB4  0E10               	movlw	high __smallconst
  2267   002BB6  6EF7               	movwf	tblptrh,c
  2268   002BB8                     	endif
  2269   002BB8                     	if	0	;tblptru may be non-zero
  2270   002BB8                     	endif
  2271   002BB8                     	if	0	;tblptru may be non-zero
  2272   002BB8                     	endif
  2273   002BB8  0008               	tblrd		*
  2274   002BBA  006F FFD4  F03D    	movff	tablat,efgtoa@c
  2275   002BC0  EC10  F008         	call	_efgtoa	;wreg free
  2276   002BC4  EF14  F016         	goto	l984
  2277   002BC8                     l4529:
  2278                           
  2279                           ; BSR set to: 0
  2280   002BC8  0060  F11F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2281   002BCE                     	if	1	;There is more than 1 active tblptr byte
  2282   002BCE  0E10               	movlw	high __smallconst
  2283   002BD0  6EF7               	movwf	tblptrh,c
  2284   002BD2                     	endif
  2285   002BD2                     	if	0	;tblptru may be non-zero
  2286   002BD2                     	endif
  2287   002BD2                     	if	0	;tblptru may be non-zero
  2288   002BD2                     	endif
  2289   002BD2  0008               	tblrd		*
  2290   002BD4  50F5               	movf	tablat,w,c
  2291   002BD6  6E40               	movwf	??_vfpfcnvrt^0,c
  2292   002BD8  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  2293                           
  2294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2295                           ; Switch size 1, requested type "simple"
  2296                           ; Number of cases is 1, Range of values is 0 to 0
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte            4     3 (average)
  2300                           ;	Chosen strategy is simple_byte
  2301   002BDA  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2302   002BDC  0A00               	xorlw	0	; case 0
  2303   002BDE  B4D8               	btfsc	status,2,c
  2304   002BE0  EFF4  F015         	goto	l4749
  2305   002BE4  EFFB  F015         	goto	l4531
  2306   002BE8                     l4749:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ; Switch size 1, requested type "simple"
  2310                           ; Number of cases is 1, Range of values is 102 to 102
  2311                           ; switch strategies available:
  2312                           ; Name         Instructions Cycles
  2313                           ; simple_byte            4     3 (average)
  2314                           ;	Chosen strategy is simple_byte
  2315   002BE8  5040               	movf	??_vfpfcnvrt^0,w,c
  2316   002BEA  0A66               	xorlw	102	; case 102
  2317   002BEC  B4D8               	btfsc	status,2,c
  2318   002BEE  EFCD  F015         	goto	l4523
  2319   002BF2  EFFB  F015         	goto	l4531
  2320   002BF6                     l4531:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2323   002BF6  0100               	movlb	0	; () banked
  2324   002BF8  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2325   002BFA  6ED9               	movwf	fsr2l,c
  2326   002BFC  6ADA               	clrf	fsr2h,c
  2327   002BFE  2ADF               	incf	indf2,f,c
  2328   002C00  EF14  F016         	goto	l984
  2329   002C04                     l4535:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2333   002C04  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2334   002C06  6ED9               	movwf	fsr2l,c
  2335   002C08  6ADA               	clrf	fsr2h,c
  2336   002C0A  006F FF7F FFF6     	movff	indf2,tblptrl
  2337   002C10                     	if	1	;There is more than 1 active tblptr byte
  2338   002C10  0E10               	movlw	high __smallconst
  2339   002C12  6EF7               	movwf	tblptrh,c
  2340   002C14                     	endif
  2341   002C14                     	if	0	;tblptru may be non-zero
  2342   002C14                     	endif
  2343   002C14                     	if	0	;tblptru may be non-zero
  2344   002C14                     	endif
  2345   002C14  0008               	tblrd		*
  2346   002C16  50F5               	movf	tablat,w,c
  2347   002C18  6E01               	movwf	fputc@c^0,c
  2348   002C1A  6A02               	clrf	(fputc@c+1)^0,c
  2349   002C1C  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2350   002C20  EC13  F01C         	call	_fputc	;wreg free
  2351   002C24  EFFB  F015         	goto	l4531
  2352   002C28                     l984:
  2353   002C28  0012               	return		;funcret
  2354   002C2A                     __end_of_vfpfcnvrt:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _read_prec_or_width *****************
  2358 ;; Defined at:
  2359 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2362 ;;		 -> vfprintf@cfmt(1), 
  2363 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2364 ;;		 -> sprintf@ap(1), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  c               1    8[COMRAM] unsigned char 
  2367 ;;  n               2    9[COMRAM] int 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2    6[COMRAM] int 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;Total ram usage:        5 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 1
  2384 ;; This function calls:
  2385 ;;		___wmul
  2386 ;; This function is called by:
  2387 ;;		_vfpfcnvrt
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text6
  2392   003778                     __ptext6:
  2393                           	callstack 0
  2394   003778                     _read_prec_or_width:
  2395                           	callstack 26
  2396   003778                     
  2397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2398   003778  0E00               	movlw	0
  2399   00377A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2400   00377C  0E00               	movlw	0
  2401   00377E  6E0A               	movwf	read_prec_or_width@n^0,c
  2402   003780                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2404   003780  5007               	movf	read_prec_or_width@fmt^0,w,c
  2405   003782  6ED9               	movwf	fsr2l,c
  2406   003784  6ADA               	clrf	fsr2h,c
  2407   003786  006F FF7F FFF6     	movff	indf2,tblptrl
  2408   00378C                     	if	1	;There is more than 1 active tblptr byte
  2409   00378C  0E10               	movlw	high __smallconst
  2410   00378E  6EF7               	movwf	tblptrh,c
  2411   003790                     	endif
  2412   003790                     	if	0	;tblptru may be non-zero
  2413   003790                     	endif
  2414   003790                     	if	0	;tblptru may be non-zero
  2415   003790                     	endif
  2416   003790  0008               	tblrd		*
  2417   003792  50F5               	movf	tablat,w,c
  2418   003794  0A2A               	xorlw	42
  2419   003796  A4D8               	btfss	status,2,c
  2420   003798  EFD0  F01B         	goto	u4011
  2421   00379C  EFD2  F01B         	goto	u4010
  2422   0037A0                     u4011:
  2423   0037A0  EFFA  F01B         	goto	l3647
  2424   0037A4                     u4010:
  2425   0037A4                     
  2426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2427   0037A4  5007               	movf	read_prec_or_width@fmt^0,w,c
  2428   0037A6  6ED9               	movwf	fsr2l,c
  2429   0037A8  6ADA               	clrf	fsr2h,c
  2430   0037AA  2ADF               	incf	indf2,f,c
  2431   0037AC                     
  2432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2433   0037AC  5008               	movf	read_prec_or_width@ap^0,w,c
  2434   0037AE  6ED9               	movwf	fsr2l,c
  2435   0037B0  6ADA               	clrf	fsr2h,c
  2436   0037B2  0E02               	movlw	2
  2437   0037B4  26DF               	addwf	indf2,f,c
  2438   0037B6  5CDF               	subwf	indf2,w,c
  2439   0037B8  6ED9               	movwf	fsr2l,c
  2440   0037BA  6ADA               	clrf	fsr2h,c
  2441   0037BC  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  2442   0037C2  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2445   0037C8  EF0E  F01C         	goto	l972
  2446   0037CC                     l3643:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2449   0037CC  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2450   0037D0  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2451   0037D4  0E00               	movlw	0
  2452   0037D6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2453   0037D8  0E0A               	movlw	10
  2454   0037DA  6E03               	movwf	___wmul@multiplicand^0,c
  2455   0037DC  ECE8  F01F         	call	___wmul	;wreg free
  2456   0037E0  5009               	movf	read_prec_or_width@c^0,w,c
  2457   0037E2  2401               	addwf	?___wmul^0,w,c
  2458   0037E4  6E0A               	movwf	read_prec_or_width@n^0,c
  2459   0037E6  0E00               	movlw	0
  2460   0037E8  2002               	addwfc	(?___wmul+1)^0,w,c
  2461   0037EA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2462   0037EC                     
  2463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2464   0037EC  5007               	movf	read_prec_or_width@fmt^0,w,c
  2465   0037EE  6ED9               	movwf	fsr2l,c
  2466   0037F0  6ADA               	clrf	fsr2h,c
  2467   0037F2  2ADF               	incf	indf2,f,c
  2468   0037F4                     l3647:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2471   0037F4  5007               	movf	read_prec_or_width@fmt^0,w,c
  2472   0037F6  6ED9               	movwf	fsr2l,c
  2473   0037F8  6ADA               	clrf	fsr2h,c
  2474   0037FA  006F FF7F FFF6     	movff	indf2,tblptrl
  2475   003800                     	if	1	;There is more than 1 active tblptr byte
  2476   003800  0E10               	movlw	high __smallconst
  2477   003802  6EF7               	movwf	tblptrh,c
  2478   003804                     	endif
  2479   003804                     	if	0	;tblptru may be non-zero
  2480   003804                     	endif
  2481   003804                     	if	0	;tblptru may be non-zero
  2482   003804                     	endif
  2483   003804  0008               	tblrd		*
  2484   003806  50F5               	movf	tablat,w,c
  2485   003808  0FD0               	addlw	208
  2486   00380A  6E09               	movwf	read_prec_or_width@c^0,c
  2487   00380C  0E09               	movlw	9
  2488   00380E  6409               	cpfsgt	read_prec_or_width@c^0,c
  2489   003810  EF0C  F01C         	goto	u4021
  2490   003814  EF0E  F01C         	goto	u4020
  2491   003818                     u4021:
  2492   003818  EFE6  F01B         	goto	l3643
  2493   00381C                     u4020:
  2494   00381C                     l972:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2497   00381C  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2498   003820  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2499   003824  0012               	return		;funcret
  2500   003826                     __end_of_read_prec_or_width:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function ___wmul *****************
  2504 ;; Defined at:
  2505 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  multiplier      2    0[COMRAM] unsigned int 
  2508 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  product         2    4[COMRAM] unsigned int 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  2    0[COMRAM] unsigned int 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0, prodl, prodh
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;Total ram usage:        6 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_read_prec_or_width
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text7
  2534   003FD0                     __ptext7:
  2535                           	callstack 0
  2536   003FD0                     ___wmul:
  2537                           	callstack 26
  2538   003FD0  5001               	movf	___wmul@multiplier^0,w,c
  2539   003FD2  0203               	mulwf	___wmul@multiplicand^0,c
  2540   003FD4  006F FFCC  F005    	movff	prodl,___wmul@product
  2541   003FDA  006F FFD0  F006    	movff	prodh,___wmul@product+1
  2542   003FE0  5001               	movf	___wmul@multiplier^0,w,c
  2543   003FE2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2544   003FE4  50F3               	movf	243,w,c
  2545   003FE6  2606               	addwf	(___wmul@product+1)^0,f,c
  2546   003FE8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2547   003FEA  0203               	mulwf	___wmul@multiplicand^0,c
  2548   003FEC  50F3               	movf	243,w,c
  2549   003FEE  2606               	addwf	(___wmul@product+1)^0,f,c
  2550   003FF0  C005  F001         	movff	___wmul@product,?___wmul
  2551   003FF4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2552   003FF8  0012               	return		;funcret
  2553   003FFA                     __end_of___wmul:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _efgtoa *****************
  2557 ;; Defined at:
  2558 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  2561 ;;		 -> sprintf@f(12), 
  2562 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2563 ;;  c               1   60[COMRAM] unsigned char 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  u               4   40[BANK0 ] struct flui
  2566 ;;  g               4   34[BANK0 ] struct flui
  2567 ;;  l               4   29[BANK0 ] struct flui
  2568 ;;  h               4   25[BANK0 ] struct flui
  2569 ;;  ou              4   19[BANK0 ] struct flui
  2570 ;;  n               2   38[BANK0 ] int 
  2571 ;;  i               2   23[BANK0 ] int 
  2572 ;;  w               2   17[BANK0 ] int 
  2573 ;;  e               2   15[BANK0 ] int 
  2574 ;;  m               2   13[BANK0 ] int 
  2575 ;;  d               2   11[BANK0 ] int 
  2576 ;;  t               2    4[BANK0 ] int 
  2577 ;;  p               2    2[BANK0 ] int 
  2578 ;;  ne              2    0[BANK0 ] int 
  2579 ;;  sign            1   33[BANK0 ] unsigned char 
  2580 ;;  nmode           1   10[BANK0 ] unsigned char 
  2581 ;;  mode            1    9[BANK0 ] unsigned char 
  2582 ;;  pp              1    8[BANK0 ] unsigned char 
  2583 ;;  esign           1    0        unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2593 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;Total ram usage:       52 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 4
  2600 ;; This function calls:
  2601 ;;		___fladd
  2602 ;;		___fldiv
  2603 ;;		___fleq
  2604 ;;		___flge
  2605 ;;		___flmul
  2606 ;;		___flneg
  2607 ;;		___flsub
  2608 ;;		___fltol
  2609 ;;		___fpclassifyf
  2610 ;;		_floorf
  2611 ;;		_labs
  2612 ;;		_memcpy
  2613 ;;		_pad
  2614 ;;		_strcpy
  2615 ;; This function is called by:
  2616 ;;		_vfpfcnvrt
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text8
  2621   001020                     __ptext8:
  2622                           	callstack 0
  2623   001020                     _efgtoa:
  2624                           	callstack 23
  2625   001020                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2627   001020  0E00               	movlw	0
  2628   001022  0100               	movlb	0	; () banked
  2629   001024  6F81               	movwf	efgtoa@sign& (0+255),b
  2630   001026                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2633   001026  C039  F082         	movff	efgtoa@f,efgtoa@g
  2634   00102A  C03A  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2635   00102E  C03B  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2636   001032  C03C  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2637   001036                     
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2640   001036  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2641   001038  EF22  F008         	goto	u4590
  2642   00103C  EF20  F008         	goto	u4591
  2643   001040                     u4591:
  2644   001040  EF36  F008         	goto	l4257
  2645   001044                     u4590:
  2646   001044                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2649   001044  0E01               	movlw	1
  2650   001046  6F81               	movwf	efgtoa@sign& (0+255),b
  2651   001048                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2654   001048  C082  F001         	movff	efgtoa@g,___flneg@f1
  2655   00104C  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2656   001050  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2657   001054  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2658   001058  EC63  F01F         	call	___flneg	;wreg free
  2659   00105C  C001  F082         	movff	?___flneg,efgtoa@g
  2660   001060  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2661   001064  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2662   001068  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2663   00106C                     l4257:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2666   00106C  0E00               	movlw	0
  2667   00106E  0100               	movlb	0	; () banked
  2668   001070  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2669   001072  0E00               	movlw	0
  2670   001074  6F86               	movwf	efgtoa@n& (0+255),b
  2671   001076                     
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2674   001076  C05C  F071         	movff	_width,efgtoa@w
  2675   00107A  C05D  F072         	movff	_width+1,efgtoa@w+1
  2676   00107E                     
  2677                           ; BSR set to: 0
  2678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2679   00107E  5181               	movf	efgtoa@sign& (0+255),w,b
  2680   001080  B4D8               	btfsc	status,2,c
  2681   001082  EF45  F008         	goto	u4601
  2682   001086  EF47  F008         	goto	u4600
  2683   00108A                     u4601:
  2684   00108A  EF5B  F008         	goto	l4271
  2685   00108E                     u4600:
  2686   00108E                     
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2689   00108E  5181               	movf	efgtoa@sign& (0+255),w,b
  2690   001090  A4D8               	btfss	status,2,c
  2691   001092  EF4D  F008         	goto	u4611
  2692   001096  EF4F  F008         	goto	u4610
  2693   00109A                     u4611:
  2694   00109A  EF55  F008         	goto	l4267
  2695   00109E                     u4610:
  2696   00109E                     
  2697                           ; BSR set to: 0
  2698   00109E  0E00               	movlw	0
  2699   0010A0  6F67               	movwf	(_efgtoa$1085+1)& (0+255),b
  2700   0010A2  0E2B               	movlw	43
  2701   0010A4  6F66               	movwf	_efgtoa$1085& (0+255),b
  2702   0010A6  EF59  F008         	goto	l4269
  2703   0010AA                     l4267:
  2704                           
  2705                           ; BSR set to: 0
  2706   0010AA  0E00               	movlw	0
  2707   0010AC  6F67               	movwf	(_efgtoa$1085+1)& (0+255),b
  2708   0010AE  0E2D               	movlw	45
  2709   0010B0  6F66               	movwf	_efgtoa$1085& (0+255),b
  2710   0010B2                     l4269:
  2711                           
  2712                           ; BSR set to: 0
  2713   0010B2  C066  F081         	movff	_efgtoa$1085,efgtoa@sign
  2714   0010B6                     l4271:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2718   0010B6  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2719   0010BA  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2720   0010BE  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2721   0010C2  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2722   0010C6  ECBA  F019         	call	___fpclassifyf	;wreg free
  2723   0010CA  0401               	decf	?___fpclassifyf^0,w,c
  2724   0010CC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2725   0010CE  A4D8               	btfss	status,2,c
  2726   0010D0  EF6C  F008         	goto	u4621
  2727   0010D4  EF6E  F008         	goto	u4620
  2728   0010D8                     u4621:
  2729   0010D8  EF9D  F008         	goto	l4289
  2730   0010DC                     u4620:
  2731   0010DC                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2733   0010DC  0100               	movlb	0	; () banked
  2734   0010DE  5181               	movf	efgtoa@sign& (0+255),w,b
  2735   0010E0  B4D8               	btfsc	status,2,c
  2736   0010E2  EF75  F008         	goto	u4631
  2737   0010E6  EF77  F008         	goto	u4630
  2738   0010EA                     u4631:
  2739   0010EA  EF80  F008         	goto	l4281
  2740   0010EE                     u4630:
  2741   0010EE                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2744   0010EE  C081  F100         	movff	efgtoa@sign,_dbuf
  2745   0010F2                     
  2746                           ; BSR set to: 0
  2747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2748   0010F2  0771               	decf	efgtoa@w& (0+255),f,b
  2749   0010F4  A0D8               	btfss	status,0,c
  2750   0010F6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2751   0010F8                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2754   0010F8  0E00               	movlw	0
  2755   0010FA  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2756   0010FC  0E01               	movlw	1
  2757   0010FE  6F86               	movwf	efgtoa@n& (0+255),b
  2758   001100                     l4281:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2762   001100  0E00               	movlw	low _dbuf
  2763   001102  2586               	addwf	efgtoa@n& (0+255),w,b
  2764   001104  6E01               	movwf	strcpy@dest^0,c
  2765   001106  0E01               	movlw	high _dbuf
  2766   001108  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2767   00110A  6E02               	movwf	(strcpy@dest+1)^0,c
  2768   00110C  0E16               	movlw	low STR_3
  2769   00110E  6E03               	movwf	strcpy@src^0,c
  2770   001110  EC06  F01F         	call	_strcpy	;wreg free
  2771   001114                     l4283:
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2774   001114  0100               	movlb	0	; () banked
  2775   001116  0EFD               	movlw	253
  2776   001118  2771               	addwf	efgtoa@w& (0+255),f,b
  2777   00111A  0EFF               	movlw	255
  2778   00111C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2779   00111E                     
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2782   00111E  C038  F00F         	movff	efgtoa@fp,pad@fp
  2783   001122  0E00               	movlw	low _dbuf
  2784   001124  6E10               	movwf	pad@buf^0,c
  2785   001126  0E01               	movlw	high _dbuf
  2786   001128  6E11               	movwf	(pad@buf+1)^0,c
  2787   00112A  C071  F012         	movff	efgtoa@w,pad@p
  2788   00112E  C072  F013         	movff	efgtoa@w+1,pad@p+1
  2789   001132  ECA2  F01D         	call	_pad	;wreg free
  2790   001136  EF05  F00D         	goto	l927
  2791   00113A                     l4289:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2794   00113A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2795   00113E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2796   001142  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2797   001146  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2798   00114A  ECBA  F019         	call	___fpclassifyf	;wreg free
  2799   00114E  5001               	movf	?___fpclassifyf^0,w,c
  2800   001150  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2801   001152  A4D8               	btfss	status,2,c
  2802   001154  EFAE  F008         	goto	u4641
  2803   001158  EFB0  F008         	goto	u4640
  2804   00115C                     u4641:
  2805   00115C  EFCE  F008         	goto	l4307
  2806   001160                     u4640:
  2807   001160                     
  2808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2809   001160  0100               	movlb	0	; () banked
  2810   001162  5181               	movf	efgtoa@sign& (0+255),w,b
  2811   001164  B4D8               	btfsc	status,2,c
  2812   001166  EFB7  F008         	goto	u4651
  2813   00116A  EFB9  F008         	goto	u4650
  2814   00116E                     u4651:
  2815   00116E  EFC2  F008         	goto	l4299
  2816   001172                     u4650:
  2817   001172                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2820   001172  C081  F100         	movff	efgtoa@sign,_dbuf
  2821   001176                     
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2824   001176  0771               	decf	efgtoa@w& (0+255),f,b
  2825   001178  A0D8               	btfss	status,0,c
  2826   00117A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2827   00117C                     
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2830   00117C  0E00               	movlw	0
  2831   00117E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2832   001180  0E01               	movlw	1
  2833   001182  6F86               	movwf	efgtoa@n& (0+255),b
  2834   001184                     l4299:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2838   001184  0E00               	movlw	low _dbuf
  2839   001186  2586               	addwf	efgtoa@n& (0+255),w,b
  2840   001188  6E01               	movwf	strcpy@dest^0,c
  2841   00118A  0E01               	movlw	high _dbuf
  2842   00118C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2843   00118E  6E02               	movwf	(strcpy@dest+1)^0,c
  2844   001190  0E1A               	movlw	low STR_6
  2845   001192  6E03               	movwf	strcpy@src^0,c
  2846   001194  EC06  F01F         	call	_strcpy	;wreg free
  2847   001198  EF8A  F008         	goto	l4283
  2848   00119C                     l4307:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2851   00119C  0E00               	movlw	0
  2852   00119E  0100               	movlb	0	; () banked
  2853   0011A0  6F88               	movwf	efgtoa@u& (0+255),b
  2854   0011A2  0E00               	movlw	0
  2855   0011A4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2856   0011A6  0E80               	movlw	128
  2857   0011A8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2858   0011AA  0E3F               	movlw	63
  2859   0011AC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2862   0011AE  0E00               	movlw	0
  2863   0011B0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2864   0011B2  0E00               	movlw	0
  2865   0011B4  6F6F               	movwf	efgtoa@e& (0+255),b
  2866   0011B6                     
  2867                           ; BSR set to: 0
  2868                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2869   0011B6  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2870   0011BA  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2871   0011BE  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2872   0011C2  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2873   0011C6  0E00               	movlw	0
  2874   0011C8  6E05               	movwf	___fleq@ff2^0,c
  2875   0011CA  0E00               	movlw	0
  2876   0011CC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2877   0011CE  0E00               	movlw	0
  2878   0011D0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2879   0011D2  0E00               	movlw	0
  2880   0011D4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2881   0011D6  ECBF  F01C         	call	___fleq	;wreg free
  2882   0011DA  B0D8               	btfsc	status,0,c
  2883   0011DC  EFF2  F008         	goto	u4661
  2884   0011E0  EFF4  F008         	goto	u4660
  2885   0011E4                     u4661:
  2886   0011E4  EFD3  F009         	goto	l930
  2887   0011E8                     u4660:
  2888   0011E8  EF01  F009         	goto	l4315
  2889   0011EC                     l932:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2892   0011EC  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2893   0011F0  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2894   0011F4  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2895   0011F8  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2896   0011FC                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2898   0011FC  0100               	movlb	0	; () banked
  2899   0011FE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2900   001200  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2901   001202                     l4315:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2904   001202  C088  F001         	movff	efgtoa@u,___flmul@b
  2905   001206  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2906   00120A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2907   00120E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2908   001212  0E00               	movlw	0
  2909   001214  6E05               	movwf	___flmul@a^0,c
  2910   001216  0E00               	movlw	0
  2911   001218  6E06               	movwf	(___flmul@a+1)^0,c
  2912   00121A  0E20               	movlw	32
  2913   00121C  6E07               	movwf	(___flmul@a+2)^0,c
  2914   00121E  0E41               	movlw	65
  2915   001220  6E08               	movwf	(___flmul@a+3)^0,c
  2916   001222  EC66  F00F         	call	___flmul	;wreg free
  2917   001226  C001  F073         	movff	?___flmul,efgtoa@ou
  2918   00122A  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  2919   00122E  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  2920   001232  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  2921   001236  0100               	movlb	0	; () banked
  2922   001238  5173               	movf	efgtoa@ou& (0+255),w,b
  2923   00123A  5D82               	subwf	efgtoa@g& (0+255),w,b
  2924   00123C  6E01               	movwf	labs@a^0,c
  2925   00123E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2926   001240  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2927   001242  6E02               	movwf	(labs@a+1)^0,c
  2928   001244  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2929   001246  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2930   001248  6E03               	movwf	(labs@a+2)^0,c
  2931   00124A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2932   00124C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2933   00124E  6E04               	movwf	(labs@a+3)^0,c
  2934   001250  EC96  F01E         	call	_labs	;wreg free
  2935   001254  BE04               	btfsc	(?_labs+3)^0,7,c
  2936   001256  EF38  F009         	goto	u4671
  2937   00125A  5004               	movf	(?_labs+3)^0,w,c
  2938   00125C  1003               	iorwf	(?_labs+2)^0,w,c
  2939   00125E  1002               	iorwf	(?_labs+1)^0,w,c
  2940   001260  E109               	bnz	u4670
  2941   001262  0E02               	movlw	2
  2942   001264  5C01               	subwf	?_labs^0,w,c
  2943   001266  A0D8               	btfss	status,0,c
  2944   001268  EF38  F009         	goto	u4671
  2945   00126C  EF3A  F009         	goto	u4670
  2946   001270                     u4671:
  2947   001270  EFF6  F008         	goto	l932
  2948   001274                     u4670:
  2949   001274  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  2950   001278  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  2951   00127C  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  2952   001280  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  2953   001284  C082  F01E         	movff	efgtoa@g,___flge@ff2
  2954   001288  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  2955   00128C  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  2956   001290  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  2957   001294  EC38  F019         	call	___flge	;wreg free
  2958   001298  A0D8               	btfss	status,0,c
  2959   00129A  EF51  F009         	goto	u4681
  2960   00129E  EF53  F009         	goto	u4680
  2961   0012A2                     u4681:
  2962   0012A2  EFF6  F008         	goto	l932
  2963   0012A6                     u4680:
  2964   0012A6                     
  2965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2966   0012A6  0100               	movlb	0	; () banked
  2967   0012A8  5188               	movf	efgtoa@u& (0+255),w,b
  2968   0012AA  5D82               	subwf	efgtoa@g& (0+255),w,b
  2969   0012AC  6E01               	movwf	labs@a^0,c
  2970   0012AE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2971   0012B0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2972   0012B2  6E02               	movwf	(labs@a+1)^0,c
  2973   0012B4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2974   0012B6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2975   0012B8  6E03               	movwf	(labs@a+2)^0,c
  2976   0012BA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2977   0012BC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2978   0012BE  6E04               	movwf	(labs@a+3)^0,c
  2979   0012C0  EC96  F01E         	call	_labs	;wreg free
  2980   0012C4  BE04               	btfsc	(?_labs+3)^0,7,c
  2981   0012C6  EF72  F009         	goto	u4690
  2982   0012CA  5004               	movf	(?_labs+3)^0,w,c
  2983   0012CC  1003               	iorwf	(?_labs+2)^0,w,c
  2984   0012CE  1002               	iorwf	(?_labs+1)^0,w,c
  2985   0012D0  E107               	bnz	u4691
  2986   0012D2  0E02               	movlw	2
  2987   0012D4  5C01               	subwf	?_labs^0,w,c
  2988   0012D6  B0D8               	btfsc	status,0,c
  2989   0012D8  EF70  F009         	goto	u4691
  2990   0012DC  EF72  F009         	goto	u4690
  2991   0012E0                     u4691:
  2992   0012E0  EFBA  F009         	goto	l4333
  2993   0012E4                     u4690:
  2994   0012E4                     l4323:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2997   0012E4  C088  F082         	movff	efgtoa@u,efgtoa@g
  2998   0012E8  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2999   0012EC  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3000   0012F0  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  3003   0012F4  EFD3  F009         	goto	l930
  3004   0012F8                     l4325:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3007   0012F8  C088  F001         	movff	efgtoa@u,___fldiv@b
  3008   0012FC  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3009   001300  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3010   001304  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3011   001308  0E00               	movlw	0
  3012   00130A  6E05               	movwf	___fldiv@a^0,c
  3013   00130C  0E00               	movlw	0
  3014   00130E  6E06               	movwf	(___fldiv@a+1)^0,c
  3015   001310  0E20               	movlw	32
  3016   001312  6E07               	movwf	(___fldiv@a+2)^0,c
  3017   001314  0E41               	movlw	65
  3018   001316  6E08               	movwf	(___fldiv@a+3)^0,c
  3019   001318  EC8D  F011         	call	___fldiv	;wreg free
  3020   00131C  C001  F088         	movff	?___fldiv,efgtoa@u
  3021   001320  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3022   001324  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3023   001328  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3024   00132C                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  3026   00132C  0100               	movlb	0	; () banked
  3027   00132E  076F               	decf	efgtoa@e& (0+255),f,b
  3028   001330  A0D8               	btfss	status,0,c
  3029   001332  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3030   001334                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3033   001334  5188               	movf	efgtoa@u& (0+255),w,b
  3034   001336  5D82               	subwf	efgtoa@g& (0+255),w,b
  3035   001338  6E01               	movwf	labs@a^0,c
  3036   00133A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3037   00133C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3038   00133E  6E02               	movwf	(labs@a+1)^0,c
  3039   001340  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3040   001342  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3041   001344  6E03               	movwf	(labs@a+2)^0,c
  3042   001346  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3043   001348  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3044   00134A  6E04               	movwf	(labs@a+3)^0,c
  3045   00134C  EC96  F01E         	call	_labs	;wreg free
  3046   001350  BE04               	btfsc	(?_labs+3)^0,7,c
  3047   001352  EFB8  F009         	goto	u4700
  3048   001356  5004               	movf	(?_labs+3)^0,w,c
  3049   001358  1003               	iorwf	(?_labs+2)^0,w,c
  3050   00135A  1002               	iorwf	(?_labs+1)^0,w,c
  3051   00135C  E107               	bnz	u4701
  3052   00135E  0E02               	movlw	2
  3053   001360  5C01               	subwf	?_labs^0,w,c
  3054   001362  B0D8               	btfsc	status,0,c
  3055   001364  EFB6  F009         	goto	u4701
  3056   001368  EFB8  F009         	goto	u4700
  3057   00136C                     u4701:
  3058   00136C  EFBA  F009         	goto	l4333
  3059   001370                     u4700:
  3060   001370  EF72  F009         	goto	l4323
  3061   001374                     l4333:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3064   001374  C082  F01A         	movff	efgtoa@g,___flge@ff1
  3065   001378  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3066   00137C  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3067   001380  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3068   001384  C088  F01E         	movff	efgtoa@u,___flge@ff2
  3069   001388  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3070   00138C  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3071   001390  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3072   001394  EC38  F019         	call	___flge	;wreg free
  3073   001398  A0D8               	btfss	status,0,c
  3074   00139A  EFD1  F009         	goto	u4711
  3075   00139E  EFD3  F009         	goto	u4710
  3076   0013A2                     u4711:
  3077   0013A2  EF7C  F009         	goto	l4325
  3078   0013A6                     u4710:
  3079   0013A6                     l930:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3082   0013A6  C03D  F069         	movff	efgtoa@c,efgtoa@mode
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3085   0013AA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3086   0013AE                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3088   0013AE  BE5F               	btfsc	(_prec+1)^0,7,c
  3089   0013B0  EFDC  F009         	goto	u4721
  3090   0013B4  EFDE  F009         	goto	u4720
  3091   0013B8                     u4721:
  3092   0013B8  EFE4  F009         	goto	l4339
  3093   0013BC                     u4720:
  3094   0013BC  C05E  F062         	movff	_prec,efgtoa@p
  3095   0013C0  C05F  F063         	movff	_prec+1,efgtoa@p+1
  3096   0013C4  EFE9  F009         	goto	l4341
  3097   0013C8                     l4339:
  3098   0013C8  0E00               	movlw	0
  3099   0013CA  0100               	movlb	0	; () banked
  3100   0013CC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3101   0013CE  0E06               	movlw	6
  3102   0013D0  6F62               	movwf	efgtoa@p& (0+255),b
  3103   0013D2                     l4341:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3106   0013D2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3107   0013D6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3108   0013DA                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3110   0013DA  0100               	movlb	0	; () banked
  3111   0013DC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3112   0013DE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3113   0013E0                     
  3114                           ; BSR set to: 0
  3115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3116   0013E0  0E66               	movlw	102
  3117   0013E2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3118   0013E4  A4D8               	btfss	status,2,c
  3119   0013E6  EFF7  F009         	goto	u4731
  3120   0013EA  EFF9  F009         	goto	u4730
  3121   0013EE                     u4731:
  3122   0013EE  EF19  F00A         	goto	l4355
  3123   0013F2                     u4730:
  3124   0013F2                     
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3127   0013F2  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3128   0013F4  EF00  F00A         	goto	u4740
  3129   0013F8  EFFE  F009         	goto	u4741
  3130   0013FC                     u4741:
  3131   0013FC  EF0C  F00A         	goto	l4351
  3132   001400                     u4740:
  3133   001400                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3136   001400  0E00               	movlw	0
  3137   001402  6F88               	movwf	efgtoa@u& (0+255),b
  3138   001404  0E00               	movlw	0
  3139   001406  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3140   001408  0E80               	movlw	128
  3141   00140A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3142   00140C  0E3F               	movlw	63
  3143   00140E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3146   001410  0E00               	movlw	0
  3147   001412  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3148   001414  0E00               	movlw	0
  3149   001416  6F6F               	movwf	efgtoa@e& (0+255),b
  3150   001418                     l4351:
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3154   001418  0E67               	movlw	103
  3155   00141A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3156   00141C  B4D8               	btfsc	status,2,c
  3157   00141E  EF13  F00A         	goto	u4751
  3158   001422  EF15  F00A         	goto	u4750
  3159   001426                     u4751:
  3160   001426  EF19  F00A         	goto	l4355
  3161   00142A                     u4750:
  3162   00142A                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3165   00142A  516F               	movf	efgtoa@e& (0+255),w,b
  3166   00142C  276D               	addwf	efgtoa@m& (0+255),f,b
  3167   00142E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3168   001430  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3169   001432                     l4355:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3173   001432  0E00               	movlw	0
  3174   001434  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3175   001436  0E00               	movlw	0
  3176   001438  6F77               	movwf	efgtoa@i& (0+255),b
  3177   00143A                     
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3180   00143A  C082  F079         	movff	efgtoa@g,efgtoa@h
  3181   00143E  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3182   001442  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3183   001446  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3184   00144A                     
  3185                           ; BSR set to: 0
  3186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3187   00144A  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3188   00144E  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3189   001452  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3190   001456  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3193   00145A  EFAA  F00A         	goto	l4369
  3194   00145E                     l4361:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3198   00145E  C079  F001         	movff	efgtoa@h,___fldiv@b
  3199   001462  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3200   001466  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3201   00146A  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3202   00146E  C088  F005         	movff	efgtoa@u,___fldiv@a
  3203   001472  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3204   001476  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3205   00147A  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3206   00147E  EC8D  F011         	call	___fldiv	;wreg free
  3207   001482  C001  F01A         	movff	?___fldiv,floorf@x
  3208   001486  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3209   00148A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3210   00148E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3211   001492  EC15  F016         	call	_floorf	;wreg free
  3212   001496  C01A  F07D         	movff	?_floorf,efgtoa@l
  3213   00149A  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3214   00149E  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3215   0014A2  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3218   0014A6  C07D  F02E         	movff	efgtoa@l,___fltol@f1
  3219   0014AA  C07E  F02F         	movff	efgtoa@l+1,___fltol@f1+1
  3220   0014AE  C07F  F030         	movff	efgtoa@l+2,___fltol@f1+2
  3221   0014B2  C080  F031         	movff	efgtoa@l+3,___fltol@f1+3
  3222   0014B6  ECB5  F018         	call	___fltol	;wreg free
  3223   0014BA  C02E  F06B         	movff	?___fltol,efgtoa@d
  3224   0014BE  C02F  F06C         	movff	?___fltol+1,efgtoa@d+1
  3225   0014C2                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3227   0014C2  C079  F01A         	movff	efgtoa@h,___flsub@b
  3228   0014C6  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3229   0014CA  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3230   0014CE  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3231   0014D2  C07D  F005         	movff	efgtoa@l,___flmul@a
  3232   0014D6  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3233   0014DA  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3234   0014DE  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3235   0014E2  C088  F001         	movff	efgtoa@u,___flmul@b
  3236   0014E6  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3237   0014EA  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3238   0014EE  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3239   0014F2  EC66  F00F         	call	___flmul	;wreg free
  3240   0014F6  C001  F01E         	movff	?___flmul,___flsub@a
  3241   0014FA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3242   0014FE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3243   001502  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3244   001506  ECC1  F01E         	call	___flsub	;wreg free
  3245   00150A  C01A  F079         	movff	?___flsub,efgtoa@h
  3246   00150E  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3247   001512  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3248   001516  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3249   00151A                     
  3250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3251   00151A  C088  F001         	movff	efgtoa@u,___fldiv@b
  3252   00151E  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3253   001522  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3254   001526  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3255   00152A  0E00               	movlw	0
  3256   00152C  6E05               	movwf	___fldiv@a^0,c
  3257   00152E  0E00               	movlw	0
  3258   001530  6E06               	movwf	(___fldiv@a+1)^0,c
  3259   001532  0E20               	movlw	32
  3260   001534  6E07               	movwf	(___fldiv@a+2)^0,c
  3261   001536  0E41               	movlw	65
  3262   001538  6E08               	movwf	(___fldiv@a+3)^0,c
  3263   00153A  EC8D  F011         	call	___fldiv	;wreg free
  3264   00153E  C001  F088         	movff	?___fldiv,efgtoa@u
  3265   001542  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3266   001546  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3267   00154A  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3268   00154E                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3270   00154E  0100               	movlb	0	; () banked
  3271   001550  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3272   001552  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3273   001554                     l4369:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3277   001554  516D               	movf	efgtoa@m& (0+255),w,b
  3278   001556  5D77               	subwf	efgtoa@i& (0+255),w,b
  3279   001558  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3280   00155A  0A80               	xorlw	128
  3281   00155C  6E3E               	movwf	??_efgtoa^0,c
  3282   00155E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3283   001560  0A80               	xorlw	128
  3284   001562  583E               	subwfb	??_efgtoa^0,w,c
  3285   001564  A0D8               	btfss	status,0,c
  3286   001566  EFB7  F00A         	goto	u4761
  3287   00156A  EFB9  F00A         	goto	u4760
  3288   00156E                     u4761:
  3289   00156E  EF2F  F00A         	goto	l4361
  3290   001572                     u4760:
  3291   001572                     
  3292                           ; BSR set to: 0
  3293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3294   001572  C088  F001         	movff	efgtoa@u,___flmul@b
  3295   001576  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3296   00157A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3297   00157E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3298   001582  0E00               	movlw	0
  3299   001584  6E05               	movwf	___flmul@a^0,c
  3300   001586  0E00               	movlw	0
  3301   001588  6E06               	movwf	(___flmul@a+1)^0,c
  3302   00158A  0EA0               	movlw	160
  3303   00158C  6E07               	movwf	(___flmul@a+2)^0,c
  3304   00158E  0E40               	movlw	64
  3305   001590  6E08               	movwf	(___flmul@a+3)^0,c
  3306   001592  EC66  F00F         	call	___flmul	;wreg free
  3307   001596  C001  F07D         	movff	?___flmul,efgtoa@l
  3308   00159A  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  3309   00159E  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  3310   0015A2  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  3311   0015A6                     
  3312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3313   0015A6  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3314   0015AA  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3315   0015AE  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3316   0015B2  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3317   0015B6  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  3318   0015BA  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3319   0015BE  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3320   0015C2  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3321   0015C6  EC38  F019         	call	___flge	;wreg free
  3322   0015CA  B0D8               	btfsc	status,0,c
  3323   0015CC  EFEA  F00A         	goto	u4771
  3324   0015D0  EFEC  F00A         	goto	u4770
  3325   0015D4                     u4771:
  3326   0015D4  EFF7  F00A         	goto	l4377
  3327   0015D8                     u4770:
  3328   0015D8                     
  3329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3330   0015D8  0E00               	movlw	0
  3331   0015DA  0100               	movlb	0	; () banked
  3332   0015DC  6F7D               	movwf	efgtoa@l& (0+255),b
  3333   0015DE  0E00               	movlw	0
  3334   0015E0  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3335   0015E2  0E00               	movlw	0
  3336   0015E4  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3337   0015E6  0E00               	movlw	0
  3338   0015E8  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3341   0015EA  EF20  F00B         	goto	l4383
  3342   0015EE                     l4377:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3345   0015EE  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3346   0015F2  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3347   0015F6  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3348   0015FA  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3349   0015FE  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3350   001602  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3351   001606  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3352   00160A  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3353   00160E  ECBF  F01C         	call	___fleq	;wreg free
  3354   001612  A0D8               	btfss	status,0,c
  3355   001614  EF0E  F00B         	goto	u4781
  3356   001618  EF10  F00B         	goto	u4780
  3357   00161C                     u4781:
  3358   00161C  EF20  F00B         	goto	l4383
  3359   001620                     u4780:
  3360   001620  0100               	movlb	0	; () banked
  3361   001622  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3362   001624  EF16  F00B         	goto	u4791
  3363   001628  EF18  F00B         	goto	u4790
  3364   00162C                     u4791:
  3365   00162C  EF20  F00B         	goto	l4383
  3366   001630                     u4790:
  3367   001630                     
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3370   001630  0E00               	movlw	0
  3371   001632  6F7D               	movwf	efgtoa@l& (0+255),b
  3372   001634  0E00               	movlw	0
  3373   001636  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3374   001638  0E00               	movlw	0
  3375   00163A  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3376   00163C  0E00               	movlw	0
  3377   00163E  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3378   001640                     l4383:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3381   001640  C082  F001         	movff	efgtoa@g,___fladd@b
  3382   001644  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3383   001648  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3384   00164C  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3385   001650  C07D  F005         	movff	efgtoa@l,___fladd@a
  3386   001654  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3387   001658  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3388   00165C  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  3389   001660  EC06  F00D         	call	___fladd	;wreg free
  3390   001664  C001  F079         	movff	?___fladd,efgtoa@h
  3391   001668  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  3392   00166C  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  3393   001670  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  3394   001674                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3396   001674  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3397   001678  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3398   00167C  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3399   001680  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3400   001684  0E00               	movlw	0
  3401   001686  6E05               	movwf	___flmul@a^0,c
  3402   001688  0E00               	movlw	0
  3403   00168A  6E06               	movwf	(___flmul@a+1)^0,c
  3404   00168C  0E20               	movlw	32
  3405   00168E  6E07               	movwf	(___flmul@a+2)^0,c
  3406   001690  0E41               	movlw	65
  3407   001692  6E08               	movwf	(___flmul@a+3)^0,c
  3408   001694  C073  F001         	movff	efgtoa@ou,___flmul@b
  3409   001698  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3410   00169C  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3411   0016A0  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3412   0016A4  EC66  F00F         	call	___flmul	;wreg free
  3413   0016A8  C001  F01E         	movff	?___flmul,___flge@ff2
  3414   0016AC  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3415   0016B0  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3416   0016B4  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3417   0016B8  EC38  F019         	call	___flge	;wreg free
  3418   0016BC  A0D8               	btfss	status,0,c
  3419   0016BE  EF63  F00B         	goto	u4801
  3420   0016C2  EF65  F00B         	goto	u4800
  3421   0016C6                     u4801:
  3422   0016C6  EF8E  F00B         	goto	l4395
  3423   0016CA                     u4800:
  3424   0016CA                     
  3425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3426   0016CA  0100               	movlb	0	; () banked
  3427   0016CC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3428   0016CE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3429   0016D0                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3432   0016D0  C073  F001         	movff	efgtoa@ou,___flmul@b
  3433   0016D4  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3434   0016D8  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3435   0016DC  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3436   0016E0  0E00               	movlw	0
  3437   0016E2  6E05               	movwf	___flmul@a^0,c
  3438   0016E4  0E00               	movlw	0
  3439   0016E6  6E06               	movwf	(___flmul@a+1)^0,c
  3440   0016E8  0E20               	movlw	32
  3441   0016EA  6E07               	movwf	(___flmul@a+2)^0,c
  3442   0016EC  0E41               	movlw	65
  3443   0016EE  6E08               	movwf	(___flmul@a+3)^0,c
  3444   0016F0  EC66  F00F         	call	___flmul	;wreg free
  3445   0016F4  C001  F073         	movff	?___flmul,efgtoa@ou
  3446   0016F8  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3447   0016FC  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3448   001700  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3449   001704                     
  3450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3451   001704  0E66               	movlw	102
  3452   001706  0100               	movlb	0	; () banked
  3453   001708  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3454   00170A  A4D8               	btfss	status,2,c
  3455   00170C  EF8A  F00B         	goto	u4811
  3456   001710  EF8C  F00B         	goto	u4810
  3457   001714                     u4811:
  3458   001714  EF8E  F00B         	goto	l4395
  3459   001718                     u4810:
  3460   001718                     
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3463   001718  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3464   00171A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3465   00171C                     l4395:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3468   00171C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3469   001720  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3470   001724  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3471   001728  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3472   00172C                     
  3473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3474   00172C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3475   001730  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3476   001734                     
  3477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3478   001734  0E00               	movlw	0
  3479   001736  0100               	movlb	0	; () banked
  3480   001738  6F68               	movwf	efgtoa@pp& (0+255),b
  3481   00173A                     
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3484   00173A  0E00               	movlw	0
  3485   00173C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3486   00173E  0E00               	movlw	0
  3487   001740  6F64               	movwf	efgtoa@t& (0+255),b
  3488   001742                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3491   001742  0E00               	movlw	0
  3492   001744  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3493   001746  0E00               	movlw	0
  3494   001748  6F77               	movwf	efgtoa@i& (0+255),b
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3497   00174A  EF8C  F00C         	goto	l4445
  3498   00174E                     l4405:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3502   00174E  C079  F001         	movff	efgtoa@h,___fldiv@b
  3503   001752  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3504   001756  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3505   00175A  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3506   00175E  C088  F005         	movff	efgtoa@u,___fldiv@a
  3507   001762  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3508   001766  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3509   00176A  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3510   00176E  EC8D  F011         	call	___fldiv	;wreg free
  3511   001772  C001  F01A         	movff	?___fldiv,floorf@x
  3512   001776  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3513   00177A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3514   00177E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3515   001782  EC15  F016         	call	_floorf	;wreg free
  3516   001786  C01A  F07D         	movff	?_floorf,efgtoa@l
  3517   00178A  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  3518   00178E  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  3519   001792  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3522   001796  C07D  F02E         	movff	efgtoa@l,___fltol@f1
  3523   00179A  C07E  F02F         	movff	efgtoa@l+1,___fltol@f1+1
  3524   00179E  C07F  F030         	movff	efgtoa@l+2,___fltol@f1+2
  3525   0017A2  C080  F031         	movff	efgtoa@l+3,___fltol@f1+3
  3526   0017A6  ECB5  F018         	call	___fltol	;wreg free
  3527   0017AA  BE2F               	btfsc	(?___fltol+1)^0,7,c
  3528   0017AC  EFE3  F00B         	goto	u4820
  3529   0017B0  502F               	movf	(?___fltol+1)^0,w,c
  3530   0017B2  E107               	bnz	u4821
  3531   0017B4  0E0A               	movlw	10
  3532   0017B6  5C2E               	subwf	?___fltol^0,w,c
  3533   0017B8  B0D8               	btfsc	status,0,c
  3534   0017BA  EFE1  F00B         	goto	u4821
  3535   0017BE  EFE3  F00B         	goto	u4820
  3536   0017C2                     u4821:
  3537   0017C2  EFF3  F00B         	goto	l4409
  3538   0017C6                     u4820:
  3539   0017C6  C07D  F02E         	movff	efgtoa@l,___fltol@f1
  3540   0017CA  C07E  F02F         	movff	efgtoa@l+1,___fltol@f1+1
  3541   0017CE  C07F  F030         	movff	efgtoa@l+2,___fltol@f1+2
  3542   0017D2  C080  F031         	movff	efgtoa@l+3,___fltol@f1+3
  3543   0017D6  ECB5  F018         	call	___fltol	;wreg free
  3544   0017DA  C02E  F06B         	movff	?___fltol,efgtoa@d
  3545   0017DE  C02F  F06C         	movff	?___fltol+1,efgtoa@d+1
  3546   0017E2  EFF8  F00B         	goto	l960
  3547   0017E6                     l4409:
  3548   0017E6  0E00               	movlw	0
  3549   0017E8  0100               	movlb	0	; () banked
  3550   0017EA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3551   0017EC  0E09               	movlw	9
  3552   0017EE  6F6B               	movwf	efgtoa@d& (0+255),b
  3553   0017F0                     l960:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3556   0017F0  0100               	movlb	0	; () banked
  3557   0017F2  5168               	movf	efgtoa@pp& (0+255),w,b
  3558   0017F4  A4D8               	btfss	status,2,c
  3559   0017F6  EFFF  F00B         	goto	u4831
  3560   0017FA  EF01  F00C         	goto	u4830
  3561   0017FE                     u4831:
  3562   0017FE  EF29  F00C         	goto	l4429
  3563   001802                     u4830:
  3564   001802                     
  3565                           ; BSR set to: 0
  3566   001802  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3567   001804  EF08  F00C         	goto	u4840
  3568   001808  EF06  F00C         	goto	u4841
  3569   00180C                     u4841:
  3570   00180C  EF29  F00C         	goto	l4429
  3571   001810                     u4840:
  3572   001810                     
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3575   001810  0E00               	movlw	low _dbuf
  3576   001812  2586               	addwf	efgtoa@n& (0+255),w,b
  3577   001814  6ED9               	movwf	fsr2l,c
  3578   001816  0E01               	movlw	high _dbuf
  3579   001818  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3580   00181A  6EDA               	movwf	fsr2h,c
  3581   00181C  0E2E               	movlw	46
  3582   00181E  6EDF               	movwf	indf2,c
  3583   001820                     
  3584                           ; BSR set to: 0
  3585   001820  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3586   001822  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3587   001824                     
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3590   001824  0771               	decf	efgtoa@w& (0+255),f,b
  3591   001826  A0D8               	btfss	status,0,c
  3592   001828  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3593   00182A                     
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3596   00182A  0E01               	movlw	1
  3597   00182C  6F68               	movwf	efgtoa@pp& (0+255),b
  3598   00182E  EF29  F00C         	goto	l4429
  3599   001832                     l4421:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3603   001832  0E00               	movlw	low _dbuf
  3604   001834  2586               	addwf	efgtoa@n& (0+255),w,b
  3605   001836  6ED9               	movwf	fsr2l,c
  3606   001838  0E01               	movlw	high _dbuf
  3607   00183A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3608   00183C  6EDA               	movwf	fsr2h,c
  3609   00183E  0E30               	movlw	48
  3610   001840  6EDF               	movwf	indf2,c
  3611   001842                     
  3612                           ; BSR set to: 0
  3613   001842  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3614   001844  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3615   001846                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3618   001846  0771               	decf	efgtoa@w& (0+255),f,b
  3619   001848  A0D8               	btfss	status,0,c
  3620   00184A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3621   00184C                     
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3624   00184C  0764               	decf	efgtoa@t& (0+255),f,b
  3625   00184E  A0D8               	btfss	status,0,c
  3626   001850  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3627   001852                     l4429:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3631   001852  5164               	movf	efgtoa@t& (0+255),w,b
  3632   001854  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3633   001856  A4D8               	btfss	status,2,c
  3634   001858  EF30  F00C         	goto	u4851
  3635   00185C  EF32  F00C         	goto	u4850
  3636   001860                     u4851:
  3637   001860  EF19  F00C         	goto	l4421
  3638   001864                     u4850:
  3639   001864                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3642   001864  0E00               	movlw	low _dbuf
  3643   001866  2586               	addwf	efgtoa@n& (0+255),w,b
  3644   001868  6ED9               	movwf	fsr2l,c
  3645   00186A  0E01               	movlw	high _dbuf
  3646   00186C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3647   00186E  6EDA               	movwf	fsr2h,c
  3648   001870  516B               	movf	efgtoa@d& (0+255),w,b
  3649   001872  0F30               	addlw	48
  3650   001874  6EDF               	movwf	indf2,c
  3651   001876                     
  3652                           ; BSR set to: 0
  3653   001876  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3654   001878  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3655   00187A                     
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3658   00187A  0771               	decf	efgtoa@w& (0+255),f,b
  3659   00187C  A0D8               	btfss	status,0,c
  3660   00187E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3661   001880                     
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3664   001880  C079  F01A         	movff	efgtoa@h,___flsub@b
  3665   001884  C07A  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3666   001888  C07B  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3667   00188C  C07C  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3668   001890  C07D  F005         	movff	efgtoa@l,___flmul@a
  3669   001894  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3670   001898  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3671   00189C  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3672   0018A0  C088  F001         	movff	efgtoa@u,___flmul@b
  3673   0018A4  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3674   0018A8  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3675   0018AC  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3676   0018B0  EC66  F00F         	call	___flmul	;wreg free
  3677   0018B4  C001  F01E         	movff	?___flmul,___flsub@a
  3678   0018B8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3679   0018BC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3680   0018C0  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3681   0018C4  ECC1  F01E         	call	___flsub	;wreg free
  3682   0018C8  C01A  F079         	movff	?___flsub,efgtoa@h
  3683   0018CC  C01B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3684   0018D0  C01C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3685   0018D4  C01D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3686   0018D8                     
  3687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3688   0018D8  C088  F001         	movff	efgtoa@u,___fldiv@b
  3689   0018DC  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3690   0018E0  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3691   0018E4  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3692   0018E8  0E00               	movlw	0
  3693   0018EA  6E05               	movwf	___fldiv@a^0,c
  3694   0018EC  0E00               	movlw	0
  3695   0018EE  6E06               	movwf	(___fldiv@a+1)^0,c
  3696   0018F0  0E20               	movlw	32
  3697   0018F2  6E07               	movwf	(___fldiv@a+2)^0,c
  3698   0018F4  0E41               	movlw	65
  3699   0018F6  6E08               	movwf	(___fldiv@a+3)^0,c
  3700   0018F8  EC8D  F011         	call	___fldiv	;wreg free
  3701   0018FC  C001  F088         	movff	?___fldiv,efgtoa@u
  3702   001900  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3703   001904  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3704   001908  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3705   00190C                     
  3706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3707   00190C  0100               	movlb	0	; () banked
  3708   00190E  0760               	decf	efgtoa@ne& (0+255),f,b
  3709   001910  A0D8               	btfss	status,0,c
  3710   001912  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3711   001914                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3714   001914  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3715   001916  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3716   001918                     l4445:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3720   001918  516D               	movf	efgtoa@m& (0+255),w,b
  3721   00191A  5D77               	subwf	efgtoa@i& (0+255),w,b
  3722   00191C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3723   00191E  0A80               	xorlw	128
  3724   001920  6E3E               	movwf	??_efgtoa^0,c
  3725   001922  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3726   001924  0A80               	xorlw	128
  3727   001926  583E               	subwfb	??_efgtoa^0,w,c
  3728   001928  B0D8               	btfsc	status,0,c
  3729   00192A  EF99  F00C         	goto	u4861
  3730   00192E  EF9B  F00C         	goto	u4860
  3731   001932                     u4861:
  3732   001932  EFA9  F00C         	goto	l4449
  3733   001936                     u4860:
  3734   001936                     
  3735                           ; BSR set to: 0
  3736   001936  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3737   001938  EFA7  F00C         	goto	u4871
  3738   00193C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3739   00193E  E109               	bnz	u4870
  3740   001940  0E4B               	movlw	75
  3741   001942  5D86               	subwf	efgtoa@n& (0+255),w,b
  3742   001944  A0D8               	btfss	status,0,c
  3743   001946  EFA7  F00C         	goto	u4871
  3744   00194A  EFA9  F00C         	goto	u4870
  3745   00194E                     u4871:
  3746   00194E  EFA7  F00B         	goto	l4405
  3747   001952                     u4870:
  3748   001952                     l4449:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3752   001952  0E00               	movlw	0
  3753   001954  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3754   001956  0E4F               	movlw	79
  3755   001958  6F77               	movwf	efgtoa@i& (0+255),b
  3756   00195A                     
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3759   00195A  0E00               	movlw	low _dbuf
  3760   00195C  2577               	addwf	efgtoa@i& (0+255),w,b
  3761   00195E  6ED9               	movwf	fsr2l,c
  3762   001960  0E01               	movlw	high _dbuf
  3763   001962  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3764   001964  6EDA               	movwf	fsr2h,c
  3765   001966  6ADF               	clrf	indf2,c
  3766   001968                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3769   001968  0E00               	movlw	low _dbuf
  3770   00196A  6E3E               	movwf	??_efgtoa^0,c
  3771   00196C  0E01               	movlw	high _dbuf
  3772   00196E  6E3F               	movwf	(??_efgtoa+1)^0,c
  3773   001970  5186               	movf	efgtoa@n& (0+255),w,b
  3774   001972  5E3E               	subwf	??_efgtoa^0,f,c
  3775   001974  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3776   001976  5A3F               	subwfb	(??_efgtoa+1)^0,f,c
  3777   001978  5177               	movf	efgtoa@i& (0+255),w,b
  3778   00197A  243E               	addwf	??_efgtoa^0,w,c
  3779   00197C  6E01               	movwf	memcpy@d1^0,c
  3780   00197E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3781   001980  203F               	addwfc	(??_efgtoa+1)^0,w,c
  3782   001982  6E02               	movwf	(memcpy@d1+1)^0,c
  3783   001984  0E00               	movlw	low _dbuf
  3784   001986  6E03               	movwf	memcpy@s1^0,c
  3785   001988  0E01               	movlw	high _dbuf
  3786   00198A  6E04               	movwf	(memcpy@s1+1)^0,c
  3787   00198C  C086  F005         	movff	efgtoa@n,memcpy@n
  3788   001990  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3789   001994  EC69  F01E         	call	_memcpy	;wreg free
  3790   001998                     
  3791                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3792   001998  0100               	movlb	0	; () banked
  3793   00199A  5186               	movf	efgtoa@n& (0+255),w,b
  3794   00199C  5D77               	subwf	efgtoa@i& (0+255),w,b
  3795   00199E  6F86               	movwf	efgtoa@n& (0+255),b
  3796   0019A0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3797   0019A2  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3798   0019A4  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3799   0019A6                     
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3802   0019A6  5181               	movf	efgtoa@sign& (0+255),w,b
  3803   0019A8  A4D8               	btfss	status,2,c
  3804   0019AA  EFD9  F00C         	goto	u4881
  3805   0019AE  EFDC  F00C         	goto	u4880
  3806   0019B2                     u4881:
  3807   0019B2  0E01               	movlw	1
  3808   0019B4  EFDD  F00C         	goto	u4890
  3809   0019B8                     u4880:
  3810   0019B8  0E00               	movlw	0
  3811   0019BA                     u4890:
  3812   0019BA  6F77               	movwf	efgtoa@i& (0+255),b
  3813   0019BC  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3814   0019BE                     
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3817   0019BE  5181               	movf	efgtoa@sign& (0+255),w,b
  3818   0019C0  B4D8               	btfsc	status,2,c
  3819   0019C2  EFE5  F00C         	goto	u4901
  3820   0019C6  EFE7  F00C         	goto	u4900
  3821   0019CA                     u4901:
  3822   0019CA  EFF3  F00C         	goto	l4463
  3823   0019CE                     u4900:
  3824   0019CE                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3827   0019CE  0786               	decf	efgtoa@n& (0+255),f,b
  3828   0019D0  A0D8               	btfss	status,0,c
  3829   0019D2  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3830   0019D4  0E00               	movlw	low _dbuf
  3831   0019D6  2586               	addwf	efgtoa@n& (0+255),w,b
  3832   0019D8  6ED9               	movwf	fsr2l,c
  3833   0019DA  0E01               	movlw	high _dbuf
  3834   0019DC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3835   0019DE  6EDA               	movwf	fsr2h,c
  3836   0019E0  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  3837   0019E6                     l4463:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3841   0019E6  5177               	movf	efgtoa@i& (0+255),w,b
  3842   0019E8  5F71               	subwf	efgtoa@w& (0+255),f,b
  3843   0019EA  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3844   0019EC  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3845   0019EE                     
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3848   0019EE  C038  F00F         	movff	efgtoa@fp,pad@fp
  3849   0019F2  0E00               	movlw	low _dbuf
  3850   0019F4  2586               	addwf	efgtoa@n& (0+255),w,b
  3851   0019F6  6E10               	movwf	pad@buf^0,c
  3852   0019F8  0E01               	movlw	high _dbuf
  3853   0019FA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3854   0019FC  6E11               	movwf	(pad@buf+1)^0,c
  3855   0019FE  C071  F012         	movff	efgtoa@w,pad@p
  3856   001A02  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3857   001A06  ECA2  F01D         	call	_pad	;wreg free
  3858   001A0A                     l927:
  3859   001A0A  0012               	return		;funcret
  3860   001A0C                     __end_of_efgtoa:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _strcpy *****************
  3864 ;; Defined at:
  3865 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3868 ;;		 -> dbuf(80), 
  3869 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3870 ;;		 -> STR_6(4), STR_3(4), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  d               2    4[COMRAM] PTR unsigned char 
  3873 ;;		 -> dbuf(80), 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    0[COMRAM] PTR unsigned char 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        6 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_efgtoa
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text9
  3897   003E0C                     __ptext9:
  3898                           	callstack 0
  3899   003E0C                     _strcpy:
  3900                           	callstack 26
  3901   003E0C  C001  F005         	movff	strcpy@dest,strcpy@d
  3902   003E10  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3903   003E14                     l4189:
  3904   003E14  2A03               	incf	strcpy@src^0,f,c
  3905   003E16  0403               	decf	strcpy@src^0,w,c
  3906   003E18  6E04               	movwf	??_strcpy^0,c
  3907   003E1A  0060  F013  FFF6   	movff	??_strcpy,tblptrl
  3908   003E20                     	if	1	;There is more than 1 active tblptr byte
  3909   003E20  0E10               	movlw	high __smallconst
  3910   003E22  6EF7               	movwf	tblptrh,c
  3911   003E24                     	endif
  3912   003E24                     	if	0	;tblptru may be non-zero
  3913   003E24                     	endif
  3914   003E24                     	if	0	;tblptru may be non-zero
  3915   003E24                     	endif
  3916   003E24  0060  F017  FFD9   	movff	strcpy@d,fsr2l
  3917   003E2A  0060  F01B  FFDA   	movff	strcpy@d+1,fsr2h
  3918   003E30  4A05               	infsnz	strcpy@d^0,f,c
  3919   003E32  2A06               	incf	(strcpy@d+1)^0,f,c
  3920   003E34  0008               	tblrd		*
  3921   003E36  006F FFD7 FFDF     	movff	tablat,indf2
  3922   003E3C  50DF               	movf	indf2,w,c
  3923   003E3E  A4D8               	btfss	status,2,c
  3924   003E40  EF24  F01F         	goto	u4481
  3925   003E44  EF26  F01F         	goto	u4480
  3926   003E48                     u4481:
  3927   003E48  EF0A  F01F         	goto	l4189
  3928   003E4C                     u4480:
  3929   003E4C  0012               	return		;funcret
  3930   003E4E                     __end_of_strcpy:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _memcpy *****************
  3934 ;; Defined at:
  3935 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  d1              2    0[COMRAM] PTR void 
  3938 ;;		 -> dbuf(80), 
  3939 ;;  s1              2    2[COMRAM] PTR const void 
  3940 ;;		 -> dbuf(80), 
  3941 ;;  n               2    4[COMRAM] unsigned int 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3944 ;;		 -> dbuf(80), 
  3945 ;;  d               2    7[COMRAM] PTR unsigned char 
  3946 ;;		 -> dbuf(80), 
  3947 ;;  tmp             1    6[COMRAM] unsigned char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2    0[COMRAM] PTR void 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;Total ram usage:       11 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_efgtoa
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text10
  3971   003CD2                     __ptext10:
  3972                           	callstack 0
  3973   003CD2                     _memcpy:
  3974                           	callstack 26
  3975   003CD2  C003  F00A         	movff	memcpy@s1,memcpy@s
  3976   003CD6  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  3977   003CDA  C001  F008         	movff	memcpy@d1,memcpy@d
  3978   003CDE  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  3979   003CE2  EF88  F01E         	goto	l4201
  3980   003CE6                     l4193:
  3981   003CE6  0060  F02B  FFD9   	movff	memcpy@s,fsr2l
  3982   003CEC  0060  F02F  FFDA   	movff	memcpy@s+1,fsr2h
  3983   003CF2  50DF               	movf	indf2,w,c
  3984   003CF4  6E07               	movwf	memcpy@tmp^0,c
  3985   003CF6  4A0A               	infsnz	memcpy@s^0,f,c
  3986   003CF8  2A0B               	incf	(memcpy@s+1)^0,f,c
  3987   003CFA  0060  F023  FFD9   	movff	memcpy@d,fsr2l
  3988   003D00  0060  F027  FFDA   	movff	memcpy@d+1,fsr2h
  3989   003D06  0060  F01F  FFDF   	movff	memcpy@tmp,indf2
  3990   003D0C  4A08               	infsnz	memcpy@d^0,f,c
  3991   003D0E  2A09               	incf	(memcpy@d+1)^0,f,c
  3992   003D10                     l4201:
  3993   003D10  0605               	decf	memcpy@n^0,f,c
  3994   003D12  A0D8               	btfss	status,0,c
  3995   003D14  0606               	decf	(memcpy@n+1)^0,f,c
  3996   003D16  2805               	incf	memcpy@n^0,w,c
  3997   003D18  E106               	bnz	u4491
  3998   003D1A  2806               	incf	(memcpy@n+1)^0,w,c
  3999   003D1C  A4D8               	btfss	status,2,c
  4000   003D1E  EF93  F01E         	goto	u4491
  4001   003D22  EF95  F01E         	goto	u4490
  4002   003D26                     u4491:
  4003   003D26  EF73  F01E         	goto	l4193
  4004   003D2A                     u4490:
  4005   003D2A  0012               	return		;funcret
  4006   003D2C                     __end_of_memcpy:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _labs *****************
  4010 ;; Defined at:
  4011 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  a               4    0[COMRAM] long 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  4    0[COMRAM] long 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;Total ram usage:        8 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_efgtoa
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text11
  4039   003D2C                     __ptext11:
  4040                           	callstack 0
  4041   003D2C                     _labs:
  4042                           	callstack 26
  4043   003D2C  BE04               	btfsc	(labs@a+3)^0,7,c
  4044   003D2E  EF9B  F01E         	goto	u3481
  4045   003D32  EF9D  F01E         	goto	u3480
  4046   003D36                     u3481:
  4047   003D36  EFA7  F01E         	goto	l3325
  4048   003D3A                     u3480:
  4049   003D3A  C001  F001         	movff	labs@a,?_labs
  4050   003D3E  C002  F002         	movff	labs@a+1,?_labs+1
  4051   003D42  C003  F003         	movff	labs@a+2,?_labs+2
  4052   003D46  C004  F004         	movff	labs@a+3,?_labs+3
  4053   003D4A  EFC0  F01E         	goto	l1044
  4054   003D4E                     l3325:
  4055   003D4E  C001  F005         	movff	labs@a,??_labs
  4056   003D52  C002  F006         	movff	labs@a+1,??_labs+1
  4057   003D56  C003  F007         	movff	labs@a+2,??_labs+2
  4058   003D5A  C004  F008         	movff	labs@a+3,??_labs+3
  4059   003D5E  1E05               	comf	??_labs^0,f,c
  4060   003D60  1E06               	comf	(??_labs+1)^0,f,c
  4061   003D62  1E07               	comf	(??_labs+2)^0,f,c
  4062   003D64  1E08               	comf	(??_labs+3)^0,f,c
  4063   003D66  2A05               	incf	??_labs^0,f,c
  4064   003D68  0E00               	movlw	0
  4065   003D6A  2206               	addwfc	(??_labs+1)^0,f,c
  4066   003D6C  2207               	addwfc	(??_labs+2)^0,f,c
  4067   003D6E  2208               	addwfc	(??_labs+3)^0,f,c
  4068   003D70  C005  F001         	movff	??_labs,?_labs
  4069   003D74  C006  F002         	movff	??_labs+1,?_labs+1
  4070   003D78  C007  F003         	movff	??_labs+2,?_labs+2
  4071   003D7C  C008  F004         	movff	??_labs+3,?_labs+3
  4072   003D80                     l1044:
  4073   003D80  0012               	return		;funcret
  4074   003D82                     __end_of_labs:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _floorf *****************
  4078 ;; Defined at:
  4079 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  x               4   25[COMRAM] float 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  u               4   41[COMRAM] struct .
  4084 ;;  m               4   35[COMRAM] unsigned long 
  4085 ;;  e               2   39[COMRAM] int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  4   25[COMRAM] float 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4095 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;Total ram usage:       20 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_efgtoa
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text12
  4109   002C2A                     __ptext12:
  4110                           	callstack 0
  4111   002C2A                     _floorf:
  4112                           	callstack 26
  4113   002C2A  C0E8  F02A         	movff	floorf@F521,floorf@u
  4114   002C2E  C0E9  F02B         	movff	floorf@F521+1,floorf@u+1
  4115   002C32  C0EA  F02C         	movff	floorf@F521+2,floorf@u+2
  4116   002C36  C0EB  F02D         	movff	floorf@F521+3,floorf@u+3
  4117   002C3A  C01A  F02A         	movff	floorf@x,floorf@u
  4118   002C3E  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4119   002C42  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4120   002C46  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4121   002C4A  0E81               	movlw	129
  4122   002C4C  6E1E               	movwf	??_floorf^0,c
  4123   002C4E  0EFF               	movlw	255
  4124   002C50  6E1F               	movwf	(??_floorf+1)^0,c
  4125   002C52  C02A  F020         	movff	floorf@u,??_floorf+2
  4126   002C56  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4127   002C5A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4128   002C5E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4129   002C62  0E18               	movlw	24
  4130   002C64  EF39  F016         	goto	u3490
  4131   002C68                     u3495:
  4132   002C68  90D8               	bcf	status,0,c
  4133   002C6A  3223               	rrcf	(??_floorf+5)^0,f,c
  4134   002C6C  3222               	rrcf	(??_floorf+4)^0,f,c
  4135   002C6E  3221               	rrcf	(??_floorf+3)^0,f,c
  4136   002C70  3220               	rrcf	(??_floorf+2)^0,f,c
  4137   002C72                     u3490:
  4138   002C72  2EE8               	decfsz	wreg,f,c
  4139   002C74  EF34  F016         	goto	u3495
  4140   002C78  5020               	movf	(??_floorf+2)^0,w,c
  4141   002C7A  241E               	addwf	??_floorf^0,w,c
  4142   002C7C  6E28               	movwf	floorf@e^0,c
  4143   002C7E  0E00               	movlw	0
  4144   002C80  201F               	addwfc	(??_floorf+1)^0,w,c
  4145   002C82  6E29               	movwf	(floorf@e+1)^0,c
  4146   002C84  BE29               	btfsc	(floorf@e+1)^0,7,c
  4147   002C86  EF4E  F016         	goto	u3501
  4148   002C8A  5029               	movf	(floorf@e+1)^0,w,c
  4149   002C8C  E109               	bnz	u3500
  4150   002C8E  0E17               	movlw	23
  4151   002C90  5C28               	subwf	floorf@e^0,w,c
  4152   002C92  A0D8               	btfss	status,0,c
  4153   002C94  EF4E  F016         	goto	u3501
  4154   002C98  EF50  F016         	goto	u3500
  4155   002C9C                     u3501:
  4156   002C9C  EF5A  F016         	goto	l3335
  4157   002CA0                     u3500:
  4158   002CA0                     l3333:
  4159   002CA0  C01A  F01A         	movff	floorf@x,?_floorf
  4160   002CA4  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4161   002CA8  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4162   002CAC  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4163   002CB0  EF1D  F017         	goto	l1030
  4164   002CB4                     l3335:
  4165   002CB4  BE29               	btfsc	(floorf@e+1)^0,7,c
  4166   002CB6  EF5F  F016         	goto	u3511
  4167   002CBA  EF61  F016         	goto	u3510
  4168   002CBE                     u3511:
  4169   002CBE  EFD1  F016         	goto	l3345
  4170   002CC2                     u3510:
  4171   002CC2  C028  F01E         	movff	floorf@e,??_floorf
  4172   002CC6  0EFF               	movlw	255
  4173   002CC8  6E1F               	movwf	(??_floorf+1)^0,c
  4174   002CCA  0EFF               	movlw	255
  4175   002CCC  6E20               	movwf	(??_floorf+2)^0,c
  4176   002CCE  0E7F               	movlw	127
  4177   002CD0  6E21               	movwf	(??_floorf+3)^0,c
  4178   002CD2  0E00               	movlw	0
  4179   002CD4  6E22               	movwf	(??_floorf+4)^0,c
  4180   002CD6                     u3525:
  4181   002CD6  661E               	tstfsz	??_floorf^0,c
  4182   002CD8  EF70  F016         	goto	u3526
  4183   002CDC  EF78  F016         	goto	u3527
  4184   002CE0                     u3526:
  4185   002CE0  3422               	rlcf	(??_floorf+4)^0,w,c
  4186   002CE2  3222               	rrcf	(??_floorf+4)^0,f,c
  4187   002CE4  3221               	rrcf	(??_floorf+3)^0,f,c
  4188   002CE6  3220               	rrcf	(??_floorf+2)^0,f,c
  4189   002CE8  321F               	rrcf	(??_floorf+1)^0,f,c
  4190   002CEA  2E1E               	decfsz	??_floorf^0,f,c
  4191   002CEC  EF6B  F016         	goto	u3525
  4192   002CF0                     u3527:
  4193   002CF0  C01F  F024         	movff	??_floorf+1,floorf@m
  4194   002CF4  C020  F025         	movff	??_floorf+2,floorf@m+1
  4195   002CF8  C021  F026         	movff	??_floorf+3,floorf@m+2
  4196   002CFC  C022  F027         	movff	??_floorf+4,floorf@m+3
  4197   002D00  5024               	movf	floorf@m^0,w,c
  4198   002D02  142A               	andwf	floorf@u^0,w,c
  4199   002D04  6E1E               	movwf	??_floorf^0,c
  4200   002D06  5025               	movf	(floorf@m+1)^0,w,c
  4201   002D08  142B               	andwf	(floorf@u+1)^0,w,c
  4202   002D0A  6E1F               	movwf	(??_floorf+1)^0,c
  4203   002D0C  5026               	movf	(floorf@m+2)^0,w,c
  4204   002D0E  142C               	andwf	(floorf@u+2)^0,w,c
  4205   002D10  6E20               	movwf	(??_floorf+2)^0,c
  4206   002D12  5027               	movf	(floorf@m+3)^0,w,c
  4207   002D14  142D               	andwf	(floorf@u+3)^0,w,c
  4208   002D16  6E21               	movwf	(??_floorf+3)^0,c
  4209   002D18  501E               	movf	??_floorf^0,w,c
  4210   002D1A  101F               	iorwf	(??_floorf+1)^0,w,c
  4211   002D1C  1020               	iorwf	(??_floorf+2)^0,w,c
  4212   002D1E  1021               	iorwf	(??_floorf+3)^0,w,c
  4213   002D20  A4D8               	btfss	status,2,c
  4214   002D22  EF95  F016         	goto	u3531
  4215   002D26  EF97  F016         	goto	u3530
  4216   002D2A                     u3531:
  4217   002D2A  EF99  F016         	goto	l3341
  4218   002D2E                     u3530:
  4219   002D2E  EF50  F016         	goto	l3333
  4220   002D32                     l3341:
  4221   002D32  C02A  F01E         	movff	floorf@u,??_floorf
  4222   002D36  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4223   002D3A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4224   002D3E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4225   002D42  0E20               	movlw	32
  4226   002D44  EFA9  F016         	goto	u3540
  4227   002D48                     u3545:
  4228   002D48  90D8               	bcf	status,0,c
  4229   002D4A  3221               	rrcf	(??_floorf+3)^0,f,c
  4230   002D4C  3220               	rrcf	(??_floorf+2)^0,f,c
  4231   002D4E  321F               	rrcf	(??_floorf+1)^0,f,c
  4232   002D50  321E               	rrcf	??_floorf^0,f,c
  4233   002D52                     u3540:
  4234   002D52  2EE8               	decfsz	wreg,f,c
  4235   002D54  EFA4  F016         	goto	u3545
  4236   002D58  501E               	movf	??_floorf^0,w,c
  4237   002D5A  101F               	iorwf	(??_floorf+1)^0,w,c
  4238   002D5C  1020               	iorwf	(??_floorf+2)^0,w,c
  4239   002D5E  1021               	iorwf	(??_floorf+3)^0,w,c
  4240   002D60  B4D8               	btfsc	status,2,c
  4241   002D62  EFB5  F016         	goto	u3551
  4242   002D66  EFB7  F016         	goto	u3550
  4243   002D6A                     u3551:
  4244   002D6A  EFBF  F016         	goto	l1033
  4245   002D6E                     u3550:
  4246   002D6E  5024               	movf	floorf@m^0,w,c
  4247   002D70  262A               	addwf	floorf@u^0,f,c
  4248   002D72  5025               	movf	(floorf@m+1)^0,w,c
  4249   002D74  222B               	addwfc	(floorf@u+1)^0,f,c
  4250   002D76  5026               	movf	(floorf@m+2)^0,w,c
  4251   002D78  222C               	addwfc	(floorf@u+2)^0,f,c
  4252   002D7A  5027               	movf	(floorf@m+3)^0,w,c
  4253   002D7C  222D               	addwfc	(floorf@u+3)^0,f,c
  4254   002D7E                     l1033:
  4255   002D7E  1C24               	comf	floorf@m^0,w,c
  4256   002D80  6E1E               	movwf	??_floorf^0,c
  4257   002D82  1C25               	comf	(floorf@m+1)^0,w,c
  4258   002D84  6E1F               	movwf	(??_floorf+1)^0,c
  4259   002D86  1C26               	comf	(floorf@m+2)^0,w,c
  4260   002D88  6E20               	movwf	(??_floorf+2)^0,c
  4261   002D8A  1C27               	comf	(floorf@m+3)^0,w,c
  4262   002D8C  6E21               	movwf	(??_floorf+3)^0,c
  4263   002D8E  501E               	movf	??_floorf^0,w,c
  4264   002D90  162A               	andwf	floorf@u^0,f,c
  4265   002D92  501F               	movf	(??_floorf+1)^0,w,c
  4266   002D94  162B               	andwf	(floorf@u+1)^0,f,c
  4267   002D96  5020               	movf	(??_floorf+2)^0,w,c
  4268   002D98  162C               	andwf	(floorf@u+2)^0,f,c
  4269   002D9A  5021               	movf	(??_floorf+3)^0,w,c
  4270   002D9C  162D               	andwf	(floorf@u+3)^0,f,c
  4271   002D9E  EF15  F017         	goto	l3353
  4272   002DA2                     l3345:
  4273   002DA2  C02A  F01E         	movff	floorf@u,??_floorf
  4274   002DA6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4275   002DAA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4276   002DAE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4277   002DB2  0E20               	movlw	32
  4278   002DB4  EFE1  F016         	goto	u3560
  4279   002DB8                     u3565:
  4280   002DB8  90D8               	bcf	status,0,c
  4281   002DBA  3221               	rrcf	(??_floorf+3)^0,f,c
  4282   002DBC  3220               	rrcf	(??_floorf+2)^0,f,c
  4283   002DBE  321F               	rrcf	(??_floorf+1)^0,f,c
  4284   002DC0  321E               	rrcf	??_floorf^0,f,c
  4285   002DC2                     u3560:
  4286   002DC2  2EE8               	decfsz	wreg,f,c
  4287   002DC4  EFDC  F016         	goto	u3565
  4288   002DC8  501E               	movf	??_floorf^0,w,c
  4289   002DCA  101F               	iorwf	(??_floorf+1)^0,w,c
  4290   002DCC  1020               	iorwf	(??_floorf+2)^0,w,c
  4291   002DCE  1021               	iorwf	(??_floorf+3)^0,w,c
  4292   002DD0  A4D8               	btfss	status,2,c
  4293   002DD2  EFED  F016         	goto	u3571
  4294   002DD6  EFEF  F016         	goto	u3570
  4295   002DDA                     u3571:
  4296   002DDA  EFF9  F016         	goto	l3349
  4297   002DDE                     u3570:
  4298   002DDE  0E00               	movlw	0
  4299   002DE0  6E2A               	movwf	floorf@u^0,c
  4300   002DE2  0E00               	movlw	0
  4301   002DE4  6E2B               	movwf	(floorf@u+1)^0,c
  4302   002DE6  0E00               	movlw	0
  4303   002DE8  6E2C               	movwf	(floorf@u+2)^0,c
  4304   002DEA  0E00               	movlw	0
  4305   002DEC  6E2D               	movwf	(floorf@u+3)^0,c
  4306   002DEE  EF15  F017         	goto	l3353
  4307   002DF2                     l3349:
  4308   002DF2  90D8               	bcf	status,0,c
  4309   002DF4  342A               	rlcf	floorf@u^0,w,c
  4310   002DF6  6E1E               	movwf	??_floorf^0,c
  4311   002DF8  342B               	rlcf	(floorf@u+1)^0,w,c
  4312   002DFA  6E1F               	movwf	(??_floorf+1)^0,c
  4313   002DFC  342C               	rlcf	(floorf@u+2)^0,w,c
  4314   002DFE  6E20               	movwf	(??_floorf+2)^0,c
  4315   002E00  342D               	rlcf	(floorf@u+3)^0,w,c
  4316   002E02  6E21               	movwf	(??_floorf+3)^0,c
  4317   002E04  501E               	movf	??_floorf^0,w,c
  4318   002E06  101F               	iorwf	(??_floorf+1)^0,w,c
  4319   002E08  1020               	iorwf	(??_floorf+2)^0,w,c
  4320   002E0A  1021               	iorwf	(??_floorf+3)^0,w,c
  4321   002E0C  B4D8               	btfsc	status,2,c
  4322   002E0E  EF0B  F017         	goto	u3581
  4323   002E12  EF0D  F017         	goto	u3580
  4324   002E16                     u3581:
  4325   002E16  EF15  F017         	goto	l3353
  4326   002E1A                     u3580:
  4327   002E1A  0E00               	movlw	0
  4328   002E1C  6E2A               	movwf	floorf@u^0,c
  4329   002E1E  0E00               	movlw	0
  4330   002E20  6E2B               	movwf	(floorf@u+1)^0,c
  4331   002E22  0E80               	movlw	128
  4332   002E24  6E2C               	movwf	(floorf@u+2)^0,c
  4333   002E26  0EBF               	movlw	191
  4334   002E28  6E2D               	movwf	(floorf@u+3)^0,c
  4335   002E2A                     l3353:
  4336   002E2A  C02A  F01A         	movff	floorf@u,?_floorf
  4337   002E2E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4338   002E32  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4339   002E36  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4340   002E3A                     l1030:
  4341   002E3A  0012               	return		;funcret
  4342   002E3C                     __end_of_floorf:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function ___fpclassifyf *****************
  4346 ;; Defined at:
  4347 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  x               4    0[COMRAM] float 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  u               4   10[COMRAM] struct .
  4352 ;;  e               2    8[COMRAM] int 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2    0[COMRAM] int 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;Total ram usage:       14 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_efgtoa
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text13
  4376   003374                     __ptext13:
  4377                           	callstack 0
  4378   003374                     ___fpclassifyf:
  4379                           	callstack 26
  4380   003374  C058  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4381   003378  C059  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4382   00337C  C05A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4383   003380  C05B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4384   003384  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4385   003388  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4386   00338C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4387   003390  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4388   003394  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4389   003398  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4390   00339C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4391   0033A0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4392   0033A4  0E18               	movlw	24
  4393   0033A6  EFDA  F019         	goto	u3400
  4394   0033AA                     u3405:
  4395   0033AA  90D8               	bcf	status,0,c
  4396   0033AC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4397   0033AE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4398   0033B0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4399   0033B2  3205               	rrcf	??___fpclassifyf^0,f,c
  4400   0033B4                     u3400:
  4401   0033B4  2EE8               	decfsz	wreg,f,c
  4402   0033B6  EFD5  F019         	goto	u3405
  4403   0033BA  5005               	movf	??___fpclassifyf^0,w,c
  4404   0033BC  6E09               	movwf	___fpclassifyf@e^0,c
  4405   0033BE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4406   0033C0  5009               	movf	___fpclassifyf@e^0,w,c
  4407   0033C2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4408   0033C4  A4D8               	btfss	status,2,c
  4409   0033C6  EFE7  F019         	goto	u3411
  4410   0033CA  EFE9  F019         	goto	u3410
  4411   0033CE                     u3411:
  4412   0033CE  EF09  F01A         	goto	l3307
  4413   0033D2                     u3410:
  4414   0033D2  90D8               	bcf	status,0,c
  4415   0033D4  340B               	rlcf	___fpclassifyf@u^0,w,c
  4416   0033D6  6E05               	movwf	??___fpclassifyf^0,c
  4417   0033D8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4418   0033DA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4419   0033DC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4420   0033DE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4421   0033E0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4422   0033E2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4423   0033E4  5005               	movf	??___fpclassifyf^0,w,c
  4424   0033E6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4425   0033E8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4426   0033EA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4427   0033EC  A4D8               	btfss	status,2,c
  4428   0033EE  EFFB  F019         	goto	u3421
  4429   0033F2  EFFD  F019         	goto	u3420
  4430   0033F6                     u3421:
  4431   0033F6  EF03  F01A         	goto	l3303
  4432   0033FA                     u3420:
  4433   0033FA  0E00               	movlw	0
  4434   0033FC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4435   0033FE  0E02               	movlw	2
  4436   003400  6E01               	movwf	?___fpclassifyf^0,c
  4437   003402  EF38  F01A         	goto	l1016
  4438   003406                     l3303:
  4439   003406  0E00               	movlw	0
  4440   003408  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4441   00340A  0E03               	movlw	3
  4442   00340C  6E01               	movwf	?___fpclassifyf^0,c
  4443   00340E  EF38  F01A         	goto	l1016
  4444   003412                     l3307:
  4445   003412  2809               	incf	___fpclassifyf@e^0,w,c
  4446   003414  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4447   003416  A4D8               	btfss	status,2,c
  4448   003418  EF10  F01A         	goto	u3431
  4449   00341C  EF12  F01A         	goto	u3430
  4450   003420                     u3431:
  4451   003420  EF34  F01A         	goto	l3313
  4452   003424                     u3430:
  4453   003424  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4454   003428  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4455   00342C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4456   003430  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4457   003434  0E09               	movlw	9
  4458   003436                     u3445:
  4459   003436  90D8               	bcf	status,0,c
  4460   003438  3605               	rlcf	??___fpclassifyf^0,f,c
  4461   00343A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4462   00343C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4463   00343E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4464   003440  2EE8               	decfsz	wreg,f,c
  4465   003442  EF1B  F01A         	goto	u3445
  4466   003446  5005               	movf	??___fpclassifyf^0,w,c
  4467   003448  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4468   00344A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4469   00344C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4470   00344E  B4D8               	btfsc	status,2,c
  4471   003450  EF2C  F01A         	goto	u3451
  4472   003454  EF2F  F01A         	goto	u3450
  4473   003458                     u3451:
  4474   003458  0E01               	movlw	1
  4475   00345A  EF30  F01A         	goto	u3460
  4476   00345E                     u3450:
  4477   00345E  0E00               	movlw	0
  4478   003460                     u3460:
  4479   003460  6E01               	movwf	?___fpclassifyf^0,c
  4480   003462  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4481   003464  EF38  F01A         	goto	l1016
  4482   003468                     l3313:
  4483   003468  0E00               	movlw	0
  4484   00346A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4485   00346C  0E04               	movlw	4
  4486   00346E  6E01               	movwf	?___fpclassifyf^0,c
  4487   003470                     l1016:
  4488   003470  0012               	return		;funcret
  4489   003472                     __end_of___fpclassifyf:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function ___fltol *****************
  4493 ;; Defined at:
  4494 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  f1              4   45[COMRAM] int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  exp1            1   54[COMRAM] unsigned char 
  4499 ;;  sign1           1   53[COMRAM] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  4   45[COMRAM] long 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;Total ram usage:       10 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;;		_writeData16
  4520 ;;		_efgtoa
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text14
  4525   00316A                     __ptext14:
  4526                           	callstack 0
  4527   00316A                     ___fltol:
  4528                           	callstack 29
  4529   00316A  3430               	rlcf	(___fltol@f1+2)^0,w,c
  4530   00316C  3431               	rlcf	(___fltol@f1+3)^0,w,c
  4531   00316E  6E37               	movwf	___fltol@exp1^0,c
  4532   003170  5037               	movf	___fltol@exp1^0,w,c
  4533   003172  A4D8               	btfss	status,2,c
  4534   003174  EFBE  F018         	goto	u3301
  4535   003178  EFC0  F018         	goto	u3300
  4536   00317C                     u3301:
  4537   00317C  EFCA  F018         	goto	l3241
  4538   003180                     u3300:
  4539   003180                     l3237:
  4540   003180  0E00               	movlw	0
  4541   003182  6E2E               	movwf	?___fltol^0,c
  4542   003184  0E00               	movlw	0
  4543   003186  6E2F               	movwf	(?___fltol+1)^0,c
  4544   003188  0E00               	movlw	0
  4545   00318A  6E30               	movwf	(?___fltol+2)^0,c
  4546   00318C  0E00               	movlw	0
  4547   00318E  6E31               	movwf	(?___fltol+3)^0,c
  4548   003190  EF37  F019         	goto	l484
  4549   003194                     l3241:
  4550   003194  C02E  F032         	movff	___fltol@f1,??___fltol
  4551   003198  C02F  F033         	movff	___fltol@f1+1,??___fltol+1
  4552   00319C  C030  F034         	movff	___fltol@f1+2,??___fltol+2
  4553   0031A0  C031  F035         	movff	___fltol@f1+3,??___fltol+3
  4554   0031A4  0E20               	movlw	32
  4555   0031A6  EFDA  F018         	goto	u3310
  4556   0031AA                     u3315:
  4557   0031AA  90D8               	bcf	status,0,c
  4558   0031AC  3235               	rrcf	(??___fltol+3)^0,f,c
  4559   0031AE  3234               	rrcf	(??___fltol+2)^0,f,c
  4560   0031B0  3233               	rrcf	(??___fltol+1)^0,f,c
  4561   0031B2  3232               	rrcf	??___fltol^0,f,c
  4562   0031B4                     u3310:
  4563   0031B4  2EE8               	decfsz	wreg,f,c
  4564   0031B6  EFD5  F018         	goto	u3315
  4565   0031BA  5032               	movf	??___fltol^0,w,c
  4566   0031BC  6E36               	movwf	___fltol@sign1^0,c
  4567   0031BE  8E30               	bsf	(___fltol@f1+2)^0,7,c
  4568   0031C0  0EFF               	movlw	255
  4569   0031C2  162E               	andwf	___fltol@f1^0,f,c
  4570   0031C4  0EFF               	movlw	255
  4571   0031C6  162F               	andwf	(___fltol@f1+1)^0,f,c
  4572   0031C8  0EFF               	movlw	255
  4573   0031CA  1630               	andwf	(___fltol@f1+2)^0,f,c
  4574   0031CC  0E00               	movlw	0
  4575   0031CE  1631               	andwf	(___fltol@f1+3)^0,f,c
  4576   0031D0  0E96               	movlw	150
  4577   0031D2  5E37               	subwf	___fltol@exp1^0,f,c
  4578   0031D4  BE37               	btfsc	___fltol@exp1^0,7,c
  4579   0031D6  EFF1  F018         	goto	u3320
  4580   0031DA  EFEF  F018         	goto	u3321
  4581   0031DE                     u3321:
  4582   0031DE  EF07  F019         	goto	l3261
  4583   0031E2                     u3320:
  4584   0031E2  5037               	movf	___fltol@exp1^0,w,c
  4585   0031E4  0A80               	xorlw	128
  4586   0031E6  0F97               	addlw	151
  4587   0031E8  B0D8               	btfsc	status,0,c
  4588   0031EA  EFF9  F018         	goto	u3331
  4589   0031EE  EFFB  F018         	goto	u3330
  4590   0031F2                     u3331:
  4591   0031F2  EFFD  F018         	goto	l3257
  4592   0031F6                     u3330:
  4593   0031F6  EFC0  F018         	goto	l3237
  4594   0031FA                     l3257:
  4595   0031FA  90D8               	bcf	status,0,c
  4596   0031FC  3231               	rrcf	(___fltol@f1+3)^0,f,c
  4597   0031FE  3230               	rrcf	(___fltol@f1+2)^0,f,c
  4598   003200  322F               	rrcf	(___fltol@f1+1)^0,f,c
  4599   003202  322E               	rrcf	___fltol@f1^0,f,c
  4600   003204  3E37               	incfsz	___fltol@exp1^0,f,c
  4601   003206  EFFD  F018         	goto	l3257
  4602   00320A  EF1F  F019         	goto	l3271
  4603   00320E                     l3261:
  4604   00320E  0E1F               	movlw	31
  4605   003210  6437               	cpfsgt	___fltol@exp1^0,c
  4606   003212  EF0D  F019         	goto	u3341
  4607   003216  EF0F  F019         	goto	u3340
  4608   00321A                     u3341:
  4609   00321A  EF17  F019         	goto	l3269
  4610   00321E                     u3340:
  4611   00321E  EFC0  F018         	goto	l3237
  4612   003222                     l3267:
  4613   003222  90D8               	bcf	status,0,c
  4614   003224  362E               	rlcf	___fltol@f1^0,f,c
  4615   003226  362F               	rlcf	(___fltol@f1+1)^0,f,c
  4616   003228  3630               	rlcf	(___fltol@f1+2)^0,f,c
  4617   00322A  3631               	rlcf	(___fltol@f1+3)^0,f,c
  4618   00322C  0637               	decf	___fltol@exp1^0,f,c
  4619   00322E                     l3269:
  4620   00322E  5037               	movf	___fltol@exp1^0,w,c
  4621   003230  A4D8               	btfss	status,2,c
  4622   003232  EF1D  F019         	goto	u3351
  4623   003236  EF1F  F019         	goto	u3350
  4624   00323A                     u3351:
  4625   00323A  EF11  F019         	goto	l3267
  4626   00323E                     u3350:
  4627   00323E                     l3271:
  4628   00323E  5036               	movf	___fltol@sign1^0,w,c
  4629   003240  B4D8               	btfsc	status,2,c
  4630   003242  EF25  F019         	goto	u3361
  4631   003246  EF27  F019         	goto	u3360
  4632   00324A                     u3361:
  4633   00324A  EF2F  F019         	goto	l3275
  4634   00324E                     u3360:
  4635   00324E  1E31               	comf	(___fltol@f1+3)^0,f,c
  4636   003250  1E30               	comf	(___fltol@f1+2)^0,f,c
  4637   003252  1E2F               	comf	(___fltol@f1+1)^0,f,c
  4638   003254  6C2E               	negf	___fltol@f1^0,c
  4639   003256  0E00               	movlw	0
  4640   003258  222F               	addwfc	(___fltol@f1+1)^0,f,c
  4641   00325A  2230               	addwfc	(___fltol@f1+2)^0,f,c
  4642   00325C  2231               	addwfc	(___fltol@f1+3)^0,f,c
  4643   00325E                     l3275:
  4644   00325E  C02E  F02E         	movff	___fltol@f1,?___fltol
  4645   003262  C02F  F02F         	movff	___fltol@f1+1,?___fltol+1
  4646   003266  C030  F030         	movff	___fltol@f1+2,?___fltol+2
  4647   00326A  C031  F031         	movff	___fltol@f1+3,?___fltol+3
  4648   00326E                     l484:
  4649   00326E  0012               	return		;funcret
  4650   003270                     __end_of___fltol:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function ___flsub *****************
  4654 ;; Defined at:
  4655 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  b               4   25[COMRAM] long 
  4658 ;;  a               4   29[COMRAM] long 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  4   25[COMRAM] long 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;Total ram usage:        8 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 1
  4677 ;; This function calls:
  4678 ;;		___fladd
  4679 ;; This function is called by:
  4680 ;;		_efgtoa
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text15
  4685   003D82                     __ptext15:
  4686                           	callstack 0
  4687   003D82                     ___flsub:
  4688                           	callstack 25
  4689   003D82  0E00               	movlw	0
  4690   003D84  1A1E               	xorwf	___flsub@a^0,f,c
  4691   003D86  0E00               	movlw	0
  4692   003D88  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4693   003D8A  0E00               	movlw	0
  4694   003D8C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4695   003D8E  0E80               	movlw	128
  4696   003D90  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4697   003D92  C01A  F001         	movff	___flsub@b,___fladd@b
  4698   003D96  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4699   003D9A  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4700   003D9E  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4701   003DA2  C01E  F005         	movff	___flsub@a,___fladd@a
  4702   003DA6  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4703   003DAA  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4704   003DAE  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4705   003DB2  EC06  F00D         	call	___fladd	;wreg free
  4706   003DB6  C001  F01A         	movff	?___fladd,?___flsub
  4707   003DBA  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4708   003DBE  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4709   003DC2  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4710   003DC6  0012               	return		;funcret
  4711   003DC8                     __end_of___flsub:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function ___fladd *****************
  4715 ;; Defined at:
  4716 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  b               4    0[COMRAM] long 
  4719 ;;  a               4    4[COMRAM] long 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  grs             1   15[COMRAM] unsigned char 
  4722 ;;  bexp            1   14[COMRAM] unsigned char 
  4723 ;;  aexp            1   13[COMRAM] unsigned char 
  4724 ;;  signs           1   12[COMRAM] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  4    0[COMRAM] unsigned char 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4734 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;Total ram usage:       16 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;;		___flsub
  4745 ;;		_efgtoa
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text16
  4750   001A0C                     __ptext16:
  4751                           	callstack 0
  4752   001A0C                     ___fladd:
  4753                           	callstack 25
  4754   001A0C  5004               	movf	(___fladd@b+3)^0,w,c
  4755   001A0E  0B80               	andlw	128
  4756   001A10  6E0D               	movwf	___fladd@signs^0,c
  4757   001A12  5004               	movf	(___fladd@b+3)^0,w,c
  4758   001A14  2404               	addwf	(___fladd@b+3)^0,w,c
  4759   001A16  6E0F               	movwf	___fladd@bexp^0,c
  4760   001A18  AE03               	btfss	(___fladd@b+2)^0,7,c
  4761   001A1A  EF11  F00D         	goto	u2271
  4762   001A1E  EF13  F00D         	goto	u2270
  4763   001A22                     u2271:
  4764   001A22  EF14  F00D         	goto	l2625
  4765   001A26                     u2270:
  4766   001A26  800F               	bsf	___fladd@bexp^0,0,c
  4767   001A28                     l2625:
  4768   001A28  500F               	movf	___fladd@bexp^0,w,c
  4769   001A2A  B4D8               	btfsc	status,2,c
  4770   001A2C  EF1A  F00D         	goto	u2281
  4771   001A30  EF1C  F00D         	goto	u2280
  4772   001A34                     u2281:
  4773   001A34  EF31  F00D         	goto	l2635
  4774   001A38                     u2280:
  4775   001A38  280F               	incf	___fladd@bexp^0,w,c
  4776   001A3A  A4D8               	btfss	status,2,c
  4777   001A3C  EF22  F00D         	goto	u2291
  4778   001A40  EF24  F00D         	goto	u2290
  4779   001A44                     u2291:
  4780   001A44  EF2C  F00D         	goto	l2631
  4781   001A48                     u2290:
  4782   001A48  0E00               	movlw	0
  4783   001A4A  6E01               	movwf	___fladd@b^0,c
  4784   001A4C  0E00               	movlw	0
  4785   001A4E  6E02               	movwf	(___fladd@b+1)^0,c
  4786   001A50  0E00               	movlw	0
  4787   001A52  6E03               	movwf	(___fladd@b+2)^0,c
  4788   001A54  0E00               	movlw	0
  4789   001A56  6E04               	movwf	(___fladd@b+3)^0,c
  4790   001A58                     l2631:
  4791   001A58  8E03               	bsf	(___fladd@b+2)^0,7,c
  4792   001A5A  0E00               	movlw	0
  4793   001A5C  6E04               	movwf	(___fladd@b+3)^0,c
  4794   001A5E  EF39  F00D         	goto	l2637
  4795   001A62                     l2635:
  4796   001A62  0E00               	movlw	0
  4797   001A64  6E01               	movwf	___fladd@b^0,c
  4798   001A66  0E00               	movlw	0
  4799   001A68  6E02               	movwf	(___fladd@b+1)^0,c
  4800   001A6A  0E00               	movlw	0
  4801   001A6C  6E03               	movwf	(___fladd@b+2)^0,c
  4802   001A6E  0E00               	movlw	0
  4803   001A70  6E04               	movwf	(___fladd@b+3)^0,c
  4804   001A72                     l2637:
  4805   001A72  5008               	movf	(___fladd@a+3)^0,w,c
  4806   001A74  0B80               	andlw	128
  4807   001A76  6E0E               	movwf	___fladd@aexp^0,c
  4808   001A78  500D               	movf	___fladd@signs^0,w,c
  4809   001A7A  180E               	xorwf	___fladd@aexp^0,w,c
  4810   001A7C  B4D8               	btfsc	status,2,c
  4811   001A7E  EF43  F00D         	goto	u2301
  4812   001A82  EF45  F00D         	goto	u2300
  4813   001A86                     u2301:
  4814   001A86  EF46  F00D         	goto	l2643
  4815   001A8A                     u2300:
  4816   001A8A  8C0D               	bsf	___fladd@signs^0,6,c
  4817   001A8C                     l2643:
  4818   001A8C  5008               	movf	(___fladd@a+3)^0,w,c
  4819   001A8E  2408               	addwf	(___fladd@a+3)^0,w,c
  4820   001A90  6E0E               	movwf	___fladd@aexp^0,c
  4821   001A92  AE07               	btfss	(___fladd@a+2)^0,7,c
  4822   001A94  EF4E  F00D         	goto	u2311
  4823   001A98  EF50  F00D         	goto	u2310
  4824   001A9C                     u2311:
  4825   001A9C  EF51  F00D         	goto	l2649
  4826   001AA0                     u2310:
  4827   001AA0  800E               	bsf	___fladd@aexp^0,0,c
  4828   001AA2                     l2649:
  4829   001AA2  500E               	movf	___fladd@aexp^0,w,c
  4830   001AA4  B4D8               	btfsc	status,2,c
  4831   001AA6  EF57  F00D         	goto	u2321
  4832   001AAA  EF59  F00D         	goto	u2320
  4833   001AAE                     u2321:
  4834   001AAE  EF6E  F00D         	goto	l2659
  4835   001AB2                     u2320:
  4836   001AB2  280E               	incf	___fladd@aexp^0,w,c
  4837   001AB4  A4D8               	btfss	status,2,c
  4838   001AB6  EF5F  F00D         	goto	u2331
  4839   001ABA  EF61  F00D         	goto	u2330
  4840   001ABE                     u2331:
  4841   001ABE  EF69  F00D         	goto	l2655
  4842   001AC2                     u2330:
  4843   001AC2  0E00               	movlw	0
  4844   001AC4  6E05               	movwf	___fladd@a^0,c
  4845   001AC6  0E00               	movlw	0
  4846   001AC8  6E06               	movwf	(___fladd@a+1)^0,c
  4847   001ACA  0E00               	movlw	0
  4848   001ACC  6E07               	movwf	(___fladd@a+2)^0,c
  4849   001ACE  0E00               	movlw	0
  4850   001AD0  6E08               	movwf	(___fladd@a+3)^0,c
  4851   001AD2                     l2655:
  4852   001AD2  8E07               	bsf	(___fladd@a+2)^0,7,c
  4853   001AD4  0E00               	movlw	0
  4854   001AD6  6E08               	movwf	(___fladd@a+3)^0,c
  4855   001AD8  EF76  F00D         	goto	l2661
  4856   001ADC                     l2659:
  4857   001ADC  0E00               	movlw	0
  4858   001ADE  6E05               	movwf	___fladd@a^0,c
  4859   001AE0  0E00               	movlw	0
  4860   001AE2  6E06               	movwf	(___fladd@a+1)^0,c
  4861   001AE4  0E00               	movlw	0
  4862   001AE6  6E07               	movwf	(___fladd@a+2)^0,c
  4863   001AE8  0E00               	movlw	0
  4864   001AEA  6E08               	movwf	(___fladd@a+3)^0,c
  4865   001AEC                     l2661:
  4866   001AEC  500F               	movf	___fladd@bexp^0,w,c
  4867   001AEE  5C0E               	subwf	___fladd@aexp^0,w,c
  4868   001AF0  B0D8               	btfsc	status,0,c
  4869   001AF2  EF7D  F00D         	goto	u2341
  4870   001AF6  EF7F  F00D         	goto	u2340
  4871   001AFA                     u2341:
  4872   001AFA  EFA6  F00D         	goto	l2697
  4873   001AFE                     u2340:
  4874   001AFE  AC0D               	btfss	___fladd@signs^0,6,c
  4875   001B00  EF84  F00D         	goto	u2351
  4876   001B04  EF86  F00D         	goto	u2350
  4877   001B08                     u2351:
  4878   001B08  EF88  F00D         	goto	l2667
  4879   001B0C                     u2350:
  4880   001B0C  0E80               	movlw	128
  4881   001B0E  1A0D               	xorwf	___fladd@signs^0,f,c
  4882   001B10                     l2667:
  4883   001B10  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4884   001B14  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4885   001B18  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4886   001B1C  C001  F010         	movff	___fladd@b,___fladd@grs
  4887   001B20  C005  F001         	movff	___fladd@a,___fladd@b
  4888   001B24  C010  F005         	movff	___fladd@grs,___fladd@a
  4889   001B28  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4890   001B2C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4891   001B30  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4892   001B34  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4893   001B38  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4894   001B3C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4895   001B40  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4896   001B44  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4897   001B48  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4898   001B4C                     l2697:
  4899   001B4C  0E00               	movlw	0
  4900   001B4E  6E10               	movwf	___fladd@grs^0,c
  4901   001B50  500F               	movf	___fladd@bexp^0,w,c
  4902   001B52  C00E  F009         	movff	___fladd@aexp,??___fladd
  4903   001B56  6A0A               	clrf	(??___fladd+1)^0,c
  4904   001B58  5E09               	subwf	??___fladd^0,f,c
  4905   001B5A  0E00               	movlw	0
  4906   001B5C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4907   001B5E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4908   001B60  EFBB  F00D         	goto	u2361
  4909   001B64  500A               	movf	(??___fladd+1)^0,w,c
  4910   001B66  E109               	bnz	u2360
  4911   001B68  0E1A               	movlw	26
  4912   001B6A  5C09               	subwf	??___fladd^0,w,c
  4913   001B6C  A0D8               	btfss	status,0,c
  4914   001B6E  EFBB  F00D         	goto	u2361
  4915   001B72  EFBD  F00D         	goto	u2360
  4916   001B76                     u2361:
  4917   001B76  EFF4  F00D         	goto	l716
  4918   001B7A                     u2360:
  4919   001B7A  5001               	movf	___fladd@b^0,w,c
  4920   001B7C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4921   001B7E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4922   001B80  1004               	iorwf	(___fladd@b+3)^0,w,c
  4923   001B82  A4D8               	btfss	status,2,c
  4924   001B84  EFC6  F00D         	goto	u2371
  4925   001B88  EFC9  F00D         	goto	u2370
  4926   001B8C                     u2371:
  4927   001B8C  0E01               	movlw	1
  4928   001B8E  EFCA  F00D         	goto	u2380
  4929   001B92                     u2370:
  4930   001B92  0E00               	movlw	0
  4931   001B94                     u2380:
  4932   001B94  6E10               	movwf	___fladd@grs^0,c
  4933   001B96  0E00               	movlw	0
  4934   001B98  6E01               	movwf	___fladd@b^0,c
  4935   001B9A  0E00               	movlw	0
  4936   001B9C  6E02               	movwf	(___fladd@b+1)^0,c
  4937   001B9E  0E00               	movlw	0
  4938   001BA0  6E03               	movwf	(___fladd@b+2)^0,c
  4939   001BA2  0E00               	movlw	0
  4940   001BA4  6E04               	movwf	(___fladd@b+3)^0,c
  4941   001BA6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4942   001BAA  EFFD  F00D         	goto	l715
  4943   001BAE                     l717:
  4944   001BAE  A010               	btfss	___fladd@grs^0,0,c
  4945   001BB0  EFDC  F00D         	goto	u2391
  4946   001BB4  EFDE  F00D         	goto	u2390
  4947   001BB8                     u2391:
  4948   001BB8  EFE4  F00D         	goto	l2709
  4949   001BBC                     u2390:
  4950   001BBC  90D8               	bcf	status,0,c
  4951   001BBE  3010               	rrcf	___fladd@grs^0,w,c
  4952   001BC0  0901               	iorlw	1
  4953   001BC2  6E10               	movwf	___fladd@grs^0,c
  4954   001BC4  EFE6  F00D         	goto	l2711
  4955   001BC8                     l2709:
  4956   001BC8  90D8               	bcf	status,0,c
  4957   001BCA  3210               	rrcf	___fladd@grs^0,f,c
  4958   001BCC                     l2711:
  4959   001BCC  A001               	btfss	___fladd@b^0,0,c
  4960   001BCE  EFEB  F00D         	goto	u2401
  4961   001BD2  EFED  F00D         	goto	u2400
  4962   001BD6                     u2401:
  4963   001BD6  EFEE  F00D         	goto	l2715
  4964   001BDA                     u2400:
  4965   001BDA  8E10               	bsf	___fladd@grs^0,7,c
  4966   001BDC                     l2715:
  4967   001BDC  3404               	rlcf	(___fladd@b+3)^0,w,c
  4968   001BDE  3204               	rrcf	(___fladd@b+3)^0,f,c
  4969   001BE0  3203               	rrcf	(___fladd@b+2)^0,f,c
  4970   001BE2  3202               	rrcf	(___fladd@b+1)^0,f,c
  4971   001BE4  3201               	rrcf	___fladd@b^0,f,c
  4972   001BE6  2A0F               	incf	___fladd@bexp^0,f,c
  4973   001BE8                     l716:
  4974   001BE8  500E               	movf	___fladd@aexp^0,w,c
  4975   001BEA  5C0F               	subwf	___fladd@bexp^0,w,c
  4976   001BEC  A0D8               	btfss	status,0,c
  4977   001BEE  EFFB  F00D         	goto	u2411
  4978   001BF2  EFFD  F00D         	goto	u2410
  4979   001BF6                     u2411:
  4980   001BF6  EFD7  F00D         	goto	l717
  4981   001BFA                     u2410:
  4982   001BFA                     l715:
  4983   001BFA  BC0D               	btfsc	___fladd@signs^0,6,c
  4984   001BFC  EF02  F00E         	goto	u2421
  4985   001C00  EF04  F00E         	goto	u2420
  4986   001C04                     u2421:
  4987   001C04  EF44  F00E         	goto	l2743
  4988   001C08                     u2420:
  4989   001C08  500F               	movf	___fladd@bexp^0,w,c
  4990   001C0A  A4D8               	btfss	status,2,c
  4991   001C0C  EF0A  F00E         	goto	u2431
  4992   001C10  EF0C  F00E         	goto	u2430
  4993   001C14                     u2431:
  4994   001C14  EF16  F00E         	goto	l2725
  4995   001C18                     u2430:
  4996   001C18  0E00               	movlw	0
  4997   001C1A  6E01               	movwf	?___fladd^0,c
  4998   001C1C  0E00               	movlw	0
  4999   001C1E  6E02               	movwf	(?___fladd+1)^0,c
  5000   001C20  0E00               	movlw	0
  5001   001C22  6E03               	movwf	(?___fladd+2)^0,c
  5002   001C24  0E00               	movlw	0
  5003   001C26  6E04               	movwf	(?___fladd+3)^0,c
  5004   001C28  EF65  F00F         	goto	l724
  5005   001C2C                     l2725:
  5006   001C2C  5005               	movf	___fladd@a^0,w,c
  5007   001C2E  2601               	addwf	___fladd@b^0,f,c
  5008   001C30  5006               	movf	(___fladd@a+1)^0,w,c
  5009   001C32  2202               	addwfc	(___fladd@b+1)^0,f,c
  5010   001C34  5007               	movf	(___fladd@a+2)^0,w,c
  5011   001C36  2203               	addwfc	(___fladd@b+2)^0,f,c
  5012   001C38  5008               	movf	(___fladd@a+3)^0,w,c
  5013   001C3A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5014   001C3C  A004               	btfss	(___fladd@b+3)^0,0,c
  5015   001C3E  EF23  F00E         	goto	u2441
  5016   001C42  EF25  F00E         	goto	u2440
  5017   001C46                     u2441:
  5018   001C46  EFD1  F00E         	goto	l2779
  5019   001C4A                     u2440:
  5020   001C4A  A010               	btfss	___fladd@grs^0,0,c
  5021   001C4C  EF2A  F00E         	goto	u2451
  5022   001C50  EF2C  F00E         	goto	u2450
  5023   001C54                     u2451:
  5024   001C54  EF32  F00E         	goto	l2733
  5025   001C58                     u2450:
  5026   001C58  90D8               	bcf	status,0,c
  5027   001C5A  3010               	rrcf	___fladd@grs^0,w,c
  5028   001C5C  0901               	iorlw	1
  5029   001C5E  6E10               	movwf	___fladd@grs^0,c
  5030   001C60  EF34  F00E         	goto	l2735
  5031   001C64                     l2733:
  5032   001C64  90D8               	bcf	status,0,c
  5033   001C66  3210               	rrcf	___fladd@grs^0,f,c
  5034   001C68                     l2735:
  5035   001C68  A001               	btfss	___fladd@b^0,0,c
  5036   001C6A  EF39  F00E         	goto	u2461
  5037   001C6E  EF3B  F00E         	goto	u2460
  5038   001C72                     u2461:
  5039   001C72  EF3C  F00E         	goto	l2739
  5040   001C76                     u2460:
  5041   001C76  8E10               	bsf	___fladd@grs^0,7,c
  5042   001C78                     l2739:
  5043   001C78  3404               	rlcf	(___fladd@b+3)^0,w,c
  5044   001C7A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5045   001C7C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5046   001C7E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5047   001C80  3201               	rrcf	___fladd@b^0,f,c
  5048   001C82  2A0F               	incf	___fladd@bexp^0,f,c
  5049   001C84  EFD1  F00E         	goto	l2779
  5050   001C88                     l2743:
  5051   001C88  5005               	movf	___fladd@a^0,w,c
  5052   001C8A  5C01               	subwf	___fladd@b^0,w,c
  5053   001C8C  5006               	movf	(___fladd@a+1)^0,w,c
  5054   001C8E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5055   001C90  5007               	movf	(___fladd@a+2)^0,w,c
  5056   001C92  5803               	subwfb	(___fladd@b+2)^0,w,c
  5057   001C94  5004               	movf	(___fladd@b+3)^0,w,c
  5058   001C96  0A80               	xorlw	128
  5059   001C98  6E09               	movwf	??___fladd^0,c
  5060   001C9A  5008               	movf	(___fladd@a+3)^0,w,c
  5061   001C9C  0A80               	xorlw	128
  5062   001C9E  5809               	subwfb	??___fladd^0,w,c
  5063   001CA0  B0D8               	btfsc	status,0,c
  5064   001CA2  EF55  F00E         	goto	u2471
  5065   001CA6  EF57  F00E         	goto	u2470
  5066   001CAA                     u2471:
  5067   001CAA  EF82  F00E         	goto	l2753
  5068   001CAE                     u2470:
  5069   001CAE  5001               	movf	___fladd@b^0,w,c
  5070   001CB0  5C05               	subwf	___fladd@a^0,w,c
  5071   001CB2  6E09               	movwf	??___fladd^0,c
  5072   001CB4  5002               	movf	(___fladd@b+1)^0,w,c
  5073   001CB6  5806               	subwfb	(___fladd@a+1)^0,w,c
  5074   001CB8  6E0A               	movwf	(??___fladd+1)^0,c
  5075   001CBA  5003               	movf	(___fladd@b+2)^0,w,c
  5076   001CBC  5807               	subwfb	(___fladd@a+2)^0,w,c
  5077   001CBE  6E0B               	movwf	(??___fladd+2)^0,c
  5078   001CC0  5004               	movf	(___fladd@b+3)^0,w,c
  5079   001CC2  5808               	subwfb	(___fladd@a+3)^0,w,c
  5080   001CC4  6E0C               	movwf	(??___fladd+3)^0,c
  5081   001CC6  0EFF               	movlw	255
  5082   001CC8  2409               	addwf	??___fladd^0,w,c
  5083   001CCA  6E01               	movwf	___fladd@b^0,c
  5084   001CCC  0EFF               	movlw	255
  5085   001CCE  200A               	addwfc	(??___fladd+1)^0,w,c
  5086   001CD0  6E02               	movwf	(___fladd@b+1)^0,c
  5087   001CD2  0EFF               	movlw	255
  5088   001CD4  200B               	addwfc	(??___fladd+2)^0,w,c
  5089   001CD6  6E03               	movwf	(___fladd@b+2)^0,c
  5090   001CD8  0EFF               	movlw	255
  5091   001CDA  200C               	addwfc	(??___fladd+3)^0,w,c
  5092   001CDC  6E04               	movwf	(___fladd@b+3)^0,c
  5093   001CDE  0E80               	movlw	128
  5094   001CE0  1A0D               	xorwf	___fladd@signs^0,f,c
  5095   001CE2  6C10               	negf	___fladd@grs^0,c
  5096   001CE4  5010               	movf	___fladd@grs^0,w,c
  5097   001CE6  A4D8               	btfss	status,2,c
  5098   001CE8  EF78  F00E         	goto	u2481
  5099   001CEC  EF7A  F00E         	goto	u2480
  5100   001CF0                     u2481:
  5101   001CF0  EF8A  F00E         	goto	l732
  5102   001CF4                     u2480:
  5103   001CF4  0E01               	movlw	1
  5104   001CF6  2601               	addwf	___fladd@b^0,f,c
  5105   001CF8  0E00               	movlw	0
  5106   001CFA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5107   001CFC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5108   001CFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5109   001D00  EF8A  F00E         	goto	l732
  5110   001D04                     l2753:
  5111   001D04  5005               	movf	___fladd@a^0,w,c
  5112   001D06  5E01               	subwf	___fladd@b^0,f,c
  5113   001D08  5006               	movf	(___fladd@a+1)^0,w,c
  5114   001D0A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5115   001D0C  5007               	movf	(___fladd@a+2)^0,w,c
  5116   001D0E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5117   001D10  5008               	movf	(___fladd@a+3)^0,w,c
  5118   001D12  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5119   001D14                     l732:
  5120   001D14  5001               	movf	___fladd@b^0,w,c
  5121   001D16  1002               	iorwf	(___fladd@b+1)^0,w,c
  5122   001D18  1003               	iorwf	(___fladd@b+2)^0,w,c
  5123   001D1A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5124   001D1C  A4D8               	btfss	status,2,c
  5125   001D1E  EF93  F00E         	goto	u2491
  5126   001D22  EF95  F00E         	goto	u2490
  5127   001D26                     u2491:
  5128   001D26  EFCA  F00E         	goto	l2777
  5129   001D2A                     u2490:
  5130   001D2A  5010               	movf	___fladd@grs^0,w,c
  5131   001D2C  A4D8               	btfss	status,2,c
  5132   001D2E  EF9B  F00E         	goto	u2501
  5133   001D32  EF9D  F00E         	goto	u2500
  5134   001D36                     u2501:
  5135   001D36  EFCA  F00E         	goto	l2777
  5136   001D3A                     u2500:
  5137   001D3A  0E00               	movlw	0
  5138   001D3C  6E01               	movwf	?___fladd^0,c
  5139   001D3E  0E00               	movlw	0
  5140   001D40  6E02               	movwf	(?___fladd+1)^0,c
  5141   001D42  0E00               	movlw	0
  5142   001D44  6E03               	movwf	(?___fladd+2)^0,c
  5143   001D46  0E00               	movlw	0
  5144   001D48  6E04               	movwf	(?___fladd+3)^0,c
  5145   001D4A  EF65  F00F         	goto	l724
  5146   001D4E                     l2761:
  5147   001D4E  90D8               	bcf	status,0,c
  5148   001D50  3601               	rlcf	___fladd@b^0,f,c
  5149   001D52  3602               	rlcf	(___fladd@b+1)^0,f,c
  5150   001D54  3603               	rlcf	(___fladd@b+2)^0,f,c
  5151   001D56  3604               	rlcf	(___fladd@b+3)^0,f,c
  5152   001D58  AE10               	btfss	___fladd@grs^0,7,c
  5153   001D5A  EFB1  F00E         	goto	u2511
  5154   001D5E  EFB3  F00E         	goto	u2510
  5155   001D62                     u2511:
  5156   001D62  EFB4  F00E         	goto	l2767
  5157   001D66                     u2510:
  5158   001D66  8001               	bsf	___fladd@b^0,0,c
  5159   001D68                     l2767:
  5160   001D68  A010               	btfss	___fladd@grs^0,0,c
  5161   001D6A  EFB9  F00E         	goto	u2521
  5162   001D6E  EFBB  F00E         	goto	u2520
  5163   001D72                     u2521:
  5164   001D72  EFBF  F00E         	goto	l2771
  5165   001D76                     u2520:
  5166   001D76  80D8               	bsf	status,0,c
  5167   001D78  3610               	rlcf	___fladd@grs^0,f,c
  5168   001D7A  EFC1  F00E         	goto	l2773
  5169   001D7E                     l2771:
  5170   001D7E  90D8               	bcf	status,0,c
  5171   001D80  3610               	rlcf	___fladd@grs^0,f,c
  5172   001D82                     l2773:
  5173   001D82  500F               	movf	___fladd@bexp^0,w,c
  5174   001D84  B4D8               	btfsc	status,2,c
  5175   001D86  EFC7  F00E         	goto	u2531
  5176   001D8A  EFC9  F00E         	goto	u2530
  5177   001D8E                     u2531:
  5178   001D8E  EFCA  F00E         	goto	l2777
  5179   001D92                     u2530:
  5180   001D92  060F               	decf	___fladd@bexp^0,f,c
  5181   001D94                     l2777:
  5182   001D94  AE03               	btfss	(___fladd@b+2)^0,7,c
  5183   001D96  EFCF  F00E         	goto	u2541
  5184   001D9A  EFD1  F00E         	goto	u2540
  5185   001D9E                     u2541:
  5186   001D9E  EFA7  F00E         	goto	l2761
  5187   001DA2                     u2540:
  5188   001DA2                     l2779:
  5189   001DA2  0E00               	movlw	0
  5190   001DA4  6E0E               	movwf	___fladd@aexp^0,c
  5191   001DA6  AE10               	btfss	___fladd@grs^0,7,c
  5192   001DA8  EFD8  F00E         	goto	u2551
  5193   001DAC  EFDA  F00E         	goto	u2550
  5194   001DB0                     u2551:
  5195   001DB0  EFF2  F00E         	goto	l741
  5196   001DB4                     u2550:
  5197   001DB4  C010  F009         	movff	___fladd@grs,??___fladd
  5198   001DB8  0E7F               	movlw	127
  5199   001DBA  1609               	andwf	??___fladd^0,f,c
  5200   001DBC  B4D8               	btfsc	status,2,c
  5201   001DBE  EFE3  F00E         	goto	u2561
  5202   001DC2  EFE5  F00E         	goto	u2560
  5203   001DC6                     u2561:
  5204   001DC6  EFE9  F00E         	goto	l742
  5205   001DCA                     u2560:
  5206   001DCA                     l2785:
  5207   001DCA  0E01               	movlw	1
  5208   001DCC  6E0E               	movwf	___fladd@aexp^0,c
  5209   001DCE  EFF2  F00E         	goto	l741
  5210   001DD2                     l742:
  5211   001DD2  A001               	btfss	___fladd@b^0,0,c
  5212   001DD4  EFEE  F00E         	goto	u2571
  5213   001DD8  EFF0  F00E         	goto	u2570
  5214   001DDC                     u2571:
  5215   001DDC  EFF2  F00E         	goto	l741
  5216   001DE0                     u2570:
  5217   001DE0  EFE5  F00E         	goto	l2785
  5218   001DE4                     l741:
  5219   001DE4  500E               	movf	___fladd@aexp^0,w,c
  5220   001DE6  B4D8               	btfsc	status,2,c
  5221   001DE8  EFF8  F00E         	goto	u2581
  5222   001DEC  EFFA  F00E         	goto	u2580
  5223   001DF0                     u2581:
  5224   001DF0  EF25  F00F         	goto	l2797
  5225   001DF4                     u2580:
  5226   001DF4  0E01               	movlw	1
  5227   001DF6  2601               	addwf	___fladd@b^0,f,c
  5228   001DF8  0E00               	movlw	0
  5229   001DFA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5230   001DFC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5231   001DFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5232   001E00  A004               	btfss	(___fladd@b+3)^0,0,c
  5233   001E02  EF05  F00F         	goto	u2591
  5234   001E06  EF07  F00F         	goto	u2590
  5235   001E0A                     u2591:
  5236   001E0A  EF25  F00F         	goto	l2797
  5237   001E0E                     u2590:
  5238   001E0E  C001  F009         	movff	___fladd@b,??___fladd
  5239   001E12  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5240   001E16  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5241   001E1A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5242   001E1E  340C               	rlcf	(??___fladd+3)^0,w,c
  5243   001E20  320C               	rrcf	(??___fladd+3)^0,f,c
  5244   001E22  320B               	rrcf	(??___fladd+2)^0,f,c
  5245   001E24  320A               	rrcf	(??___fladd+1)^0,f,c
  5246   001E26  3209               	rrcf	??___fladd^0,f,c
  5247   001E28  C009  F001         	movff	??___fladd,___fladd@b
  5248   001E2C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5249   001E30  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5250   001E34  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5251   001E38  280F               	incf	___fladd@bexp^0,w,c
  5252   001E3A  B4D8               	btfsc	status,2,c
  5253   001E3C  EF22  F00F         	goto	u2601
  5254   001E40  EF24  F00F         	goto	u2600
  5255   001E44                     u2601:
  5256   001E44  EF25  F00F         	goto	l2797
  5257   001E48                     u2600:
  5258   001E48  2A0F               	incf	___fladd@bexp^0,f,c
  5259   001E4A                     l2797:
  5260   001E4A  280F               	incf	___fladd@bexp^0,w,c
  5261   001E4C  B4D8               	btfsc	status,2,c
  5262   001E4E  EF2B  F00F         	goto	u2611
  5263   001E52  EF2D  F00F         	goto	u2610
  5264   001E56                     u2611:
  5265   001E56  EF35  F00F         	goto	l2801
  5266   001E5A                     u2610:
  5267   001E5A  500F               	movf	___fladd@bexp^0,w,c
  5268   001E5C  A4D8               	btfss	status,2,c
  5269   001E5E  EF33  F00F         	goto	u2621
  5270   001E62  EF35  F00F         	goto	u2620
  5271   001E66                     u2621:
  5272   001E66  EF47  F00F         	goto	l2805
  5273   001E6A                     u2620:
  5274   001E6A                     l2801:
  5275   001E6A  0E00               	movlw	0
  5276   001E6C  6E01               	movwf	___fladd@b^0,c
  5277   001E6E  0E00               	movlw	0
  5278   001E70  6E02               	movwf	(___fladd@b+1)^0,c
  5279   001E72  0E00               	movlw	0
  5280   001E74  6E03               	movwf	(___fladd@b+2)^0,c
  5281   001E76  0E00               	movlw	0
  5282   001E78  6E04               	movwf	(___fladd@b+3)^0,c
  5283   001E7A  500F               	movf	___fladd@bexp^0,w,c
  5284   001E7C  A4D8               	btfss	status,2,c
  5285   001E7E  EF43  F00F         	goto	u2631
  5286   001E82  EF45  F00F         	goto	u2630
  5287   001E86                     u2631:
  5288   001E86  EF47  F00F         	goto	l2805
  5289   001E8A                     u2630:
  5290   001E8A  0E00               	movlw	0
  5291   001E8C  6E0D               	movwf	___fladd@signs^0,c
  5292   001E8E                     l2805:
  5293   001E8E  A00F               	btfss	___fladd@bexp^0,0,c
  5294   001E90  EF4C  F00F         	goto	u2641
  5295   001E94  EF4E  F00F         	goto	u2640
  5296   001E98                     u2641:
  5297   001E98  EF51  F00F         	goto	l2809
  5298   001E9C                     u2640:
  5299   001E9C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5300   001E9E  EF52  F00F         	goto	l2811
  5301   001EA2                     l2809:
  5302   001EA2  9E03               	bcf	(___fladd@b+2)^0,7,c
  5303   001EA4                     l2811:
  5304   001EA4  90D8               	bcf	status,0,c
  5305   001EA6  300F               	rrcf	___fladd@bexp^0,w,c
  5306   001EA8  6E04               	movwf	(___fladd@b+3)^0,c
  5307   001EAA  AE0D               	btfss	___fladd@signs^0,7,c
  5308   001EAC  EF5A  F00F         	goto	u2651
  5309   001EB0  EF5C  F00F         	goto	u2650
  5310   001EB4                     u2651:
  5311   001EB4  EF5D  F00F         	goto	l2817
  5312   001EB8                     u2650:
  5313   001EB8  8E04               	bsf	(___fladd@b+3)^0,7,c
  5314   001EBA                     l2817:
  5315   001EBA  C001  F001         	movff	___fladd@b,?___fladd
  5316   001EBE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5317   001EC2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5318   001EC6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5319   001ECA                     l724:
  5320   001ECA  0012               	return		;funcret
  5321   001ECC                     __end_of___fladd:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function ___flneg *****************
  5325 ;; Defined at:
  5326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  f1              4    0[COMRAM] unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  4    0[COMRAM] unsigned char 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;Total ram usage:        4 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_efgtoa
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text17
  5354   003EC6                     __ptext17:
  5355                           	callstack 0
  5356   003EC6                     ___flneg:
  5357                           	callstack 26
  5358   003EC6  5001               	movf	___flneg@f1^0,w,c
  5359   003EC8  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5360   003ECA  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5361   003ECC  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5362   003ECE  B4D8               	btfsc	status,2,c
  5363   003ED0  EF6C  F01F         	goto	u3291
  5364   003ED4  EF6E  F01F         	goto	u3290
  5365   003ED8                     u3291:
  5366   003ED8  EF76  F01F         	goto	l3231
  5367   003EDC                     u3290:
  5368   003EDC  0E00               	movlw	0
  5369   003EDE  1A01               	xorwf	___flneg@f1^0,f,c
  5370   003EE0  0E00               	movlw	0
  5371   003EE2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5372   003EE4  0E00               	movlw	0
  5373   003EE6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5374   003EE8  0E80               	movlw	128
  5375   003EEA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5376   003EEC                     l3231:
  5377   003EEC  C001  F001         	movff	___flneg@f1,?___flneg
  5378   003EF0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5379   003EF4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5380   003EF8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5381   003EFC  0012               	return		;funcret
  5382   003EFE                     __end_of___flneg:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function ___flmul *****************
  5386 ;; Defined at:
  5387 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  b               4    0[COMRAM] unsigned char 
  5390 ;;  a               4    4[COMRAM] unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  prod            4   19[COMRAM] struct .
  5393 ;;  grs             4   13[COMRAM] unsigned long 
  5394 ;;  temp            2   23[COMRAM] struct .
  5395 ;;  bexp            1   18[COMRAM] unsigned char 
  5396 ;;  aexp            1   17[COMRAM] unsigned char 
  5397 ;;  sign            1   12[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4    0[COMRAM] unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0, prodl, prodh
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;Total ram usage:       25 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_writeData16
  5417 ;;		_efgtoa
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           
  5421                           	psect	text18
  5422   001ECC                     __ptext18:
  5423                           	callstack 0
  5424   001ECC                     ___flmul:
  5425                           	callstack 29
  5426   001ECC  5004               	movf	(___flmul@b+3)^0,w,c
  5427   001ECE  0B80               	andlw	128
  5428   001ED0  6E0D               	movwf	___flmul@sign^0,c
  5429   001ED2  5004               	movf	(___flmul@b+3)^0,w,c
  5430   001ED4  2404               	addwf	(___flmul@b+3)^0,w,c
  5431   001ED6  6E13               	movwf	___flmul@bexp^0,c
  5432   001ED8  AE03               	btfss	(___flmul@b+2)^0,7,c
  5433   001EDA  EF71  F00F         	goto	u2901
  5434   001EDE  EF73  F00F         	goto	u2900
  5435   001EE2                     u2901:
  5436   001EE2  EF74  F00F         	goto	l2979
  5437   001EE6                     u2900:
  5438   001EE6  8013               	bsf	___flmul@bexp^0,0,c
  5439   001EE8                     l2979:
  5440   001EE8  5013               	movf	___flmul@bexp^0,w,c
  5441   001EEA  B4D8               	btfsc	status,2,c
  5442   001EEC  EF7A  F00F         	goto	u2911
  5443   001EF0  EF7C  F00F         	goto	u2910
  5444   001EF4                     u2911:
  5445   001EF4  EF8F  F00F         	goto	l2987
  5446   001EF8                     u2910:
  5447   001EF8  2813               	incf	___flmul@bexp^0,w,c
  5448   001EFA  A4D8               	btfss	status,2,c
  5449   001EFC  EF82  F00F         	goto	u2921
  5450   001F00  EF84  F00F         	goto	u2920
  5451   001F04                     u2921:
  5452   001F04  EF8C  F00F         	goto	l2985
  5453   001F08                     u2920:
  5454   001F08  0E00               	movlw	0
  5455   001F0A  6E01               	movwf	___flmul@b^0,c
  5456   001F0C  0E00               	movlw	0
  5457   001F0E  6E02               	movwf	(___flmul@b+1)^0,c
  5458   001F10  0E00               	movlw	0
  5459   001F12  6E03               	movwf	(___flmul@b+2)^0,c
  5460   001F14  0E00               	movlw	0
  5461   001F16  6E04               	movwf	(___flmul@b+3)^0,c
  5462   001F18                     l2985:
  5463   001F18  8E03               	bsf	(___flmul@b+2)^0,7,c
  5464   001F1A  EF97  F00F         	goto	l2989
  5465   001F1E                     l2987:
  5466   001F1E  0E00               	movlw	0
  5467   001F20  6E01               	movwf	___flmul@b^0,c
  5468   001F22  0E00               	movlw	0
  5469   001F24  6E02               	movwf	(___flmul@b+1)^0,c
  5470   001F26  0E00               	movlw	0
  5471   001F28  6E03               	movwf	(___flmul@b+2)^0,c
  5472   001F2A  0E00               	movlw	0
  5473   001F2C  6E04               	movwf	(___flmul@b+3)^0,c
  5474   001F2E                     l2989:
  5475   001F2E  5008               	movf	(___flmul@a+3)^0,w,c
  5476   001F30  0B80               	andlw	128
  5477   001F32  1A0D               	xorwf	___flmul@sign^0,f,c
  5478   001F34  5008               	movf	(___flmul@a+3)^0,w,c
  5479   001F36  2408               	addwf	(___flmul@a+3)^0,w,c
  5480   001F38  6E12               	movwf	___flmul@aexp^0,c
  5481   001F3A  AE07               	btfss	(___flmul@a+2)^0,7,c
  5482   001F3C  EFA2  F00F         	goto	u2931
  5483   001F40  EFA4  F00F         	goto	u2930
  5484   001F44                     u2931:
  5485   001F44  EFA5  F00F         	goto	l2997
  5486   001F48                     u2930:
  5487   001F48  8012               	bsf	___flmul@aexp^0,0,c
  5488   001F4A                     l2997:
  5489   001F4A  5012               	movf	___flmul@aexp^0,w,c
  5490   001F4C  B4D8               	btfsc	status,2,c
  5491   001F4E  EFAB  F00F         	goto	u2941
  5492   001F52  EFAD  F00F         	goto	u2940
  5493   001F56                     u2941:
  5494   001F56  EFC0  F00F         	goto	l3005
  5495   001F5A                     u2940:
  5496   001F5A  2812               	incf	___flmul@aexp^0,w,c
  5497   001F5C  A4D8               	btfss	status,2,c
  5498   001F5E  EFB3  F00F         	goto	u2951
  5499   001F62  EFB5  F00F         	goto	u2950
  5500   001F66                     u2951:
  5501   001F66  EFBD  F00F         	goto	l3003
  5502   001F6A                     u2950:
  5503   001F6A  0E00               	movlw	0
  5504   001F6C  6E05               	movwf	___flmul@a^0,c
  5505   001F6E  0E00               	movlw	0
  5506   001F70  6E06               	movwf	(___flmul@a+1)^0,c
  5507   001F72  0E00               	movlw	0
  5508   001F74  6E07               	movwf	(___flmul@a+2)^0,c
  5509   001F76  0E00               	movlw	0
  5510   001F78  6E08               	movwf	(___flmul@a+3)^0,c
  5511   001F7A                     l3003:
  5512   001F7A  8E07               	bsf	(___flmul@a+2)^0,7,c
  5513   001F7C  EFC8  F00F         	goto	l801
  5514   001F80                     l3005:
  5515   001F80  0E00               	movlw	0
  5516   001F82  6E05               	movwf	___flmul@a^0,c
  5517   001F84  0E00               	movlw	0
  5518   001F86  6E06               	movwf	(___flmul@a+1)^0,c
  5519   001F88  0E00               	movlw	0
  5520   001F8A  6E07               	movwf	(___flmul@a+2)^0,c
  5521   001F8C  0E00               	movlw	0
  5522   001F8E  6E08               	movwf	(___flmul@a+3)^0,c
  5523   001F90                     l801:
  5524   001F90  5012               	movf	___flmul@aexp^0,w,c
  5525   001F92  B4D8               	btfsc	status,2,c
  5526   001F94  EFCE  F00F         	goto	u2961
  5527   001F98  EFD0  F00F         	goto	u2960
  5528   001F9C                     u2961:
  5529   001F9C  EFD8  F00F         	goto	l3009
  5530   001FA0                     u2960:
  5531   001FA0  5013               	movf	___flmul@bexp^0,w,c
  5532   001FA2  A4D8               	btfss	status,2,c
  5533   001FA4  EFD6  F00F         	goto	u2971
  5534   001FA8  EFD8  F00F         	goto	u2970
  5535   001FAC                     u2971:
  5536   001FAC  EFE2  F00F         	goto	l3013
  5537   001FB0                     u2970:
  5538   001FB0                     l3009:
  5539   001FB0  0E00               	movlw	0
  5540   001FB2  6E01               	movwf	?___flmul^0,c
  5541   001FB4  0E00               	movlw	0
  5542   001FB6  6E02               	movwf	(?___flmul+1)^0,c
  5543   001FB8  0E00               	movlw	0
  5544   001FBA  6E03               	movwf	(?___flmul+2)^0,c
  5545   001FBC  0E00               	movlw	0
  5546   001FBE  6E04               	movwf	(?___flmul+3)^0,c
  5547   001FC0  EF8C  F011         	goto	l805
  5548   001FC4                     l3013:
  5549   001FC4  5007               	movf	(___flmul@a+2)^0,w,c
  5550   001FC6  0201               	mulwf	___flmul@b^0,c
  5551   001FC8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5552   001FCE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5553   001FD4  5018               	movf	___flmul@temp^0,w,c
  5554   001FD6  6E0E               	movwf	___flmul@grs^0,c
  5555   001FD8  6A0F               	clrf	(___flmul@grs+1)^0,c
  5556   001FDA  6A10               	clrf	(___flmul@grs+2)^0,c
  5557   001FDC  6A11               	clrf	(___flmul@grs+3)^0,c
  5558   001FDE  5019               	movf	(___flmul@temp+1)^0,w,c
  5559   001FE0  6E14               	movwf	___flmul@prod^0,c
  5560   001FE2  6A15               	clrf	(___flmul@prod+1)^0,c
  5561   001FE4  6A16               	clrf	(___flmul@prod+2)^0,c
  5562   001FE6  6A17               	clrf	(___flmul@prod+3)^0,c
  5563   001FE8  5006               	movf	(___flmul@a+1)^0,w,c
  5564   001FEA  0202               	mulwf	(___flmul@b+1)^0,c
  5565   001FEC  006F FFCC  F018    	movff	prodl,___flmul@temp
  5566   001FF2  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5567   001FF8  5018               	movf	___flmul@temp^0,w,c
  5568   001FFA  260E               	addwf	___flmul@grs^0,f,c
  5569   001FFC  0E00               	movlw	0
  5570   001FFE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5571   002000  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5572   002002  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5573   002004  5019               	movf	(___flmul@temp+1)^0,w,c
  5574   002006  2614               	addwf	___flmul@prod^0,f,c
  5575   002008  0E00               	movlw	0
  5576   00200A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5577   00200C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5578   00200E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5579   002010  5005               	movf	___flmul@a^0,w,c
  5580   002012  0203               	mulwf	(___flmul@b+2)^0,c
  5581   002014  006F FFCC  F018    	movff	prodl,___flmul@temp
  5582   00201A  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5583   002020  5018               	movf	___flmul@temp^0,w,c
  5584   002022  260E               	addwf	___flmul@grs^0,f,c
  5585   002024  0E00               	movlw	0
  5586   002026  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5587   002028  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5588   00202A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5589   00202C  5019               	movf	(___flmul@temp+1)^0,w,c
  5590   00202E  2614               	addwf	___flmul@prod^0,f,c
  5591   002030  0E00               	movlw	0
  5592   002032  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5593   002034  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5594   002036  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5595   002038  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5596   00203C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5597   002040  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5598   002044  6A0E               	clrf	___flmul@grs^0,c
  5599   002046  5005               	movf	___flmul@a^0,w,c
  5600   002048  0202               	mulwf	(___flmul@b+1)^0,c
  5601   00204A  006F FFCC  F018    	movff	prodl,___flmul@temp
  5602   002050  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5603   002056  5018               	movf	___flmul@temp^0,w,c
  5604   002058  260E               	addwf	___flmul@grs^0,f,c
  5605   00205A  5019               	movf	(___flmul@temp+1)^0,w,c
  5606   00205C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5607   00205E  0E00               	movlw	0
  5608   002060  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5609   002062  0E00               	movlw	0
  5610   002064  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5611   002066  5006               	movf	(___flmul@a+1)^0,w,c
  5612   002068  0201               	mulwf	___flmul@b^0,c
  5613   00206A  006F FFCC  F018    	movff	prodl,___flmul@temp
  5614   002070  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5615   002076  5018               	movf	___flmul@temp^0,w,c
  5616   002078  260E               	addwf	___flmul@grs^0,f,c
  5617   00207A  5019               	movf	(___flmul@temp+1)^0,w,c
  5618   00207C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5619   00207E  0E00               	movlw	0
  5620   002080  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5621   002082  0E00               	movlw	0
  5622   002084  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5623   002086  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5624   00208A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5625   00208E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5626   002092  6A0E               	clrf	___flmul@grs^0,c
  5627   002094  5005               	movf	___flmul@a^0,w,c
  5628   002096  0201               	mulwf	___flmul@b^0,c
  5629   002098  006F FFCC  F018    	movff	prodl,___flmul@temp
  5630   00209E  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5631   0020A4  5018               	movf	___flmul@temp^0,w,c
  5632   0020A6  260E               	addwf	___flmul@grs^0,f,c
  5633   0020A8  5019               	movf	(___flmul@temp+1)^0,w,c
  5634   0020AA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5635   0020AC  0E00               	movlw	0
  5636   0020AE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5637   0020B0  0E00               	movlw	0
  5638   0020B2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5639   0020B4  5007               	movf	(___flmul@a+2)^0,w,c
  5640   0020B6  0202               	mulwf	(___flmul@b+1)^0,c
  5641   0020B8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5642   0020BE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5643   0020C4  5018               	movf	___flmul@temp^0,w,c
  5644   0020C6  2614               	addwf	___flmul@prod^0,f,c
  5645   0020C8  5019               	movf	(___flmul@temp+1)^0,w,c
  5646   0020CA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5647   0020CC  0E00               	movlw	0
  5648   0020CE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5649   0020D0  0E00               	movlw	0
  5650   0020D2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5651   0020D4  5006               	movf	(___flmul@a+1)^0,w,c
  5652   0020D6  0203               	mulwf	(___flmul@b+2)^0,c
  5653   0020D8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5654   0020DE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5655   0020E4  5018               	movf	___flmul@temp^0,w,c
  5656   0020E6  2614               	addwf	___flmul@prod^0,f,c
  5657   0020E8  5019               	movf	(___flmul@temp+1)^0,w,c
  5658   0020EA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5659   0020EC  0E00               	movlw	0
  5660   0020EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5661   0020F0  0E00               	movlw	0
  5662   0020F2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5663   0020F4  5007               	movf	(___flmul@a+2)^0,w,c
  5664   0020F6  0203               	mulwf	(___flmul@b+2)^0,c
  5665   0020F8  006F FFCC  F018    	movff	prodl,___flmul@temp
  5666   0020FE  006F FFD0  F019    	movff	prodh,___flmul@temp+1
  5667   002104  5018               	movf	___flmul@temp^0,w,c
  5668   002106  6E09               	movwf	??___flmul^0,c
  5669   002108  5019               	movf	(___flmul@temp+1)^0,w,c
  5670   00210A  6E0A               	movwf	(??___flmul+1)^0,c
  5671   00210C  6A0B               	clrf	(??___flmul+2)^0,c
  5672   00210E  6A0C               	clrf	(??___flmul+3)^0,c
  5673   002110  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5674   002114  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5675   002118  C009  F00A         	movff	??___flmul,??___flmul+1
  5676   00211C  6A09               	clrf	??___flmul^0,c
  5677   00211E  5009               	movf	??___flmul^0,w,c
  5678   002120  2614               	addwf	___flmul@prod^0,f,c
  5679   002122  500A               	movf	(??___flmul+1)^0,w,c
  5680   002124  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5681   002126  500B               	movf	(??___flmul+2)^0,w,c
  5682   002128  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5683   00212A  500C               	movf	(??___flmul+3)^0,w,c
  5684   00212C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5685   00212E  C00E  F009         	movff	___flmul@grs,??___flmul
  5686   002132  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5687   002136  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5688   00213A  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5689   00213E  0E19               	movlw	25
  5690   002140  EFA7  F010         	goto	u2980
  5691   002144                     u2985:
  5692   002144  90D8               	bcf	status,0,c
  5693   002146  320C               	rrcf	(??___flmul+3)^0,f,c
  5694   002148  320B               	rrcf	(??___flmul+2)^0,f,c
  5695   00214A  320A               	rrcf	(??___flmul+1)^0,f,c
  5696   00214C  3209               	rrcf	??___flmul^0,f,c
  5697   00214E                     u2980:
  5698   00214E  2EE8               	decfsz	wreg,f,c
  5699   002150  EFA2  F010         	goto	u2985
  5700   002154  5009               	movf	??___flmul^0,w,c
  5701   002156  2614               	addwf	___flmul@prod^0,f,c
  5702   002158  500A               	movf	(??___flmul+1)^0,w,c
  5703   00215A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5704   00215C  500B               	movf	(??___flmul+2)^0,w,c
  5705   00215E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5706   002160  500C               	movf	(??___flmul+3)^0,w,c
  5707   002162  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5708   002164  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5709   002168  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5710   00216C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5711   002170  6A0E               	clrf	___flmul@grs^0,c
  5712   002172  5012               	movf	___flmul@aexp^0,w,c
  5713   002174  C013  F009         	movff	___flmul@bexp,??___flmul
  5714   002178  6A0A               	clrf	(??___flmul+1)^0,c
  5715   00217A  2609               	addwf	??___flmul^0,f,c
  5716   00217C  0E00               	movlw	0
  5717   00217E  220A               	addwfc	(??___flmul+1)^0,f,c
  5718   002180  0E82               	movlw	130
  5719   002182  2409               	addwf	??___flmul^0,w,c
  5720   002184  6E18               	movwf	___flmul@temp^0,c
  5721   002186  0EFF               	movlw	255
  5722   002188  200A               	addwfc	(??___flmul+1)^0,w,c
  5723   00218A  6E19               	movwf	(___flmul@temp+1)^0,c
  5724   00218C  EFDD  F010         	goto	l3061
  5725   002190                     l3055:
  5726   002190  90D8               	bcf	status,0,c
  5727   002192  3614               	rlcf	___flmul@prod^0,f,c
  5728   002194  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5729   002196  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5730   002198  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5731   00219A  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5732   00219C  EFD2  F010         	goto	u2991
  5733   0021A0  EFD4  F010         	goto	u2990
  5734   0021A4                     u2991:
  5735   0021A4  EFD5  F010         	goto	l808
  5736   0021A8                     u2990:
  5737   0021A8  8014               	bsf	___flmul@prod^0,0,c
  5738   0021AA                     l808:
  5739   0021AA  90D8               	bcf	status,0,c
  5740   0021AC  360E               	rlcf	___flmul@grs^0,f,c
  5741   0021AE  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5742   0021B0  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5743   0021B2  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5744   0021B4  0618               	decf	___flmul@temp^0,f,c
  5745   0021B6  A0D8               	btfss	status,0,c
  5746   0021B8  0619               	decf	(___flmul@temp+1)^0,f,c
  5747   0021BA                     l3061:
  5748   0021BA  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5749   0021BC  EFE2  F010         	goto	u3001
  5750   0021C0  EFE4  F010         	goto	u3000
  5751   0021C4                     u3001:
  5752   0021C4  EFC8  F010         	goto	l3055
  5753   0021C8                     u3000:
  5754   0021C8  0E00               	movlw	0
  5755   0021CA  6E12               	movwf	___flmul@aexp^0,c
  5756   0021CC  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5757   0021CE  EFEB  F010         	goto	u3011
  5758   0021D2  EFED  F010         	goto	u3010
  5759   0021D6                     u3011:
  5760   0021D6  EF11  F011         	goto	l810
  5761   0021DA                     u3010:
  5762   0021DA  0EFF               	movlw	255
  5763   0021DC  140E               	andwf	___flmul@grs^0,w,c
  5764   0021DE  6E09               	movwf	??___flmul^0,c
  5765   0021E0  0EFF               	movlw	255
  5766   0021E2  140F               	andwf	(___flmul@grs+1)^0,w,c
  5767   0021E4  6E0A               	movwf	(??___flmul+1)^0,c
  5768   0021E6  0EFF               	movlw	255
  5769   0021E8  1410               	andwf	(___flmul@grs+2)^0,w,c
  5770   0021EA  6E0B               	movwf	(??___flmul+2)^0,c
  5771   0021EC  0E7F               	movlw	127
  5772   0021EE  1411               	andwf	(___flmul@grs+3)^0,w,c
  5773   0021F0  6E0C               	movwf	(??___flmul+3)^0,c
  5774   0021F2  5009               	movf	??___flmul^0,w,c
  5775   0021F4  100A               	iorwf	(??___flmul+1)^0,w,c
  5776   0021F6  100B               	iorwf	(??___flmul+2)^0,w,c
  5777   0021F8  100C               	iorwf	(??___flmul+3)^0,w,c
  5778   0021FA  B4D8               	btfsc	status,2,c
  5779   0021FC  EF02  F011         	goto	u3021
  5780   002200  EF04  F011         	goto	u3020
  5781   002204                     u3021:
  5782   002204  EF08  F011         	goto	l811
  5783   002208                     u3020:
  5784   002208                     l3069:
  5785   002208  0E01               	movlw	1
  5786   00220A  6E12               	movwf	___flmul@aexp^0,c
  5787   00220C  EF11  F011         	goto	l810
  5788   002210                     l811:
  5789   002210  A014               	btfss	___flmul@prod^0,0,c
  5790   002212  EF0D  F011         	goto	u3031
  5791   002216  EF0F  F011         	goto	u3030
  5792   00221A                     u3031:
  5793   00221A  EF11  F011         	goto	l810
  5794   00221E                     u3030:
  5795   00221E  EF04  F011         	goto	l3069
  5796   002222                     l810:
  5797   002222  5012               	movf	___flmul@aexp^0,w,c
  5798   002224  B4D8               	btfsc	status,2,c
  5799   002226  EF17  F011         	goto	u3041
  5800   00222A  EF19  F011         	goto	u3040
  5801   00222E                     u3041:
  5802   00222E  EF3D  F011         	goto	l3081
  5803   002232                     u3040:
  5804   002232  0E01               	movlw	1
  5805   002234  2614               	addwf	___flmul@prod^0,f,c
  5806   002236  0E00               	movlw	0
  5807   002238  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5808   00223A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5809   00223C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5810   00223E  A017               	btfss	(___flmul@prod+3)^0,0,c
  5811   002240  EF24  F011         	goto	u3051
  5812   002244  EF26  F011         	goto	u3050
  5813   002248                     u3051:
  5814   002248  EF3D  F011         	goto	l3081
  5815   00224C                     u3050:
  5816   00224C  C014  F009         	movff	___flmul@prod,??___flmul
  5817   002250  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5818   002254  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5819   002258  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5820   00225C  340C               	rlcf	(??___flmul+3)^0,w,c
  5821   00225E  320C               	rrcf	(??___flmul+3)^0,f,c
  5822   002260  320B               	rrcf	(??___flmul+2)^0,f,c
  5823   002262  320A               	rrcf	(??___flmul+1)^0,f,c
  5824   002264  3209               	rrcf	??___flmul^0,f,c
  5825   002266  C009  F014         	movff	??___flmul,___flmul@prod
  5826   00226A  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5827   00226E  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5828   002272  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5829   002276  4A18               	infsnz	___flmul@temp^0,f,c
  5830   002278  2A19               	incf	(___flmul@temp+1)^0,f,c
  5831   00227A                     l3081:
  5832   00227A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5833   00227C  EF48  F011         	goto	u3061
  5834   002280  5019               	movf	(___flmul@temp+1)^0,w,c
  5835   002282  E108               	bnz	u3060
  5836   002284  2818               	incf	___flmul@temp^0,w,c
  5837   002286  A0D8               	btfss	status,0,c
  5838   002288  EF48  F011         	goto	u3061
  5839   00228C  EF4A  F011         	goto	u3060
  5840   002290                     u3061:
  5841   002290  EF54  F011         	goto	l3085
  5842   002294                     u3060:
  5843   002294  0E00               	movlw	0
  5844   002296  6E14               	movwf	___flmul@prod^0,c
  5845   002298  0E00               	movlw	0
  5846   00229A  6E15               	movwf	(___flmul@prod+1)^0,c
  5847   00229C  0E80               	movlw	128
  5848   00229E  6E16               	movwf	(___flmul@prod+2)^0,c
  5849   0022A0  0E7F               	movlw	127
  5850   0022A2  6E17               	movwf	(___flmul@prod+3)^0,c
  5851   0022A4  EF82  F011         	goto	l3097
  5852   0022A8                     l3085:
  5853   0022A8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5854   0022AA  EF61  F011         	goto	u3070
  5855   0022AE  5019               	movf	(___flmul@temp+1)^0,w,c
  5856   0022B0  E106               	bnz	u3071
  5857   0022B2  0418               	decf	___flmul@temp^0,w,c
  5858   0022B4  B0D8               	btfsc	status,0,c
  5859   0022B6  EF5F  F011         	goto	u3071
  5860   0022BA  EF61  F011         	goto	u3070
  5861   0022BE                     u3071:
  5862   0022BE  EF6D  F011         	goto	l818
  5863   0022C2                     u3070:
  5864   0022C2  0E00               	movlw	0
  5865   0022C4  6E14               	movwf	___flmul@prod^0,c
  5866   0022C6  0E00               	movlw	0
  5867   0022C8  6E15               	movwf	(___flmul@prod+1)^0,c
  5868   0022CA  0E00               	movlw	0
  5869   0022CC  6E16               	movwf	(___flmul@prod+2)^0,c
  5870   0022CE  0E00               	movlw	0
  5871   0022D0  6E17               	movwf	(___flmul@prod+3)^0,c
  5872   0022D2  0E00               	movlw	0
  5873   0022D4  6E0D               	movwf	___flmul@sign^0,c
  5874   0022D6  EF82  F011         	goto	l3097
  5875   0022DA                     l818:
  5876   0022DA  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5877   0022DE  0EFF               	movlw	255
  5878   0022E0  1614               	andwf	___flmul@prod^0,f,c
  5879   0022E2  0EFF               	movlw	255
  5880   0022E4  1615               	andwf	(___flmul@prod+1)^0,f,c
  5881   0022E6  0E7F               	movlw	127
  5882   0022E8  1616               	andwf	(___flmul@prod+2)^0,f,c
  5883   0022EA  0E00               	movlw	0
  5884   0022EC  1617               	andwf	(___flmul@prod+3)^0,f,c
  5885   0022EE  A013               	btfss	___flmul@bexp^0,0,c
  5886   0022F0  EF7C  F011         	goto	u3081
  5887   0022F4  EF7E  F011         	goto	u3080
  5888   0022F8                     u3081:
  5889   0022F8  EF7F  F011         	goto	l3095
  5890   0022FC                     u3080:
  5891   0022FC  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5892   0022FE                     l3095:
  5893   0022FE  90D8               	bcf	status,0,c
  5894   002300  3013               	rrcf	___flmul@bexp^0,w,c
  5895   002302  6E17               	movwf	(___flmul@prod+3)^0,c
  5896   002304                     l3097:
  5897   002304  500D               	movf	___flmul@sign^0,w,c
  5898   002306  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5899   002308  C014  F001         	movff	___flmul@prod,?___flmul
  5900   00230C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5901   002310  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5902   002314  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5903   002318                     l805:
  5904   002318  0012               	return		;funcret
  5905   00231A                     __end_of___flmul:
  5906                           	callstack 0
  5907                           
  5908 ;; *************** function ___flge *****************
  5909 ;; Defined at:
  5910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  ff1             4   25[COMRAM] unsigned char 
  5913 ;;  ff2             4   29[COMRAM] unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;		None               void
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;Total ram usage:       12 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_efgtoa
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text19
  5939   003270                     __ptext19:
  5940                           	callstack 0
  5941   003270                     ___flge:
  5942                           	callstack 26
  5943   003270  0E00               	movlw	0
  5944   003272  141A               	andwf	___flge@ff1^0,w,c
  5945   003274  6E22               	movwf	??___flge^0,c
  5946   003276  0E00               	movlw	0
  5947   003278  141B               	andwf	(___flge@ff1+1)^0,w,c
  5948   00327A  6E23               	movwf	(??___flge+1)^0,c
  5949   00327C  0E80               	movlw	128
  5950   00327E  141C               	andwf	(___flge@ff1+2)^0,w,c
  5951   003280  6E24               	movwf	(??___flge+2)^0,c
  5952   003282  0E7F               	movlw	127
  5953   003284  141D               	andwf	(___flge@ff1+3)^0,w,c
  5954   003286  6E25               	movwf	(??___flge+3)^0,c
  5955   003288  5022               	movf	??___flge^0,w,c
  5956   00328A  1023               	iorwf	(??___flge+1)^0,w,c
  5957   00328C  1024               	iorwf	(??___flge+2)^0,w,c
  5958   00328E  1025               	iorwf	(??___flge+3)^0,w,c
  5959   003290  A4D8               	btfss	status,2,c
  5960   003292  EF4D  F019         	goto	u3241
  5961   003296  EF4F  F019         	goto	u3240
  5962   00329A                     u3241:
  5963   00329A  EF57  F019         	goto	l3209
  5964   00329E                     u3240:
  5965   00329E  0E00               	movlw	0
  5966   0032A0  6E1A               	movwf	___flge@ff1^0,c
  5967   0032A2  0E00               	movlw	0
  5968   0032A4  6E1B               	movwf	(___flge@ff1+1)^0,c
  5969   0032A6  0E00               	movlw	0
  5970   0032A8  6E1C               	movwf	(___flge@ff1+2)^0,c
  5971   0032AA  0E00               	movlw	0
  5972   0032AC  6E1D               	movwf	(___flge@ff1+3)^0,c
  5973   0032AE                     l3209:
  5974   0032AE  0E00               	movlw	0
  5975   0032B0  141E               	andwf	___flge@ff2^0,w,c
  5976   0032B2  6E22               	movwf	??___flge^0,c
  5977   0032B4  0E00               	movlw	0
  5978   0032B6  141F               	andwf	(___flge@ff2+1)^0,w,c
  5979   0032B8  6E23               	movwf	(??___flge+1)^0,c
  5980   0032BA  0E80               	movlw	128
  5981   0032BC  1420               	andwf	(___flge@ff2+2)^0,w,c
  5982   0032BE  6E24               	movwf	(??___flge+2)^0,c
  5983   0032C0  0E7F               	movlw	127
  5984   0032C2  1421               	andwf	(___flge@ff2+3)^0,w,c
  5985   0032C4  6E25               	movwf	(??___flge+3)^0,c
  5986   0032C6  5022               	movf	??___flge^0,w,c
  5987   0032C8  1023               	iorwf	(??___flge+1)^0,w,c
  5988   0032CA  1024               	iorwf	(??___flge+2)^0,w,c
  5989   0032CC  1025               	iorwf	(??___flge+3)^0,w,c
  5990   0032CE  A4D8               	btfss	status,2,c
  5991   0032D0  EF6C  F019         	goto	u3251
  5992   0032D4  EF6E  F019         	goto	u3250
  5993   0032D8                     u3251:
  5994   0032D8  EF76  F019         	goto	l3213
  5995   0032DC                     u3250:
  5996   0032DC  0E00               	movlw	0
  5997   0032DE  6E1E               	movwf	___flge@ff2^0,c
  5998   0032E0  0E00               	movlw	0
  5999   0032E2  6E1F               	movwf	(___flge@ff2+1)^0,c
  6000   0032E4  0E00               	movlw	0
  6001   0032E6  6E20               	movwf	(___flge@ff2+2)^0,c
  6002   0032E8  0E00               	movlw	0
  6003   0032EA  6E21               	movwf	(___flge@ff2+3)^0,c
  6004   0032EC                     l3213:
  6005   0032EC  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6006   0032EE  EF7B  F019         	goto	u3261
  6007   0032F2  EF7D  F019         	goto	u3260
  6008   0032F6                     u3261:
  6009   0032F6  EF86  F019         	goto	l3217
  6010   0032FA                     u3260:
  6011   0032FA  6C1A               	negf	___flge@ff1^0,c
  6012   0032FC  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6013   0032FE  B0D8               	btfsc	status,0,c
  6014   003300  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6015   003302  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6016   003304  B0D8               	btfsc	status,0,c
  6017   003306  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6018   003308  0E80               	movlw	128
  6019   00330A  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6020   00330C                     l3217:
  6021   00330C  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6022   00330E  EF8B  F019         	goto	u3271
  6023   003312  EF8D  F019         	goto	u3270
  6024   003316                     u3271:
  6025   003316  EF96  F019         	goto	l452
  6026   00331A                     u3270:
  6027   00331A  6C1E               	negf	___flge@ff2^0,c
  6028   00331C  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6029   00331E  B0D8               	btfsc	status,0,c
  6030   003320  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6031   003322  1E20               	comf	(___flge@ff2+2)^0,f,c
  6032   003324  B0D8               	btfsc	status,0,c
  6033   003326  2A20               	incf	(___flge@ff2+2)^0,f,c
  6034   003328  0E80               	movlw	128
  6035   00332A  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6036   00332C                     l452:
  6037   00332C  0E00               	movlw	0
  6038   00332E  1A1A               	xorwf	___flge@ff1^0,f,c
  6039   003330  0E00               	movlw	0
  6040   003332  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6041   003334  0E00               	movlw	0
  6042   003336  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6043   003338  0E80               	movlw	128
  6044   00333A  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6045   00333C  0E00               	movlw	0
  6046   00333E  1A1E               	xorwf	___flge@ff2^0,f,c
  6047   003340  0E00               	movlw	0
  6048   003342  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6049   003344  0E00               	movlw	0
  6050   003346  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6051   003348  0E80               	movlw	128
  6052   00334A  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6053   00334C  501E               	movf	___flge@ff2^0,w,c
  6054   00334E  5C1A               	subwf	___flge@ff1^0,w,c
  6055   003350  501F               	movf	(___flge@ff2+1)^0,w,c
  6056   003352  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6057   003354  5020               	movf	(___flge@ff2+2)^0,w,c
  6058   003356  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6059   003358  5021               	movf	(___flge@ff2+3)^0,w,c
  6060   00335A  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6061   00335C  B0D8               	btfsc	status,0,c
  6062   00335E  EFB3  F019         	goto	u3281
  6063   003362  EFB5  F019         	goto	u3280
  6064   003366                     u3281:
  6065   003366  EFB8  F019         	goto	l3223
  6066   00336A                     u3280:
  6067   00336A  90D8               	bcf	status,0,c
  6068   00336C  EFB9  F019         	goto	l457
  6069   003370                     l3223:
  6070   003370  80D8               	bsf	status,0,c
  6071   003372                     l457:
  6072   003372  0012               	return		;funcret
  6073   003374                     __end_of___flge:
  6074                           	callstack 0
  6075                           
  6076 ;; *************** function ___fleq *****************
  6077 ;; Defined at:
  6078 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  ff1             4    0[COMRAM] unsigned char 
  6081 ;;  ff2             4    4[COMRAM] unsigned char 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;		None               void
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6093 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;Total ram usage:       12 bytes
  6098 ;; Hardware stack levels used: 1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_efgtoa
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text20
  6107   00397E                     __ptext20:
  6108                           	callstack 0
  6109   00397E                     ___fleq:
  6110                           	callstack 26
  6111   00397E  0E00               	movlw	0
  6112   003980  1401               	andwf	___fleq@ff1^0,w,c
  6113   003982  6E09               	movwf	??___fleq^0,c
  6114   003984  0E00               	movlw	0
  6115   003986  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6116   003988  6E0A               	movwf	(??___fleq+1)^0,c
  6117   00398A  0E80               	movlw	128
  6118   00398C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6119   00398E  6E0B               	movwf	(??___fleq+2)^0,c
  6120   003990  0E7F               	movlw	127
  6121   003992  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6122   003994  6E0C               	movwf	(??___fleq+3)^0,c
  6123   003996  5009               	movf	??___fleq^0,w,c
  6124   003998  100A               	iorwf	(??___fleq+1)^0,w,c
  6125   00399A  100B               	iorwf	(??___fleq+2)^0,w,c
  6126   00399C  100C               	iorwf	(??___fleq+3)^0,w,c
  6127   00399E  A4D8               	btfss	status,2,c
  6128   0039A0  EFD4  F01C         	goto	u3211
  6129   0039A4  EFD6  F01C         	goto	u3210
  6130   0039A8                     u3211:
  6131   0039A8  EFDE  F01C         	goto	l3193
  6132   0039AC                     u3210:
  6133   0039AC  0E00               	movlw	0
  6134   0039AE  6E01               	movwf	___fleq@ff1^0,c
  6135   0039B0  0E00               	movlw	0
  6136   0039B2  6E02               	movwf	(___fleq@ff1+1)^0,c
  6137   0039B4  0E00               	movlw	0
  6138   0039B6  6E03               	movwf	(___fleq@ff1+2)^0,c
  6139   0039B8  0E00               	movlw	0
  6140   0039BA  6E04               	movwf	(___fleq@ff1+3)^0,c
  6141   0039BC                     l3193:
  6142   0039BC  0E00               	movlw	0
  6143   0039BE  1405               	andwf	___fleq@ff2^0,w,c
  6144   0039C0  6E09               	movwf	??___fleq^0,c
  6145   0039C2  0E00               	movlw	0
  6146   0039C4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6147   0039C6  6E0A               	movwf	(??___fleq+1)^0,c
  6148   0039C8  0E80               	movlw	128
  6149   0039CA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6150   0039CC  6E0B               	movwf	(??___fleq+2)^0,c
  6151   0039CE  0E7F               	movlw	127
  6152   0039D0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6153   0039D2  6E0C               	movwf	(??___fleq+3)^0,c
  6154   0039D4  5009               	movf	??___fleq^0,w,c
  6155   0039D6  100A               	iorwf	(??___fleq+1)^0,w,c
  6156   0039D8  100B               	iorwf	(??___fleq+2)^0,w,c
  6157   0039DA  100C               	iorwf	(??___fleq+3)^0,w,c
  6158   0039DC  A4D8               	btfss	status,2,c
  6159   0039DE  EFF3  F01C         	goto	u3221
  6160   0039E2  EFF5  F01C         	goto	u3220
  6161   0039E6                     u3221:
  6162   0039E6  EFFD  F01C         	goto	l3197
  6163   0039EA                     u3220:
  6164   0039EA  0E00               	movlw	0
  6165   0039EC  6E05               	movwf	___fleq@ff2^0,c
  6166   0039EE  0E00               	movlw	0
  6167   0039F0  6E06               	movwf	(___fleq@ff2+1)^0,c
  6168   0039F2  0E00               	movlw	0
  6169   0039F4  6E07               	movwf	(___fleq@ff2+2)^0,c
  6170   0039F6  0E00               	movlw	0
  6171   0039F8  6E08               	movwf	(___fleq@ff2+3)^0,c
  6172   0039FA                     l3197:
  6173   0039FA  5005               	movf	___fleq@ff2^0,w,c
  6174   0039FC  1801               	xorwf	___fleq@ff1^0,w,c
  6175   0039FE  E10F               	bnz	u3230
  6176   003A00  5006               	movf	(___fleq@ff2+1)^0,w,c
  6177   003A02  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6178   003A04  E10C               	bnz	u3230
  6179   003A06  5007               	movf	(___fleq@ff2+2)^0,w,c
  6180   003A08  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6181   003A0A  E109               	bnz	u3230
  6182   003A0C  5008               	movf	(___fleq@ff2+3)^0,w,c
  6183   003A0E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6184   003A10  B4D8               	btfsc	status,2,c
  6185   003A12  EF0D  F01D         	goto	u3231
  6186   003A16  EF0F  F01D         	goto	u3230
  6187   003A1A                     u3231:
  6188   003A1A  EF12  F01D         	goto	l3201
  6189   003A1E                     u3230:
  6190   003A1E  90D8               	bcf	status,0,c
  6191   003A20  EF13  F01D         	goto	l446
  6192   003A24                     l3201:
  6193   003A24  80D8               	bsf	status,0,c
  6194   003A26                     l446:
  6195   003A26  0012               	return		;funcret
  6196   003A28                     __end_of___fleq:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function _dtoa *****************
  6200 ;; Defined at:
  6201 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6204 ;;		 -> sprintf@f(12), 
  6205 ;;  d               2   23[COMRAM] int 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  i               2   32[COMRAM] int 
  6208 ;;  p               2   29[COMRAM] int 
  6209 ;;  w               2   27[COMRAM] int 
  6210 ;;  s               1   31[COMRAM] unsigned char 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;Total ram usage:       12 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 4
  6227 ;; This function calls:
  6228 ;;		___awdiv
  6229 ;;		___awmod
  6230 ;;		_abs
  6231 ;;		_pad
  6232 ;; This function is called by:
  6233 ;;		_vfpfcnvrt
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text21
  6238   002FF0                     __ptext21:
  6239                           	callstack 0
  6240   002FF0                     _dtoa:
  6241                           	callstack 23
  6242   002FF0                     
  6243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6244   002FF0  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6245   002FF2  EFFD  F017         	goto	u4501
  6246   002FF6  EF00  F018         	goto	u4500
  6247   002FFA                     u4501:
  6248   002FFA  0E01               	movlw	1
  6249   002FFC  EF01  F018         	goto	u4510
  6250   003000                     u4500:
  6251   003000  0E00               	movlw	0
  6252   003002                     u4510:
  6253   003002  6E20               	movwf	dtoa@s^0,c
  6254                           
  6255                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6256   003004  BE5F               	btfsc	(_prec+1)^0,7,c
  6257   003006  EF09  F018         	goto	u4520
  6258   00300A  EF07  F018         	goto	u4521
  6259   00300E                     u4521:
  6260   00300E  EF0F  F018         	goto	l902
  6261   003012                     u4520:
  6262   003012  0E00               	movlw	0
  6263   003014  6E1F               	movwf	(dtoa@p+1)^0,c
  6264   003016  0E01               	movlw	1
  6265   003018  6E1E               	movwf	dtoa@p^0,c
  6266   00301A  EF13  F018         	goto	l904
  6267   00301E                     l902:
  6268   00301E  C05E  F01E         	movff	_prec,dtoa@p
  6269   003022  C05F  F01F         	movff	_prec+1,dtoa@p+1
  6270   003026                     l904:
  6271                           
  6272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6273   003026  C05C  F01C         	movff	_width,dtoa@w
  6274   00302A  C05D  F01D         	movff	_width+1,dtoa@w+1
  6275   00302E                     
  6276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6277   00302E  5020               	movf	dtoa@s^0,w,c
  6278   003030  B4D8               	btfsc	status,2,c
  6279   003032  EF1D  F018         	goto	u4531
  6280   003036  EF1F  F018         	goto	u4530
  6281   00303A                     u4531:
  6282   00303A  EF36  F018         	goto	l905
  6283   00303E                     u4530:
  6284   00303E                     
  6285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6286   00303E  061C               	decf	dtoa@w^0,f,c
  6287   003040  A0D8               	btfss	status,0,c
  6288   003042  061D               	decf	(dtoa@w+1)^0,f,c
  6289   003044                     
  6290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6291   003044  5020               	movf	dtoa@s^0,w,c
  6292   003046  A4D8               	btfss	status,2,c
  6293   003048  EF28  F018         	goto	u4541
  6294   00304C  EF2A  F018         	goto	u4540
  6295   003050                     u4541:
  6296   003050  EF30  F018         	goto	l4215
  6297   003054                     u4540:
  6298   003054  0E00               	movlw	0
  6299   003056  6E1B               	movwf	(_dtoa$1054+1)^0,c
  6300   003058  0E2B               	movlw	43
  6301   00305A  6E1A               	movwf	_dtoa$1054^0,c
  6302   00305C  EF34  F018         	goto	l4217
  6303   003060                     l4215:
  6304   003060  0E00               	movlw	0
  6305   003062  6E1B               	movwf	(_dtoa$1054+1)^0,c
  6306   003064  0E2D               	movlw	45
  6307   003066  6E1A               	movwf	_dtoa$1054^0,c
  6308   003068                     l4217:
  6309   003068  C01A  F020         	movff	_dtoa$1054,dtoa@s
  6310   00306C                     l905:
  6311                           
  6312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6313   00306C  0E00               	movlw	0
  6314   00306E  6E22               	movwf	(dtoa@i+1)^0,c
  6315   003070  0E4F               	movlw	79
  6316   003072  6E21               	movwf	dtoa@i^0,c
  6317   003074                     
  6318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6319   003074  0E00               	movlw	0
  6320   003076  0101               	movlb	1	; () banked
  6321   003078  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6322                           
  6323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6324   00307A  EF6F  F018         	goto	l4231
  6325   00307E                     l4221:
  6326                           
  6327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6328   00307E  0621               	decf	dtoa@i^0,f,c
  6329   003080  A0D8               	btfss	status,0,c
  6330   003082  0622               	decf	(dtoa@i+1)^0,f,c
  6331   003084                     
  6332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6333   003084  0E00               	movlw	low _dbuf
  6334   003086  2421               	addwf	dtoa@i^0,w,c
  6335   003088  6ED9               	movwf	fsr2l,c
  6336   00308A  0E01               	movlw	high _dbuf
  6337   00308C  2022               	addwfc	(dtoa@i+1)^0,w,c
  6338   00308E  6EDA               	movwf	fsr2h,c
  6339   003090  C018  F001         	movff	dtoa@d,___awmod@dividend
  6340   003094  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6341   003098  0E00               	movlw	0
  6342   00309A  6E04               	movwf	(___awmod@divisor+1)^0,c
  6343   00309C  0E0A               	movlw	10
  6344   00309E  6E03               	movwf	___awmod@divisor^0,c
  6345   0030A0  EC64  F01B         	call	___awmod	;wreg free
  6346   0030A4  C001  F007         	movff	?___awmod,abs@a
  6347   0030A8  C002  F008         	movff	?___awmod+1,abs@a+1
  6348   0030AC  ECB7  F01F         	call	_abs	;wreg free
  6349   0030B0  5007               	movf	?_abs^0,w,c
  6350   0030B2  0F30               	addlw	48
  6351   0030B4  6EDF               	movwf	indf2,c
  6352   0030B6                     
  6353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  6354   0030B6  061E               	decf	dtoa@p^0,f,c
  6355   0030B8  A0D8               	btfss	status,0,c
  6356   0030BA  061F               	decf	(dtoa@p+1)^0,f,c
  6357   0030BC                     
  6358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6359   0030BC  061C               	decf	dtoa@w^0,f,c
  6360   0030BE  A0D8               	btfss	status,0,c
  6361   0030C0  061D               	decf	(dtoa@w+1)^0,f,c
  6362   0030C2                     
  6363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6364   0030C2  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6365   0030C6  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6366   0030CA  0E00               	movlw	0
  6367   0030CC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6368   0030CE  0E0A               	movlw	10
  6369   0030D0  6E03               	movwf	___awdiv@divisor^0,c
  6370   0030D2  ECA3  F01A         	call	___awdiv	;wreg free
  6371   0030D6  C001  F018         	movff	?___awdiv,dtoa@d
  6372   0030DA  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6373   0030DE                     l4231:
  6374                           
  6375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6376   0030DE  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6377   0030E0  EF7A  F018         	goto	u4551
  6378   0030E4  5022               	movf	(dtoa@i+1)^0,w,c
  6379   0030E6  E108               	bnz	u4550
  6380   0030E8  0421               	decf	dtoa@i^0,w,c
  6381   0030EA  A0D8               	btfss	status,0,c
  6382   0030EC  EF7A  F018         	goto	u4551
  6383   0030F0  EF7C  F018         	goto	u4550
  6384   0030F4                     u4551:
  6385   0030F4  EF92  F018         	goto	l4237
  6386   0030F8                     u4550:
  6387   0030F8  5018               	movf	dtoa@d^0,w,c
  6388   0030FA  1019               	iorwf	(dtoa@d+1)^0,w,c
  6389   0030FC  A4D8               	btfss	status,2,c
  6390   0030FE  EF83  F018         	goto	u4561
  6391   003102  EF85  F018         	goto	u4560
  6392   003106                     u4561:
  6393   003106  EF3F  F018         	goto	l4221
  6394   00310A                     u4560:
  6395   00310A  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6396   00310C  EF92  F018         	goto	u4570
  6397   003110  501F               	movf	(dtoa@p+1)^0,w,c
  6398   003112  E106               	bnz	u4571
  6399   003114  041E               	decf	dtoa@p^0,w,c
  6400   003116  B0D8               	btfsc	status,0,c
  6401   003118  EF90  F018         	goto	u4571
  6402   00311C  EF92  F018         	goto	u4570
  6403   003120                     u4571:
  6404   003120  EF3F  F018         	goto	l4221
  6405   003124                     u4570:
  6406   003124                     l4237:
  6407                           
  6408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6409   003124  5020               	movf	dtoa@s^0,w,c
  6410   003126  B4D8               	btfsc	status,2,c
  6411   003128  EF98  F018         	goto	u4581
  6412   00312C  EF9A  F018         	goto	u4580
  6413   003130                     u4581:
  6414   003130  EFA6  F018         	goto	l4243
  6415   003134                     u4580:
  6416   003134                     
  6417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6418   003134  0621               	decf	dtoa@i^0,f,c
  6419   003136  A0D8               	btfss	status,0,c
  6420   003138  0622               	decf	(dtoa@i+1)^0,f,c
  6421   00313A                     
  6422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6423   00313A  0E00               	movlw	low _dbuf
  6424   00313C  2421               	addwf	dtoa@i^0,w,c
  6425   00313E  6ED9               	movwf	fsr2l,c
  6426   003140  0E01               	movlw	high _dbuf
  6427   003142  2022               	addwfc	(dtoa@i+1)^0,w,c
  6428   003144  6EDA               	movwf	fsr2h,c
  6429   003146  0060  F083  FFDF   	movff	dtoa@s,indf2
  6430   00314C                     l4243:
  6431                           
  6432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6433   00314C  C017  F00F         	movff	dtoa@fp,pad@fp
  6434   003150  0E00               	movlw	low _dbuf
  6435   003152  2421               	addwf	dtoa@i^0,w,c
  6436   003154  6E10               	movwf	pad@buf^0,c
  6437   003156  0E01               	movlw	high _dbuf
  6438   003158  2022               	addwfc	(dtoa@i+1)^0,w,c
  6439   00315A  6E11               	movwf	(pad@buf+1)^0,c
  6440   00315C  C01C  F012         	movff	dtoa@w,pad@p
  6441   003160  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6442   003164  ECA2  F01D         	call	_pad	;wreg free
  6443   003168  0012               	return		;funcret
  6444   00316A                     __end_of_dtoa:
  6445                           	callstack 0
  6446                           
  6447 ;; *************** function _pad *****************
  6448 ;; Defined at:
  6449 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6452 ;;		 -> sprintf@f(12), 
  6453 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6454 ;;		 -> dbuf(80), 
  6455 ;;  p               2   17[COMRAM] int 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  i               2   20[COMRAM] int 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6467 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;Total ram usage:        8 bytes
  6472 ;; Hardware stack levels used: 1
  6473 ;; Hardware stack levels required when called: 3
  6474 ;; This function calls:
  6475 ;;		_fputc
  6476 ;;		_fputs
  6477 ;; This function is called by:
  6478 ;;		_dtoa
  6479 ;;		_efgtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text22
  6484   003B44                     __ptext22:
  6485                           	callstack 0
  6486   003B44                     _pad:
  6487                           	callstack 23
  6488   003B44                     
  6489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6490   003B44  BE13               	btfsc	(pad@p+1)^0,7,c
  6491   003B46  EFA9  F01D         	goto	u4460
  6492   003B4A  EFA7  F01D         	goto	u4461
  6493   003B4E                     u4461:
  6494   003B4E  EFAD  F01D         	goto	l894
  6495   003B52                     u4460:
  6496   003B52                     
  6497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6498   003B52  0E00               	movlw	0
  6499   003B54  6E13               	movwf	(pad@p+1)^0,c
  6500   003B56  0E00               	movlw	0
  6501   003B58  6E12               	movwf	pad@p^0,c
  6502   003B5A                     l894:
  6503                           
  6504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6505   003B5A  0E00               	movlw	0
  6506   003B5C  6E16               	movwf	(pad@i+1)^0,c
  6507   003B5E  0E00               	movlw	0
  6508   003B60  6E15               	movwf	pad@i^0,c
  6509                           
  6510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6511   003B62  EFBD  F01D         	goto	l4183
  6512   003B66                     l4179:
  6513                           
  6514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6515   003B66  0E00               	movlw	0
  6516   003B68  6E02               	movwf	(fputc@c+1)^0,c
  6517   003B6A  0E20               	movlw	32
  6518   003B6C  6E01               	movwf	fputc@c^0,c
  6519   003B6E  C00F  F003         	movff	pad@fp,fputc@fp
  6520   003B72  EC13  F01C         	call	_fputc	;wreg free
  6521   003B76                     
  6522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6523   003B76  4A15               	infsnz	pad@i^0,f,c
  6524   003B78  2A16               	incf	(pad@i+1)^0,f,c
  6525   003B7A                     l4183:
  6526                           
  6527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6528   003B7A  5012               	movf	pad@p^0,w,c
  6529   003B7C  5C15               	subwf	pad@i^0,w,c
  6530   003B7E  5016               	movf	(pad@i+1)^0,w,c
  6531   003B80  0A80               	xorlw	128
  6532   003B82  6E14               	movwf	??_pad^0,c
  6533   003B84  5013               	movf	(pad@p+1)^0,w,c
  6534   003B86  0A80               	xorlw	128
  6535   003B88  5814               	subwfb	??_pad^0,w,c
  6536   003B8A  A0D8               	btfss	status,0,c
  6537   003B8C  EFCA  F01D         	goto	u4471
  6538   003B90  EFCC  F01D         	goto	u4470
  6539   003B94                     u4471:
  6540   003B94  EFB3  F01D         	goto	l4179
  6541   003B98                     u4470:
  6542   003B98                     
  6543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6544   003B98  C010  F009         	movff	pad@buf,fputs@s
  6545   003B9C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6546   003BA0  C00F  F00B         	movff	pad@fp,fputs@fp
  6547   003BA4  EC27  F01F         	call	_fputs	;wreg free
  6548   003BA8  0012               	return		;funcret
  6549   003BAA                     __end_of_pad:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _fputs *****************
  6553 ;; Defined at:
  6554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6557 ;;		 -> dbuf(80), 
  6558 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6559 ;;		 -> sprintf@f(12), 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  i               2   12[COMRAM] int 
  6562 ;;  c               1   11[COMRAM] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    8[COMRAM] int 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6572 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;Total ram usage:        6 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; Hardware stack levels required when called: 2
  6579 ;; This function calls:
  6580 ;;		_fputc
  6581 ;; This function is called by:
  6582 ;;		_pad
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text23
  6587   003E4E                     __ptext23:
  6588                           	callstack 0
  6589   003E4E                     _fputs:
  6590                           	callstack 23
  6591   003E4E  0E00               	movlw	0
  6592   003E50  6E0E               	movwf	(fputs@i+1)^0,c
  6593   003E52  0E00               	movlw	0
  6594   003E54  6E0D               	movwf	fputs@i^0,c
  6595   003E56  EF36  F01F         	goto	l4173
  6596   003E5A                     l4169:
  6597   003E5A  C00C  F001         	movff	fputs@c,fputc@c
  6598   003E5E  6A02               	clrf	(fputc@c+1)^0,c
  6599   003E60  C00B  F003         	movff	fputs@fp,fputc@fp
  6600   003E64  EC13  F01C         	call	_fputc	;wreg free
  6601   003E68  4A0D               	infsnz	fputs@i^0,f,c
  6602   003E6A  2A0E               	incf	(fputs@i+1)^0,f,c
  6603   003E6C                     l4173:
  6604   003E6C  500D               	movf	fputs@i^0,w,c
  6605   003E6E  2409               	addwf	fputs@s^0,w,c
  6606   003E70  6ED9               	movwf	fsr2l,c
  6607   003E72  500E               	movf	(fputs@i+1)^0,w,c
  6608   003E74  200A               	addwfc	(fputs@s+1)^0,w,c
  6609   003E76  6EDA               	movwf	fsr2h,c
  6610   003E78  50DF               	movf	indf2,w,c
  6611   003E7A  6E0C               	movwf	fputs@c^0,c
  6612   003E7C  500C               	movf	fputs@c^0,w,c
  6613   003E7E  A4D8               	btfss	status,2,c
  6614   003E80  EF44  F01F         	goto	u4451
  6615   003E84  EF46  F01F         	goto	u4450
  6616   003E88                     u4451:
  6617   003E88  EF2D  F01F         	goto	l4169
  6618   003E8C                     u4450:
  6619   003E8C  0012               	return		;funcret
  6620   003E8E                     __end_of_fputs:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _fputc *****************
  6624 ;; Defined at:
  6625 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  c               2    0[COMRAM] int 
  6628 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6629 ;;		 -> sprintf@f(12), 
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;		None
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  2    0[COMRAM] int 
  6634 ;; Registers used:
  6635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;Total ram usage:        8 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; Hardware stack levels required when called: 1
  6648 ;; This function calls:
  6649 ;;		_putch
  6650 ;; This function is called by:
  6651 ;;		_pad
  6652 ;;		_vfpfcnvrt
  6653 ;;		_fputs
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text24
  6658   003826                     __ptext24:
  6659                           	callstack 0
  6660   003826                     _fputc:
  6661                           	callstack 26
  6662   003826  5003               	movf	fputc@fp^0,w,c
  6663   003828  B4D8               	btfsc	status,2,c
  6664   00382A  EF19  F01C         	goto	u2231
  6665   00382E  EF1B  F01C         	goto	u2230
  6666   003832                     u2231:
  6667   003832  EF23  F01C         	goto	l2609
  6668   003836                     u2230:
  6669   003836  5003               	movf	fputc@fp^0,w,c
  6670   003838  A4D8               	btfss	status,2,c
  6671   00383A  EF21  F01C         	goto	u2241
  6672   00383E  EF23  F01C         	goto	u2240
  6673   003842                     u2241:
  6674   003842  EF28  F01C         	goto	l2611
  6675   003846                     u2240:
  6676   003846                     l2609:
  6677   003846  5001               	movf	fputc@c^0,w,c
  6678   003848  EC14  F020         	call	_putch
  6679   00384C  EF68  F01C         	goto	l1062
  6680   003850                     l2611:
  6681   003850  5003               	movf	fputc@fp^0,w,c
  6682   003852  6ED9               	movwf	fsr2l,c
  6683   003854  6ADA               	clrf	fsr2h,c
  6684   003856  0E0A               	movlw	10
  6685   003858  26D9               	addwf	fsr2l,f,c
  6686   00385A  50DE               	movf	postinc2,w,c
  6687   00385C  10DE               	iorwf	postinc2,w,c
  6688   00385E  B4D8               	btfsc	status,2,c
  6689   003860  EF34  F01C         	goto	u2251
  6690   003864  EF36  F01C         	goto	u2250
  6691   003868                     u2251:
  6692   003868  EF4F  F01C         	goto	l2615
  6693   00386C                     u2250:
  6694   00386C  5003               	movf	fputc@fp^0,w,c
  6695   00386E  6ED9               	movwf	fsr2l,c
  6696   003870  6ADA               	clrf	fsr2h,c
  6697   003872  0E0A               	movlw	10
  6698   003874  26D9               	addwf	fsr2l,f,c
  6699   003876  5003               	movf	fputc@fp^0,w,c
  6700   003878  6EE1               	movwf	fsr1l,c
  6701   00387A  6AE2               	clrf	fsr1h,c
  6702   00387C  0E03               	movlw	3
  6703   00387E  26E1               	addwf	fsr1l,f,c
  6704   003880  50DE               	movf	postinc2,w,c
  6705   003882  5CE6               	subwf	postinc1,w,c
  6706   003884  50E6               	movf	postinc1,w,c
  6707   003886  0A80               	xorlw	128
  6708   003888  6E08               	movwf	(??_fputc+4)^0,c
  6709   00388A  50DE               	movf	postinc2,w,c
  6710   00388C  0A80               	xorlw	128
  6711   00388E  5808               	subwfb	(??_fputc+4)^0,w,c
  6712   003890  B0D8               	btfsc	status,0,c
  6713   003892  EF4D  F01C         	goto	u2261
  6714   003896  EF4F  F01C         	goto	u2260
  6715   00389A                     u2261:
  6716   00389A  EF68  F01C         	goto	l1062
  6717   00389E                     u2260:
  6718   00389E                     l2615:
  6719   00389E  5003               	movf	fputc@fp^0,w,c
  6720   0038A0  6ED9               	movwf	fsr2l,c
  6721   0038A2  6ADA               	clrf	fsr2h,c
  6722   0038A4  0E03               	movlw	3
  6723   0038A6  26D9               	addwf	fsr2l,f,c
  6724   0038A8  50DF               	movf	indf2,w,c
  6725   0038AA  6E04               	movwf	??_fputc^0,c
  6726   0038AC  5003               	movf	fputc@fp^0,w,c
  6727   0038AE  6ED9               	movwf	fsr2l,c
  6728   0038B0  6ADA               	clrf	fsr2h,c
  6729   0038B2  50DF               	movf	indf2,w,c
  6730   0038B4  2404               	addwf	??_fputc^0,w,c
  6731   0038B6  6ED9               	movwf	fsr2l,c
  6732   0038B8  6ADA               	clrf	fsr2h,c
  6733   0038BA  0060  F007  FFDF   	movff	fputc@c,indf2
  6734   0038C0  5003               	movf	fputc@fp^0,w,c
  6735   0038C2  6ED9               	movwf	fsr2l,c
  6736   0038C4  6ADA               	clrf	fsr2h,c
  6737   0038C6  0E03               	movlw	3
  6738   0038C8  26D9               	addwf	fsr2l,f,c
  6739   0038CA  2ADE               	incf	postinc2,f,c
  6740   0038CC  0E00               	movlw	0
  6741   0038CE  22DD               	addwfc	postdec2,f,c
  6742   0038D0                     l1062:
  6743   0038D0  0012               	return		;funcret
  6744   0038D2                     __end_of_fputc:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _putch *****************
  6748 ;; Defined at:
  6749 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  c               1    wreg     unsigned char 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  c               1    0[COMRAM] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1    wreg      void 
  6756 ;; Registers used:
  6757 ;;		wreg
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;Total ram usage:        0 bytes
  6768 ;; Hardware stack levels used: 1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_fputc
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text25
  6777   004028                     __ptext25:
  6778                           	callstack 0
  6779   004028                     _putch:
  6780                           	callstack 26
  6781   004028  0012               	return		;funcret
  6782   00402A                     __end_of_putch:
  6783                           	callstack 0
  6784                           
  6785 ;; *************** function _abs *****************
  6786 ;; Defined at:
  6787 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  a               2    6[COMRAM] int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    6[COMRAM] int 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;Total ram usage:        4 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_dtoa
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text26
  6815   003F6E                     __ptext26:
  6816                           	callstack 0
  6817   003F6E                     _abs:
  6818                           	callstack 26
  6819   003F6E  BE08               	btfsc	(abs@a+1)^0,7,c
  6820   003F70  EFBC  F01F         	goto	u3391
  6821   003F74  EFBE  F01F         	goto	u3390
  6822   003F78                     u3391:
  6823   003F78  EFC4  F01F         	goto	l1021
  6824   003F7C                     u3390:
  6825   003F7C  C007  F007         	movff	abs@a,?_abs
  6826   003F80  C008  F008         	movff	abs@a+1,?_abs+1
  6827   003F84  EFD0  F01F         	goto	l1024
  6828   003F88                     l1021:
  6829   003F88  C007  F009         	movff	abs@a,??_abs
  6830   003F8C  C008  F00A         	movff	abs@a+1,??_abs+1
  6831   003F90  1E09               	comf	??_abs^0,f,c
  6832   003F92  1E0A               	comf	(??_abs+1)^0,f,c
  6833   003F94  4A09               	infsnz	??_abs^0,f,c
  6834   003F96  2A0A               	incf	(??_abs+1)^0,f,c
  6835   003F98  C009  F007         	movff	??_abs,?_abs
  6836   003F9C  C00A  F008         	movff	??_abs+1,?_abs+1
  6837   003FA0                     l1024:
  6838   003FA0  0012               	return		;funcret
  6839   003FA2                     __end_of_abs:
  6840                           	callstack 0
  6841                           
  6842 ;; *************** function ___awmod *****************
  6843 ;; Defined at:
  6844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  dividend        2    0[COMRAM] int 
  6847 ;;  divisor         2    2[COMRAM] int 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  sign            1    5[COMRAM] unsigned char 
  6850 ;;  counter         1    4[COMRAM] unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  2    0[COMRAM] int 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;Total ram usage:        6 bytes
  6865 ;; Hardware stack levels used: 1
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_dtoa
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text27
  6874   0036C8                     __ptext27:
  6875                           	callstack 0
  6876   0036C8                     ___awmod:
  6877                           	callstack 26
  6878   0036C8  0E00               	movlw	0
  6879   0036CA  6E06               	movwf	___awmod@sign^0,c
  6880   0036CC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6881   0036CE  EF6D  F01B         	goto	u3150
  6882   0036D2  EF6B  F01B         	goto	u3151
  6883   0036D6                     u3151:
  6884   0036D6  EF73  F01B         	goto	l3161
  6885   0036DA                     u3150:
  6886   0036DA  6C01               	negf	___awmod@dividend^0,c
  6887   0036DC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6888   0036DE  B0D8               	btfsc	status,0,c
  6889   0036E0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6890   0036E2  0E01               	movlw	1
  6891   0036E4  6E06               	movwf	___awmod@sign^0,c
  6892   0036E6                     l3161:
  6893   0036E6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6894   0036E8  EF7A  F01B         	goto	u3160
  6895   0036EC  EF78  F01B         	goto	u3161
  6896   0036F0                     u3161:
  6897   0036F0  EF7E  F01B         	goto	l3165
  6898   0036F4                     u3160:
  6899   0036F4  6C03               	negf	___awmod@divisor^0,c
  6900   0036F6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6901   0036F8  B0D8               	btfsc	status,0,c
  6902   0036FA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6903   0036FC                     l3165:
  6904   0036FC  5003               	movf	___awmod@divisor^0,w,c
  6905   0036FE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6906   003700  B4D8               	btfsc	status,2,c
  6907   003702  EF85  F01B         	goto	u3171
  6908   003706  EF87  F01B         	goto	u3170
  6909   00370A                     u3171:
  6910   00370A  EFAB  F01B         	goto	l3181
  6911   00370E                     u3170:
  6912   00370E  0E01               	movlw	1
  6913   003710  6E05               	movwf	___awmod@counter^0,c
  6914   003712  EF8F  F01B         	goto	l3171
  6915   003716                     l3169:
  6916   003716  90D8               	bcf	status,0,c
  6917   003718  3603               	rlcf	___awmod@divisor^0,f,c
  6918   00371A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6919   00371C  2A05               	incf	___awmod@counter^0,f,c
  6920   00371E                     l3171:
  6921   00371E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6922   003720  EF94  F01B         	goto	u3181
  6923   003724  EF96  F01B         	goto	u3180
  6924   003728                     u3181:
  6925   003728  EF8B  F01B         	goto	l3169
  6926   00372C                     u3180:
  6927   00372C                     l3173:
  6928   00372C  5003               	movf	___awmod@divisor^0,w,c
  6929   00372E  5C01               	subwf	___awmod@dividend^0,w,c
  6930   003730  5004               	movf	(___awmod@divisor+1)^0,w,c
  6931   003732  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6932   003734  A0D8               	btfss	status,0,c
  6933   003736  EF9F  F01B         	goto	u3191
  6934   00373A  EFA1  F01B         	goto	u3190
  6935   00373E                     u3191:
  6936   00373E  EFA5  F01B         	goto	l3177
  6937   003742                     u3190:
  6938   003742  5003               	movf	___awmod@divisor^0,w,c
  6939   003744  5E01               	subwf	___awmod@dividend^0,f,c
  6940   003746  5004               	movf	(___awmod@divisor+1)^0,w,c
  6941   003748  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6942   00374A                     l3177:
  6943   00374A  90D8               	bcf	status,0,c
  6944   00374C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6945   00374E  3203               	rrcf	___awmod@divisor^0,f,c
  6946   003750  2E05               	decfsz	___awmod@counter^0,f,c
  6947   003752  EF96  F01B         	goto	l3173
  6948   003756                     l3181:
  6949   003756  5006               	movf	___awmod@sign^0,w,c
  6950   003758  B4D8               	btfsc	status,2,c
  6951   00375A  EFB1  F01B         	goto	u3201
  6952   00375E  EFB3  F01B         	goto	u3200
  6953   003762                     u3201:
  6954   003762  EFB7  F01B         	goto	l3185
  6955   003766                     u3200:
  6956   003766  6C01               	negf	___awmod@dividend^0,c
  6957   003768  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6958   00376A  B0D8               	btfsc	status,0,c
  6959   00376C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6960   00376E                     l3185:
  6961   00376E  C001  F001         	movff	___awmod@dividend,?___awmod
  6962   003772  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6963   003776  0012               	return		;funcret
  6964   003778                     __end_of___awmod:
  6965                           	callstack 0
  6966                           
  6967 ;; *************** function ___awdiv *****************
  6968 ;; Defined at:
  6969 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  dividend        2    0[COMRAM] int 
  6972 ;;  divisor         2    2[COMRAM] int 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  quotient        2    6[COMRAM] int 
  6975 ;;  sign            1    5[COMRAM] unsigned char 
  6976 ;;  counter         1    4[COMRAM] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  2    0[COMRAM] int 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:        8 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_dtoa
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text28
  7000   003546                     __ptext28:
  7001                           	callstack 0
  7002   003546                     ___awdiv:
  7003                           	callstack 26
  7004   003546  0E00               	movlw	0
  7005   003548  6E06               	movwf	___awdiv@sign^0,c
  7006   00354A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7007   00354C  EFAC  F01A         	goto	u3090
  7008   003550  EFAA  F01A         	goto	u3091
  7009   003554                     u3091:
  7010   003554  EFB2  F01A         	goto	l3117
  7011   003558                     u3090:
  7012   003558  6C03               	negf	___awdiv@divisor^0,c
  7013   00355A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7014   00355C  B0D8               	btfsc	status,0,c
  7015   00355E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7016   003560  0E01               	movlw	1
  7017   003562  6E06               	movwf	___awdiv@sign^0,c
  7018   003564                     l3117:
  7019   003564  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7020   003566  EFB9  F01A         	goto	u3100
  7021   00356A  EFB7  F01A         	goto	u3101
  7022   00356E                     u3101:
  7023   00356E  EFBF  F01A         	goto	l3123
  7024   003572                     u3100:
  7025   003572  6C01               	negf	___awdiv@dividend^0,c
  7026   003574  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7027   003576  B0D8               	btfsc	status,0,c
  7028   003578  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7029   00357A  0E01               	movlw	1
  7030   00357C  1A06               	xorwf	___awdiv@sign^0,f,c
  7031   00357E                     l3123:
  7032   00357E  0E00               	movlw	0
  7033   003580  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7034   003582  0E00               	movlw	0
  7035   003584  6E07               	movwf	___awdiv@quotient^0,c
  7036   003586  5003               	movf	___awdiv@divisor^0,w,c
  7037   003588  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7038   00358A  B4D8               	btfsc	status,2,c
  7039   00358C  EFCA  F01A         	goto	u3111
  7040   003590  EFCC  F01A         	goto	u3110
  7041   003594                     u3111:
  7042   003594  EFF4  F01A         	goto	l3145
  7043   003598                     u3110:
  7044   003598  0E01               	movlw	1
  7045   00359A  6E05               	movwf	___awdiv@counter^0,c
  7046   00359C  EFD4  F01A         	goto	l3131
  7047   0035A0                     l3129:
  7048   0035A0  90D8               	bcf	status,0,c
  7049   0035A2  3603               	rlcf	___awdiv@divisor^0,f,c
  7050   0035A4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7051   0035A6  2A05               	incf	___awdiv@counter^0,f,c
  7052   0035A8                     l3131:
  7053   0035A8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7054   0035AA  EFD9  F01A         	goto	u3121
  7055   0035AE  EFDB  F01A         	goto	u3120
  7056   0035B2                     u3121:
  7057   0035B2  EFD0  F01A         	goto	l3129
  7058   0035B6                     u3120:
  7059   0035B6                     l3133:
  7060   0035B6  90D8               	bcf	status,0,c
  7061   0035B8  3607               	rlcf	___awdiv@quotient^0,f,c
  7062   0035BA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7063   0035BC  5003               	movf	___awdiv@divisor^0,w,c
  7064   0035BE  5C01               	subwf	___awdiv@dividend^0,w,c
  7065   0035C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7066   0035C2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7067   0035C4  A0D8               	btfss	status,0,c
  7068   0035C6  EFE7  F01A         	goto	u3131
  7069   0035CA  EFE9  F01A         	goto	u3130
  7070   0035CE                     u3131:
  7071   0035CE  EFEE  F01A         	goto	l3141
  7072   0035D2                     u3130:
  7073   0035D2  5003               	movf	___awdiv@divisor^0,w,c
  7074   0035D4  5E01               	subwf	___awdiv@dividend^0,f,c
  7075   0035D6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7076   0035D8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7077   0035DA  8007               	bsf	___awdiv@quotient^0,0,c
  7078   0035DC                     l3141:
  7079   0035DC  90D8               	bcf	status,0,c
  7080   0035DE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7081   0035E0  3203               	rrcf	___awdiv@divisor^0,f,c
  7082   0035E2  2E05               	decfsz	___awdiv@counter^0,f,c
  7083   0035E4  EFDB  F01A         	goto	l3133
  7084   0035E8                     l3145:
  7085   0035E8  5006               	movf	___awdiv@sign^0,w,c
  7086   0035EA  B4D8               	btfsc	status,2,c
  7087   0035EC  EFFA  F01A         	goto	u3141
  7088   0035F0  EFFC  F01A         	goto	u3140
  7089   0035F4                     u3141:
  7090   0035F4  EF00  F01B         	goto	l3149
  7091   0035F8                     u3140:
  7092   0035F8  6C07               	negf	___awdiv@quotient^0,c
  7093   0035FA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7094   0035FC  B0D8               	btfsc	status,0,c
  7095   0035FE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7096   003600                     l3149:
  7097   003600  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7098   003604  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7099   003608  0012               	return		;funcret
  7100   00360A                     __end_of___awdiv:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function _loadData16 *****************
  7104 ;; Defined at:
  7105 ;;		line 276 in file "SPI26K83.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  address         2   25[COMRAM] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  valFinale       4   35[COMRAM] float 
  7110 ;;  floatValue      4   31[COMRAM] float 
  7111 ;;  val             2   43[COMRAM] int 
  7112 ;;  addressHighV    2   41[COMRAM] int 
  7113 ;;  addressLowVa    2   39[COMRAM] int 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  4   25[COMRAM] float 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;Total ram usage:       20 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; Hardware stack levels required when called: 1
  7130 ;; This function calls:
  7131 ;;		___fldiv
  7132 ;;		___xxtofl
  7133 ;;		_loadData
  7134 ;; This function is called by:
  7135 ;;		_main
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text29
  7140   0038D2                     __ptext29:
  7141                           	callstack 0
  7142   0038D2                     _loadData16:
  7143                           	callstack 29
  7144   0038D2                     
  7145                           ;SPI26K83.c: 277:     int addressLowValue = loadData(address);
  7146   0038D2  C01A  F001         	movff	loadData16@address,loadData@address
  7147   0038D6  C01B  F002         	movff	loadData16@address+1,loadData@address+1
  7148   0038DA  EC39  F01A         	call	_loadData	;wreg free
  7149   0038DE  C001  F028         	movff	?_loadData,loadData16@addressLowValue
  7150   0038E2  C002  F029         	movff	?_loadData+1,loadData16@addressLowValue+1
  7151                           
  7152                           ;SPI26K83.c: 278:     int addressHighValue = loadData(address+1);
  7153   0038E6  0E01               	movlw	1
  7154   0038E8  241A               	addwf	loadData16@address^0,w,c
  7155   0038EA  6E01               	movwf	loadData@address^0,c
  7156   0038EC  0E00               	movlw	0
  7157   0038EE  201B               	addwfc	(loadData16@address+1)^0,w,c
  7158   0038F0  6E02               	movwf	(loadData@address+1)^0,c
  7159   0038F2  EC39  F01A         	call	_loadData	;wreg free
  7160   0038F6  C001  F02A         	movff	?_loadData,loadData16@addressHighValue
  7161   0038FA  C002  F02B         	movff	?_loadData+1,loadData16@addressHighValue+1
  7162   0038FE                     
  7163                           ;SPI26K83.c: 279:     int val = (addressHighValue<< 8) | 0x00 + addressLowValue;
  7164   0038FE  502A               	movf	loadData16@addressHighValue^0,w,c
  7165   003900  6E1F               	movwf	(??_loadData16+1)^0,c
  7166   003902  6A1E               	clrf	??_loadData16^0,c
  7167   003904  5028               	movf	loadData16@addressLowValue^0,w,c
  7168   003906  101E               	iorwf	??_loadData16^0,w,c
  7169   003908  6E2C               	movwf	loadData16@val^0,c
  7170   00390A  5029               	movf	(loadData16@addressLowValue+1)^0,w,c
  7171   00390C  101F               	iorwf	(??_loadData16+1)^0,w,c
  7172   00390E  6E2D               	movwf	(loadData16@val+1)^0,c
  7173   003910                     
  7174                           ;SPI26K83.c: 280:     float floatValue = val;
  7175   003910  C02C  F001         	movff	loadData16@val,___xxtofl@val
  7176   003914  C02D  F002         	movff	loadData16@val+1,___xxtofl@val+1
  7177   003918  0E00               	movlw	0
  7178   00391A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7179   00391C  0EFF               	movlw	-1
  7180   00391E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7181   003920  6E04               	movwf	(___xxtofl@val+3)^0,c
  7182   003922  0E01               	movlw	1
  7183   003924  EC1E  F017         	call	___xxtofl
  7184   003928  C001  F020         	movff	?___xxtofl,loadData16@floatValue
  7185   00392C  C002  F021         	movff	?___xxtofl+1,loadData16@floatValue+1
  7186   003930  C003  F022         	movff	?___xxtofl+2,loadData16@floatValue+2
  7187   003934  C004  F023         	movff	?___xxtofl+3,loadData16@floatValue+3
  7188   003938                     
  7189                           ;SPI26K83.c: 281:     float valFinale = floatValue / 100;
  7190   003938  C020  F001         	movff	loadData16@floatValue,___fldiv@b
  7191   00393C  C021  F002         	movff	loadData16@floatValue+1,___fldiv@b+1
  7192   003940  C022  F003         	movff	loadData16@floatValue+2,___fldiv@b+2
  7193   003944  C023  F004         	movff	loadData16@floatValue+3,___fldiv@b+3
  7194   003948  0E00               	movlw	0
  7195   00394A  6E05               	movwf	___fldiv@a^0,c
  7196   00394C  0E00               	movlw	0
  7197   00394E  6E06               	movwf	(___fldiv@a+1)^0,c
  7198   003950  0EC8               	movlw	200
  7199   003952  6E07               	movwf	(___fldiv@a+2)^0,c
  7200   003954  0E42               	movlw	66
  7201   003956  6E08               	movwf	(___fldiv@a+3)^0,c
  7202   003958  EC8D  F011         	call	___fldiv	;wreg free
  7203   00395C  C001  F024         	movff	?___fldiv,loadData16@valFinale
  7204   003960  C002  F025         	movff	?___fldiv+1,loadData16@valFinale+1
  7205   003964  C003  F026         	movff	?___fldiv+2,loadData16@valFinale+2
  7206   003968  C004  F027         	movff	?___fldiv+3,loadData16@valFinale+3
  7207   00396C                     
  7208                           ;SPI26K83.c: 282:     return valFinale;
  7209   00396C  C024  F01A         	movff	loadData16@valFinale,?_loadData16
  7210   003970  C025  F01B         	movff	loadData16@valFinale+1,?_loadData16+1
  7211   003974  C026  F01C         	movff	loadData16@valFinale+2,?_loadData16+2
  7212   003978  C027  F01D         	movff	loadData16@valFinale+3,?_loadData16+3
  7213   00397C  0012               	return		;funcret
  7214   00397E                     __end_of_loadData16:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _loadData *****************
  7218 ;; Defined at:
  7219 ;;		line 247 in file "SPI26K83.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  address         2    0[COMRAM] int 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  valEEPROM3      1    7[COMRAM] unsigned char 
  7224 ;;  valEEPROM2      1    6[COMRAM] unsigned char 
  7225 ;;  valEEPROM1      1    0        unsigned char 
  7226 ;;  valEEPROM       1    5[COMRAM] unsigned char 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  2    0[COMRAM] int 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0, prodl, prodh
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;Total ram usage:        8 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_loadData16
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text30
  7250   003472                     __ptext30:
  7251                           	callstack 0
  7252   003472                     _loadData:
  7253                           	callstack 29
  7254   003472                     
  7255                           ;SPI26K83.c: 251:     PORTBbits.RB3 = 1;
  7256   003472  86CB               	bsf	203,3,c	;volatile
  7257                           
  7258                           ;SPI26K83.c: 252:     SPI1TWIDTH = 0;
  7259   003474  0E00               	movlw	0
  7260   003476  013D               	movlb	61	; () banked
  7261   003478  6F18               	movwf	24,b	;volatile
  7262                           
  7263                           ;SPI26K83.c: 253:     SPI1TCNTL = 3;
  7264   00347A  0E03               	movlw	3
  7265   00347C  6F12               	movwf	18,b	;volatile
  7266                           
  7267                           ;SPI26K83.c: 254:     SPI1TCNTH = 0;
  7268   00347E  0E00               	movlw	0
  7269   003480  6F13               	movwf	19,b	;volatile
  7270   003482                     
  7271                           ; BSR set to: 61
  7272                           ;SPI26K83.c: 255:     SPI1CON2bits.TXR = 1;
  7273   003482  8316               	bsf	22,1,b	;volatile
  7274   003484                     
  7275                           ; BSR set to: 61
  7276                           ;SPI26K83.c: 256:     SPI1CON2bits.RXR = 1;
  7277   003484  8116               	bsf	22,0,b	;volatile
  7278   003486                     
  7279                           ; BSR set to: 61
  7280                           ;SPI26K83.c: 257:     SPI1CON0bits.EN = 1;
  7281   003486  8F14               	bsf	20,7,b	;volatile
  7282   003488                     
  7283                           ; BSR set to: 61
  7284                           ;SPI26K83.c: 258:     SPI1TXB = 0b11000000 + (address >> 4);
  7285   003488  C001  F003         	movff	loadData@address,??_loadData
  7286   00348C  C002  F004         	movff	loadData@address+1,??_loadData+1
  7287   003490  0E04               	movlw	4
  7288   003492  6E05               	movwf	(??_loadData+2)^0,c
  7289   003494                     u4195:
  7290   003494  3404               	rlcf	(??_loadData+1)^0,w,c
  7291   003496  3204               	rrcf	(??_loadData+1)^0,f,c
  7292   003498  3203               	rrcf	??_loadData^0,f,c
  7293   00349A  2E05               	decfsz	(??_loadData+2)^0,f,c
  7294   00349C  EF4A  F01A         	goto	u4195
  7295   0034A0  5003               	movf	??_loadData^0,w,c
  7296   0034A2  0FC0               	addlw	192
  7297   0034A4  6F11               	movwf	17,b	;volatile
  7298   0034A6                     l166:
  7299                           
  7300                           ; BSR set to: 61
  7301   0034A6  AB17               	btfss	23,5,b	;volatile
  7302   0034A8  EF58  F01A         	goto	u4201
  7303   0034AC  EF5A  F01A         	goto	u4200
  7304   0034B0                     u4201:
  7305   0034B0  EF53  F01A         	goto	l166
  7306   0034B4                     u4200:
  7307   0034B4                     
  7308                           ; BSR set to: 61
  7309   0034B4  5110               	movf	16,w,b	;volatile
  7310   0034B6                     
  7311                           ; BSR set to: 61
  7312                           ;SPI26K83.c: 261:     SPI1TXB = 0b0000 + (address << 4) + 0000;
  7313   0034B6  3801               	swapf	loadData@address^0,w,c
  7314   0034B8  0BF0               	andlw	240
  7315   0034BA  6F11               	movwf	17,b	;volatile
  7316   0034BC                     l169:
  7317                           
  7318                           ; BSR set to: 61
  7319   0034BC  AB17               	btfss	23,5,b	;volatile
  7320   0034BE  EF63  F01A         	goto	u4211
  7321   0034C2  EF65  F01A         	goto	u4210
  7322   0034C6                     u4211:
  7323   0034C6  EF5E  F01A         	goto	l169
  7324   0034CA                     u4210:
  7325   0034CA                     
  7326                           ; BSR set to: 61
  7327                           ;SPI26K83.c: 263:     valEEPROM2 = SPI1RXB;
  7328   0034CA  006F F440  F007    	movff	15632,loadData@valEEPROM2	;volatile
  7329                           
  7330                           ;SPI26K83.c: 264:     SPI1TXB = 0b11111111;
  7331   0034D0  6911               	setf	17,b	;volatile
  7332   0034D2                     l172:
  7333                           
  7334                           ; BSR set to: 61
  7335   0034D2  AB17               	btfss	23,5,b	;volatile
  7336   0034D4  EF6E  F01A         	goto	u4221
  7337   0034D8  EF70  F01A         	goto	u4220
  7338   0034DC                     u4221:
  7339   0034DC  EF69  F01A         	goto	l172
  7340   0034E0                     u4220:
  7341   0034E0                     
  7342                           ; BSR set to: 61
  7343                           ;SPI26K83.c: 266:     valEEPROM3 = SPI1RXB;
  7344   0034E0  006F F440  F008    	movff	15632,loadData@valEEPROM3	;volatile
  7345   0034E6                     
  7346                           ; BSR set to: 61
  7347                           ;SPI26K83.c: 267:     PORTCbits.RC2 = !PORTCbits.RC2;
  7348   0034E6  A4CC               	btfss	204,2,c	;volatile
  7349   0034E8  EF78  F01A         	goto	u4231
  7350   0034EC  EF7C  F01A         	goto	u4230
  7351   0034F0                     u4231:
  7352   0034F0  6A03               	clrf	??_loadData^0,c
  7353   0034F2  2A03               	incf	??_loadData^0,f,c
  7354   0034F4  EF7D  F01A         	goto	u4248
  7355   0034F8                     u4230:
  7356   0034F8  6A03               	clrf	??_loadData^0,c
  7357   0034FA                     u4248:
  7358   0034FA  4603               	rlncf	??_loadData^0,f,c
  7359   0034FC  4603               	rlncf	??_loadData^0,f,c
  7360   0034FE  50CC               	movf	204,w,c	;volatile
  7361   003500  1803               	xorwf	??_loadData^0,w,c
  7362   003502  0BFB               	andlw	-5
  7363   003504  1803               	xorwf	??_loadData^0,w,c
  7364   003506  6ECC               	movwf	204,c	;volatile
  7365   003508                     
  7366                           ;SPI26K83.c: 268:     SPI1CON2bits.RXR = 0;
  7367   003508  013D               	movlb	61	; () banked
  7368   00350A  9116               	bcf	22,0,b	;volatile
  7369   00350C                     
  7370                           ; BSR set to: 61
  7371                           ;SPI26K83.c: 269:     SPI1CON2bits.TXR = 0;
  7372   00350C  9316               	bcf	22,1,b	;volatile
  7373   00350E                     
  7374                           ; BSR set to: 61
  7375                           ;SPI26K83.c: 270:     PORTBbits.RB3 = 0;
  7376   00350E  96CB               	bcf	203,3,c	;volatile
  7377   003510                     
  7378                           ; BSR set to: 61
  7379                           ;SPI26K83.c: 271:     SPI1CON0bits.EN = 0;
  7380   003510  9F14               	bcf	20,7,b	;volatile
  7381   003512                     
  7382                           ; BSR set to: 61
  7383                           ;SPI26K83.c: 272:     _delay((unsigned long)((20)*(64000000/4000.0)));
  7384   003512  0E02               	movlw	2
  7385   003514  6E04               	movwf	(??_loadData+1)^0,c
  7386   003516  0EA0               	movlw	160
  7387   003518  6E03               	movwf	??_loadData^0,c
  7388   00351A  0E92               	movlw	146
  7389   00351C                     u5097:
  7390   00351C  2EE8               	decfsz	wreg,f,c
  7391   00351E  D7FE               	bra	u5097
  7392   003520  2E03               	decfsz	??_loadData^0,f,c
  7393   003522  D7FC               	bra	u5097
  7394   003524  2E04               	decfsz	(??_loadData+1)^0,f,c
  7395   003526  D7FA               	bra	u5097
  7396   003528  D000               	nop2	
  7397   00352A                     
  7398                           ;SPI26K83.c: 274:     return valEEPROM = (valEEPROM2 << 4) + (valEEPROM3 >>4);
  7399   00352A  C008  F003         	movff	loadData@valEEPROM3,??_loadData
  7400   00352E  3A03               	swapf	??_loadData^0,f,c
  7401   003530  0E0F               	movlw	15
  7402   003532  1603               	andwf	??_loadData^0,f,c
  7403   003534  5007               	movf	loadData@valEEPROM2^0,w,c
  7404   003536  0D10               	mullw	16
  7405   003538  50F3               	movf	243,w,c
  7406   00353A  2403               	addwf	??_loadData^0,w,c
  7407   00353C  6E06               	movwf	loadData@valEEPROM^0,c
  7408   00353E  C006  F001         	movff	loadData@valEEPROM,?_loadData
  7409   003542  6A02               	clrf	(?_loadData+1)^0,c
  7410   003544  0012               	return		;funcret
  7411   003546                     __end_of_loadData:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function ___xxtofl *****************
  7415 ;; Defined at:
  7416 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  sign            1    wreg     unsigned char 
  7419 ;;  val             4    0[COMRAM] long 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  sign            1    8[COMRAM] unsigned char 
  7422 ;;  arg             4   10[COMRAM] unsigned long 
  7423 ;;  exp             1    9[COMRAM] unsigned char 
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  4    0[COMRAM] unsigned char 
  7426 ;; Registers used:
  7427 ;;		wreg, status,2, status,0
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;Total ram usage:       14 bytes
  7438 ;; Hardware stack levels used: 1
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_main
  7443 ;;		_loadData16
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text31
  7448   002E3C                     __ptext31:
  7449                           	callstack 0
  7450   002E3C                     ___xxtofl:
  7451                           	callstack 29
  7452                           
  7453                           ;incstack = 0
  7454                           ;___xxtofl@sign stored from wreg
  7455   002E3C  6E09               	movwf	___xxtofl@sign^0,c
  7456   002E3E  5009               	movf	___xxtofl@sign^0,w,c
  7457   002E40  B4D8               	btfsc	status,2,c
  7458   002E42  EF25  F017         	goto	u4251
  7459   002E46  EF27  F017         	goto	u4250
  7460   002E4A                     u4251:
  7461   002E4A  EF49  F017         	goto	l842
  7462   002E4E                     u4250:
  7463   002E4E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7464   002E50  EF2E  F017         	goto	u4260
  7465   002E54  EF2C  F017         	goto	u4261
  7466   002E58                     u4261:
  7467   002E58  EF49  F017         	goto	l842
  7468   002E5C                     u4260:
  7469   002E5C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7470   002E60  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7471   002E64  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7472   002E68  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7473   002E6C  1E05               	comf	??___xxtofl^0,f,c
  7474   002E6E  1E06               	comf	(??___xxtofl+1)^0,f,c
  7475   002E70  1E07               	comf	(??___xxtofl+2)^0,f,c
  7476   002E72  1E08               	comf	(??___xxtofl+3)^0,f,c
  7477   002E74  2A05               	incf	??___xxtofl^0,f,c
  7478   002E76  0E00               	movlw	0
  7479   002E78  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7480   002E7A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7481   002E7C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7482   002E7E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7483   002E82  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7484   002E86  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7485   002E8A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7486   002E8E  EF51  F017         	goto	l3845
  7487   002E92                     l842:
  7488   002E92  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7489   002E96  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7490   002E9A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7491   002E9E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7492   002EA2                     l3845:
  7493   002EA2  5001               	movf	___xxtofl@val^0,w,c
  7494   002EA4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7495   002EA6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7496   002EA8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7497   002EAA  A4D8               	btfss	status,2,c
  7498   002EAC  EF5A  F017         	goto	u4271
  7499   002EB0  EF5C  F017         	goto	u4270
  7500   002EB4                     u4271:
  7501   002EB4  EF66  F017         	goto	l3851
  7502   002EB8                     u4270:
  7503   002EB8  0E00               	movlw	0
  7504   002EBA  6E01               	movwf	?___xxtofl^0,c
  7505   002EBC  0E00               	movlw	0
  7506   002EBE  6E02               	movwf	(?___xxtofl+1)^0,c
  7507   002EC0  0E00               	movlw	0
  7508   002EC2  6E03               	movwf	(?___xxtofl+2)^0,c
  7509   002EC4  0E00               	movlw	0
  7510   002EC6  6E04               	movwf	(?___xxtofl+3)^0,c
  7511   002EC8  EFF7  F017         	goto	l845
  7512   002ECC                     l3851:
  7513   002ECC  0E96               	movlw	150
  7514   002ECE  6E0A               	movwf	___xxtofl@exp^0,c
  7515   002ED0  EF70  F017         	goto	l3855
  7516   002ED4                     l3853:
  7517   002ED4  2A0A               	incf	___xxtofl@exp^0,f,c
  7518   002ED6  90D8               	bcf	status,0,c
  7519   002ED8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7520   002EDA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7521   002EDC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7522   002EDE  320B               	rrcf	___xxtofl@arg^0,f,c
  7523   002EE0                     l3855:
  7524   002EE0  0E00               	movlw	0
  7525   002EE2  140B               	andwf	___xxtofl@arg^0,w,c
  7526   002EE4  6E05               	movwf	??___xxtofl^0,c
  7527   002EE6  0E00               	movlw	0
  7528   002EE8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7529   002EEA  6E06               	movwf	(??___xxtofl+1)^0,c
  7530   002EEC  0E00               	movlw	0
  7531   002EEE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7532   002EF0  6E07               	movwf	(??___xxtofl+2)^0,c
  7533   002EF2  0EFE               	movlw	254
  7534   002EF4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7535   002EF6  6E08               	movwf	(??___xxtofl+3)^0,c
  7536   002EF8  5005               	movf	??___xxtofl^0,w,c
  7537   002EFA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7538   002EFC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7539   002EFE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7540   002F00  A4D8               	btfss	status,2,c
  7541   002F02  EF85  F017         	goto	u4281
  7542   002F06  EF87  F017         	goto	u4280
  7543   002F0A                     u4281:
  7544   002F0A  EF6A  F017         	goto	l3853
  7545   002F0E                     u4280:
  7546   002F0E  EF95  F017         	goto	l849
  7547   002F12                     l3857:
  7548   002F12  2A0A               	incf	___xxtofl@exp^0,f,c
  7549   002F14  0E01               	movlw	1
  7550   002F16  260B               	addwf	___xxtofl@arg^0,f,c
  7551   002F18  0E00               	movlw	0
  7552   002F1A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7553   002F1C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7554   002F1E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7555   002F20  90D8               	bcf	status,0,c
  7556   002F22  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7557   002F24  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7558   002F26  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7559   002F28  320B               	rrcf	___xxtofl@arg^0,f,c
  7560   002F2A                     l849:
  7561   002F2A  0E00               	movlw	0
  7562   002F2C  140B               	andwf	___xxtofl@arg^0,w,c
  7563   002F2E  6E05               	movwf	??___xxtofl^0,c
  7564   002F30  0E00               	movlw	0
  7565   002F32  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7566   002F34  6E06               	movwf	(??___xxtofl+1)^0,c
  7567   002F36  0E00               	movlw	0
  7568   002F38  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7569   002F3A  6E07               	movwf	(??___xxtofl+2)^0,c
  7570   002F3C  0EFF               	movlw	255
  7571   002F3E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7572   002F40  6E08               	movwf	(??___xxtofl+3)^0,c
  7573   002F42  5005               	movf	??___xxtofl^0,w,c
  7574   002F44  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7575   002F46  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7576   002F48  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7577   002F4A  A4D8               	btfss	status,2,c
  7578   002F4C  EFAA  F017         	goto	u4291
  7579   002F50  EFAC  F017         	goto	u4290
  7580   002F54                     u4291:
  7581   002F54  EF89  F017         	goto	l3857
  7582   002F58                     u4290:
  7583   002F58  EFB4  F017         	goto	l3865
  7584   002F5C                     l3863:
  7585   002F5C  060A               	decf	___xxtofl@exp^0,f,c
  7586   002F5E  90D8               	bcf	status,0,c
  7587   002F60  360B               	rlcf	___xxtofl@arg^0,f,c
  7588   002F62  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7589   002F64  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7590   002F66  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7591   002F68                     l3865:
  7592   002F68  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7593   002F6A  EFB9  F017         	goto	u4301
  7594   002F6E  EFBB  F017         	goto	u4300
  7595   002F72                     u4301:
  7596   002F72  EFC3  F017         	goto	l856
  7597   002F76                     u4300:
  7598   002F76  0E02               	movlw	2
  7599   002F78  600A               	cpfslt	___xxtofl@exp^0,c
  7600   002F7A  EFC1  F017         	goto	u4311
  7601   002F7E  EFC3  F017         	goto	u4310
  7602   002F82                     u4311:
  7603   002F82  EFAE  F017         	goto	l3863
  7604   002F86                     u4310:
  7605   002F86                     l856:
  7606   002F86  B00A               	btfsc	___xxtofl@exp^0,0,c
  7607   002F88  EFC8  F017         	goto	u4321
  7608   002F8C  EFCA  F017         	goto	u4320
  7609   002F90                     u4321:
  7610   002F90  EFCB  F017         	goto	l3871
  7611   002F94                     u4320:
  7612   002F94  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7613   002F96                     l3871:
  7614   002F96  90D8               	bcf	status,0,c
  7615   002F98  320A               	rrcf	___xxtofl@exp^0,f,c
  7616   002F9A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7617   002F9E  6A06               	clrf	(??___xxtofl+1)^0,c
  7618   002FA0  6A07               	clrf	(??___xxtofl+2)^0,c
  7619   002FA2  6A08               	clrf	(??___xxtofl+3)^0,c
  7620   002FA4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7621   002FA8  6A07               	clrf	(??___xxtofl+2)^0,c
  7622   002FAA  6A06               	clrf	(??___xxtofl+1)^0,c
  7623   002FAC  6A05               	clrf	??___xxtofl^0,c
  7624   002FAE  5005               	movf	??___xxtofl^0,w,c
  7625   002FB0  120B               	iorwf	___xxtofl@arg^0,f,c
  7626   002FB2  5006               	movf	(??___xxtofl+1)^0,w,c
  7627   002FB4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7628   002FB6  5007               	movf	(??___xxtofl+2)^0,w,c
  7629   002FB8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7630   002FBA  5008               	movf	(??___xxtofl+3)^0,w,c
  7631   002FBC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7632   002FBE  5009               	movf	___xxtofl@sign^0,w,c
  7633   002FC0  B4D8               	btfsc	status,2,c
  7634   002FC2  EFE5  F017         	goto	u4331
  7635   002FC6  EFE7  F017         	goto	u4330
  7636   002FCA                     u4331:
  7637   002FCA  EFEF  F017         	goto	l3881
  7638   002FCE                     u4330:
  7639   002FCE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7640   002FD0  EFEE  F017         	goto	u4340
  7641   002FD4  EFEC  F017         	goto	u4341
  7642   002FD8                     u4341:
  7643   002FD8  EFEF  F017         	goto	l3881
  7644   002FDC                     u4340:
  7645   002FDC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7646   002FDE                     l3881:
  7647   002FDE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7648   002FE2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7649   002FE6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7650   002FEA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7651   002FEE                     l845:
  7652   002FEE  0012               	return		;funcret
  7653   002FF0                     __end_of___xxtofl:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function ___fldiv *****************
  7657 ;; Defined at:
  7658 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  b               4    0[COMRAM] unsigned char 
  7661 ;;  a               4    4[COMRAM] unsigned char 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  grs             4   19[COMRAM] unsigned long 
  7664 ;;  rem             4   12[COMRAM] unsigned long 
  7665 ;;  new_exp         2   17[COMRAM] short 
  7666 ;;  aexp            1   24[COMRAM] unsigned char 
  7667 ;;  bexp            1   23[COMRAM] unsigned char 
  7668 ;;  sign            1   16[COMRAM] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  4    0[COMRAM] unsigned char 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7678 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;Total ram usage:       25 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_loadData16
  7688 ;;		_efgtoa
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text32
  7693   00231A                     __ptext32:
  7694                           	callstack 0
  7695   00231A                     ___fldiv:
  7696                           	callstack 26
  7697   00231A  5004               	movf	(___fldiv@b+3)^0,w,c
  7698   00231C  0B80               	andlw	128
  7699   00231E  6E11               	movwf	___fldiv@sign^0,c
  7700   002320  5004               	movf	(___fldiv@b+3)^0,w,c
  7701   002322  2404               	addwf	(___fldiv@b+3)^0,w,c
  7702   002324  6E18               	movwf	___fldiv@bexp^0,c
  7703   002326  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7704   002328  EF98  F011         	goto	u2671
  7705   00232C  EF9A  F011         	goto	u2670
  7706   002330                     u2671:
  7707   002330  EF9B  F011         	goto	l2841
  7708   002334                     u2670:
  7709   002334  8018               	bsf	___fldiv@bexp^0,0,c
  7710   002336                     l2841:
  7711   002336  5018               	movf	___fldiv@bexp^0,w,c
  7712   002338  B4D8               	btfsc	status,2,c
  7713   00233A  EFA1  F011         	goto	u2681
  7714   00233E  EFA3  F011         	goto	u2680
  7715   002342                     u2681:
  7716   002342  EFB8  F011         	goto	l2851
  7717   002346                     u2680:
  7718   002346  2818               	incf	___fldiv@bexp^0,w,c
  7719   002348  A4D8               	btfss	status,2,c
  7720   00234A  EFA9  F011         	goto	u2691
  7721   00234E  EFAB  F011         	goto	u2690
  7722   002352                     u2691:
  7723   002352  EFB3  F011         	goto	l2847
  7724   002356                     u2690:
  7725   002356  0E00               	movlw	0
  7726   002358  6E01               	movwf	___fldiv@b^0,c
  7727   00235A  0E00               	movlw	0
  7728   00235C  6E02               	movwf	(___fldiv@b+1)^0,c
  7729   00235E  0E00               	movlw	0
  7730   002360  6E03               	movwf	(___fldiv@b+2)^0,c
  7731   002362  0E00               	movlw	0
  7732   002364  6E04               	movwf	(___fldiv@b+3)^0,c
  7733   002366                     l2847:
  7734   002366  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7735   002368  0E00               	movlw	0
  7736   00236A  6E04               	movwf	(___fldiv@b+3)^0,c
  7737   00236C  EFC0  F011         	goto	l2853
  7738   002370                     l2851:
  7739   002370  0E00               	movlw	0
  7740   002372  6E01               	movwf	___fldiv@b^0,c
  7741   002374  0E00               	movlw	0
  7742   002376  6E02               	movwf	(___fldiv@b+1)^0,c
  7743   002378  0E00               	movlw	0
  7744   00237A  6E03               	movwf	(___fldiv@b+2)^0,c
  7745   00237C  0E00               	movlw	0
  7746   00237E  6E04               	movwf	(___fldiv@b+3)^0,c
  7747   002380                     l2853:
  7748   002380  5008               	movf	(___fldiv@a+3)^0,w,c
  7749   002382  0B80               	andlw	128
  7750   002384  1A11               	xorwf	___fldiv@sign^0,f,c
  7751   002386  5008               	movf	(___fldiv@a+3)^0,w,c
  7752   002388  2408               	addwf	(___fldiv@a+3)^0,w,c
  7753   00238A  6E19               	movwf	___fldiv@aexp^0,c
  7754   00238C  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7755   00238E  EFCB  F011         	goto	u2701
  7756   002392  EFCD  F011         	goto	u2700
  7757   002396                     u2701:
  7758   002396  EFCE  F011         	goto	l2861
  7759   00239A                     u2700:
  7760   00239A  8019               	bsf	___fldiv@aexp^0,0,c
  7761   00239C                     l2861:
  7762   00239C  5019               	movf	___fldiv@aexp^0,w,c
  7763   00239E  B4D8               	btfsc	status,2,c
  7764   0023A0  EFD4  F011         	goto	u2711
  7765   0023A4  EFD6  F011         	goto	u2710
  7766   0023A8                     u2711:
  7767   0023A8  EFEB  F011         	goto	l2871
  7768   0023AC                     u2710:
  7769   0023AC  2819               	incf	___fldiv@aexp^0,w,c
  7770   0023AE  A4D8               	btfss	status,2,c
  7771   0023B0  EFDC  F011         	goto	u2721
  7772   0023B4  EFDE  F011         	goto	u2720
  7773   0023B8                     u2721:
  7774   0023B8  EFE6  F011         	goto	l2867
  7775   0023BC                     u2720:
  7776   0023BC  0E00               	movlw	0
  7777   0023BE  6E05               	movwf	___fldiv@a^0,c
  7778   0023C0  0E00               	movlw	0
  7779   0023C2  6E06               	movwf	(___fldiv@a+1)^0,c
  7780   0023C4  0E00               	movlw	0
  7781   0023C6  6E07               	movwf	(___fldiv@a+2)^0,c
  7782   0023C8  0E00               	movlw	0
  7783   0023CA  6E08               	movwf	(___fldiv@a+3)^0,c
  7784   0023CC                     l2867:
  7785   0023CC  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7786   0023CE  0E00               	movlw	0
  7787   0023D0  6E08               	movwf	(___fldiv@a+3)^0,c
  7788   0023D2  EFF3  F011         	goto	l2873
  7789   0023D6                     l2871:
  7790   0023D6  0E00               	movlw	0
  7791   0023D8  6E05               	movwf	___fldiv@a^0,c
  7792   0023DA  0E00               	movlw	0
  7793   0023DC  6E06               	movwf	(___fldiv@a+1)^0,c
  7794   0023DE  0E00               	movlw	0
  7795   0023E0  6E07               	movwf	(___fldiv@a+2)^0,c
  7796   0023E2  0E00               	movlw	0
  7797   0023E4  6E08               	movwf	(___fldiv@a+3)^0,c
  7798   0023E6                     l2873:
  7799   0023E6  5005               	movf	___fldiv@a^0,w,c
  7800   0023E8  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7801   0023EA  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7802   0023EC  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7803   0023EE  A4D8               	btfss	status,2,c
  7804   0023F0  EFFC  F011         	goto	u2731
  7805   0023F4  EFFE  F011         	goto	u2730
  7806   0023F8                     u2731:
  7807   0023F8  EF16  F012         	goto	l2885
  7808   0023FC                     u2730:
  7809   0023FC  0E00               	movlw	0
  7810   0023FE  6E01               	movwf	___fldiv@b^0,c
  7811   002400  0E00               	movlw	0
  7812   002402  6E02               	movwf	(___fldiv@b+1)^0,c
  7813   002404  0E00               	movlw	0
  7814   002406  6E03               	movwf	(___fldiv@b+2)^0,c
  7815   002408  0E00               	movlw	0
  7816   00240A  6E04               	movwf	(___fldiv@b+3)^0,c
  7817   00240C  0E80               	movlw	128
  7818   00240E  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7819   002410  0E7F               	movlw	127
  7820   002412  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7821   002414                     l2879:
  7822   002414  5011               	movf	___fldiv@sign^0,w,c
  7823   002416  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7824   002418  C001  F001         	movff	___fldiv@b,?___fldiv
  7825   00241C  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7826   002420  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7827   002424  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7828   002428  EF59  F013         	goto	l769
  7829   00242C                     l2885:
  7830   00242C  5018               	movf	___fldiv@bexp^0,w,c
  7831   00242E  A4D8               	btfss	status,2,c
  7832   002430  EF1C  F012         	goto	u2741
  7833   002434  EF1E  F012         	goto	u2740
  7834   002438                     u2741:
  7835   002438  EF28  F012         	goto	l2893
  7836   00243C                     u2740:
  7837   00243C  0E00               	movlw	0
  7838   00243E  6E01               	movwf	?___fldiv^0,c
  7839   002440  0E00               	movlw	0
  7840   002442  6E02               	movwf	(?___fldiv+1)^0,c
  7841   002444  0E00               	movlw	0
  7842   002446  6E03               	movwf	(?___fldiv+2)^0,c
  7843   002448  0E00               	movlw	0
  7844   00244A  6E04               	movwf	(?___fldiv+3)^0,c
  7845   00244C  EF59  F013         	goto	l769
  7846   002450                     l2893:
  7847   002450  5019               	movf	___fldiv@aexp^0,w,c
  7848   002452  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7849   002456  6A0A               	clrf	(??___fldiv+1)^0,c
  7850   002458  5E09               	subwf	??___fldiv^0,f,c
  7851   00245A  0E00               	movlw	0
  7852   00245C  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7853   00245E  0E7F               	movlw	127
  7854   002460  2409               	addwf	??___fldiv^0,w,c
  7855   002462  6E12               	movwf	___fldiv@new_exp^0,c
  7856   002464  0E00               	movlw	0
  7857   002466  200A               	addwfc	(??___fldiv+1)^0,w,c
  7858   002468  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7859   00246A  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7860   00246E  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7861   002472  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7862   002476  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7863   00247A  0E00               	movlw	0
  7864   00247C  6E01               	movwf	___fldiv@b^0,c
  7865   00247E  0E00               	movlw	0
  7866   002480  6E02               	movwf	(___fldiv@b+1)^0,c
  7867   002482  0E00               	movlw	0
  7868   002484  6E03               	movwf	(___fldiv@b+2)^0,c
  7869   002486  0E00               	movlw	0
  7870   002488  6E04               	movwf	(___fldiv@b+3)^0,c
  7871   00248A  0E00               	movlw	0
  7872   00248C  6E14               	movwf	___fldiv@grs^0,c
  7873   00248E  0E00               	movlw	0
  7874   002490  6E15               	movwf	(___fldiv@grs+1)^0,c
  7875   002492  0E00               	movlw	0
  7876   002494  6E16               	movwf	(___fldiv@grs+2)^0,c
  7877   002496  0E00               	movlw	0
  7878   002498  6E17               	movwf	(___fldiv@grs+3)^0,c
  7879   00249A  0E00               	movlw	0
  7880   00249C  6E19               	movwf	___fldiv@aexp^0,c
  7881   00249E  EF89  F012         	goto	l771
  7882   0024A2                     l2903:
  7883   0024A2  5019               	movf	___fldiv@aexp^0,w,c
  7884   0024A4  B4D8               	btfsc	status,2,c
  7885   0024A6  EF57  F012         	goto	u2751
  7886   0024AA  EF59  F012         	goto	u2750
  7887   0024AE                     u2751:
  7888   0024AE  EF70  F012         	goto	l2911
  7889   0024B2                     u2750:
  7890   0024B2  90D8               	bcf	status,0,c
  7891   0024B4  360D               	rlcf	___fldiv@rem^0,f,c
  7892   0024B6  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7893   0024B8  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7894   0024BA  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7895   0024BC  90D8               	bcf	status,0,c
  7896   0024BE  3601               	rlcf	___fldiv@b^0,f,c
  7897   0024C0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7898   0024C2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7899   0024C4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7900   0024C6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7901   0024C8  EF68  F012         	goto	u2761
  7902   0024CC  EF6A  F012         	goto	u2760
  7903   0024D0                     u2761:
  7904   0024D0  EF6B  F012         	goto	l774
  7905   0024D4                     u2760:
  7906   0024D4  8001               	bsf	___fldiv@b^0,0,c
  7907   0024D6                     l774:
  7908   0024D6  90D8               	bcf	status,0,c
  7909   0024D8  3614               	rlcf	___fldiv@grs^0,f,c
  7910   0024DA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7911   0024DC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7912   0024DE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7913   0024E0                     l2911:
  7914   0024E0  5005               	movf	___fldiv@a^0,w,c
  7915   0024E2  5C0D               	subwf	___fldiv@rem^0,w,c
  7916   0024E4  5006               	movf	(___fldiv@a+1)^0,w,c
  7917   0024E6  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7918   0024E8  5007               	movf	(___fldiv@a+2)^0,w,c
  7919   0024EA  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7920   0024EC  5008               	movf	(___fldiv@a+3)^0,w,c
  7921   0024EE  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7922   0024F0  A0D8               	btfss	status,0,c
  7923   0024F2  EF7D  F012         	goto	u2771
  7924   0024F6  EF7F  F012         	goto	u2770
  7925   0024FA                     u2771:
  7926   0024FA  EF88  F012         	goto	l2917
  7927   0024FE                     u2770:
  7928   0024FE  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7929   002500  5005               	movf	___fldiv@a^0,w,c
  7930   002502  5E0D               	subwf	___fldiv@rem^0,f,c
  7931   002504  5006               	movf	(___fldiv@a+1)^0,w,c
  7932   002506  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7933   002508  5007               	movf	(___fldiv@a+2)^0,w,c
  7934   00250A  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7935   00250C  5008               	movf	(___fldiv@a+3)^0,w,c
  7936   00250E  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7937   002510                     l2917:
  7938   002510  2A19               	incf	___fldiv@aexp^0,f,c
  7939   002512                     l771:
  7940   002512  0E19               	movlw	25
  7941   002514  6419               	cpfsgt	___fldiv@aexp^0,c
  7942   002516  EF8F  F012         	goto	u2781
  7943   00251A  EF91  F012         	goto	u2780
  7944   00251E                     u2781:
  7945   00251E  EF51  F012         	goto	l2903
  7946   002522                     u2780:
  7947   002522  500D               	movf	___fldiv@rem^0,w,c
  7948   002524  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7949   002526  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7950   002528  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7951   00252A  B4D8               	btfsc	status,2,c
  7952   00252C  EF9A  F012         	goto	u2791
  7953   002530  EF9C  F012         	goto	u2790
  7954   002534                     u2791:
  7955   002534  EFB4  F012         	goto	l2929
  7956   002538                     u2790:
  7957   002538  8014               	bsf	___fldiv@grs^0,0,c
  7958   00253A  EFB4  F012         	goto	l2929
  7959   00253E                     l2923:
  7960   00253E  90D8               	bcf	status,0,c
  7961   002540  3601               	rlcf	___fldiv@b^0,f,c
  7962   002542  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7963   002544  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7964   002546  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7965   002548  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7966   00254A  EFA9  F012         	goto	u2801
  7967   00254E  EFAB  F012         	goto	u2800
  7968   002552                     u2801:
  7969   002552  EFAC  F012         	goto	l780
  7970   002556                     u2800:
  7971   002556  8001               	bsf	___fldiv@b^0,0,c
  7972   002558                     l780:
  7973   002558  90D8               	bcf	status,0,c
  7974   00255A  3614               	rlcf	___fldiv@grs^0,f,c
  7975   00255C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7976   00255E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7977   002560  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7978   002562  0612               	decf	___fldiv@new_exp^0,f,c
  7979   002564  A0D8               	btfss	status,0,c
  7980   002566  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7981   002568                     l2929:
  7982   002568  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7983   00256A  EFB9  F012         	goto	u2811
  7984   00256E  EFBB  F012         	goto	u2810
  7985   002572                     u2811:
  7986   002572  EF9F  F012         	goto	l2923
  7987   002576                     u2810:
  7988   002576  0E00               	movlw	0
  7989   002578  6E19               	movwf	___fldiv@aexp^0,c
  7990   00257A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7991   00257C  EFC2  F012         	goto	u2821
  7992   002580  EFC4  F012         	goto	u2820
  7993   002584                     u2821:
  7994   002584  EFE8  F012         	goto	l782
  7995   002588                     u2820:
  7996   002588  0EFF               	movlw	255
  7997   00258A  1414               	andwf	___fldiv@grs^0,w,c
  7998   00258C  6E09               	movwf	??___fldiv^0,c
  7999   00258E  0EFF               	movlw	255
  8000   002590  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8001   002592  6E0A               	movwf	(??___fldiv+1)^0,c
  8002   002594  0EFF               	movlw	255
  8003   002596  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8004   002598  6E0B               	movwf	(??___fldiv+2)^0,c
  8005   00259A  0E7F               	movlw	127
  8006   00259C  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8007   00259E  6E0C               	movwf	(??___fldiv+3)^0,c
  8008   0025A0  5009               	movf	??___fldiv^0,w,c
  8009   0025A2  100A               	iorwf	(??___fldiv+1)^0,w,c
  8010   0025A4  100B               	iorwf	(??___fldiv+2)^0,w,c
  8011   0025A6  100C               	iorwf	(??___fldiv+3)^0,w,c
  8012   0025A8  B4D8               	btfsc	status,2,c
  8013   0025AA  EFD9  F012         	goto	u2831
  8014   0025AE  EFDB  F012         	goto	u2830
  8015   0025B2                     u2831:
  8016   0025B2  EFDF  F012         	goto	l783
  8017   0025B6                     u2830:
  8018   0025B6                     l2937:
  8019   0025B6  0E01               	movlw	1
  8020   0025B8  6E19               	movwf	___fldiv@aexp^0,c
  8021   0025BA  EFE8  F012         	goto	l782
  8022   0025BE                     l783:
  8023   0025BE  A001               	btfss	___fldiv@b^0,0,c
  8024   0025C0  EFE4  F012         	goto	u2841
  8025   0025C4  EFE6  F012         	goto	u2840
  8026   0025C8                     u2841:
  8027   0025C8  EFE8  F012         	goto	l782
  8028   0025CC                     u2840:
  8029   0025CC  EFDB  F012         	goto	l2937
  8030   0025D0                     l782:
  8031   0025D0  5019               	movf	___fldiv@aexp^0,w,c
  8032   0025D2  B4D8               	btfsc	status,2,c
  8033   0025D4  EFEE  F012         	goto	u2851
  8034   0025D8  EFF0  F012         	goto	u2850
  8035   0025DC                     u2851:
  8036   0025DC  EF14  F013         	goto	l2949
  8037   0025E0                     u2850:
  8038   0025E0  0E01               	movlw	1
  8039   0025E2  2601               	addwf	___fldiv@b^0,f,c
  8040   0025E4  0E00               	movlw	0
  8041   0025E6  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8042   0025E8  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8043   0025EA  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8044   0025EC  A004               	btfss	(___fldiv@b+3)^0,0,c
  8045   0025EE  EFFB  F012         	goto	u2861
  8046   0025F2  EFFD  F012         	goto	u2860
  8047   0025F6                     u2861:
  8048   0025F6  EF14  F013         	goto	l2949
  8049   0025FA                     u2860:
  8050   0025FA  C001  F009         	movff	___fldiv@b,??___fldiv
  8051   0025FE  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8052   002602  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8053   002606  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8054   00260A  340C               	rlcf	(??___fldiv+3)^0,w,c
  8055   00260C  320C               	rrcf	(??___fldiv+3)^0,f,c
  8056   00260E  320B               	rrcf	(??___fldiv+2)^0,f,c
  8057   002610  320A               	rrcf	(??___fldiv+1)^0,f,c
  8058   002612  3209               	rrcf	??___fldiv^0,f,c
  8059   002614  C009  F001         	movff	??___fldiv,___fldiv@b
  8060   002618  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8061   00261C  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8062   002620  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8063   002624  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8064   002626  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8065   002628                     l2949:
  8066   002628  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8067   00262A  EF1F  F013         	goto	u2871
  8068   00262E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8069   002630  E108               	bnz	u2870
  8070   002632  2812               	incf	___fldiv@new_exp^0,w,c
  8071   002634  A0D8               	btfss	status,0,c
  8072   002636  EF1F  F013         	goto	u2871
  8073   00263A  EF21  F013         	goto	u2870
  8074   00263E                     u2871:
  8075   00263E  EF2C  F013         	goto	l2953
  8076   002642                     u2870:
  8077   002642  0E00               	movlw	0
  8078   002644  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8079   002646  6812               	setf	___fldiv@new_exp^0,c
  8080   002648  0E00               	movlw	0
  8081   00264A  6E01               	movwf	___fldiv@b^0,c
  8082   00264C  0E00               	movlw	0
  8083   00264E  6E02               	movwf	(___fldiv@b+1)^0,c
  8084   002650  0E00               	movlw	0
  8085   002652  6E03               	movwf	(___fldiv@b+2)^0,c
  8086   002654  0E00               	movlw	0
  8087   002656  6E04               	movwf	(___fldiv@b+3)^0,c
  8088   002658                     l2953:
  8089   002658  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8090   00265A  EF39  F013         	goto	u2880
  8091   00265E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8092   002660  E106               	bnz	u2881
  8093   002662  0412               	decf	___fldiv@new_exp^0,w,c
  8094   002664  B0D8               	btfsc	status,0,c
  8095   002666  EF37  F013         	goto	u2881
  8096   00266A  EF39  F013         	goto	u2880
  8097   00266E                     u2881:
  8098   00266E  EF47  F013         	goto	l2957
  8099   002672                     u2880:
  8100   002672  0E00               	movlw	0
  8101   002674  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8102   002676  0E00               	movlw	0
  8103   002678  6E12               	movwf	___fldiv@new_exp^0,c
  8104   00267A  0E00               	movlw	0
  8105   00267C  6E01               	movwf	___fldiv@b^0,c
  8106   00267E  0E00               	movlw	0
  8107   002680  6E02               	movwf	(___fldiv@b+1)^0,c
  8108   002682  0E00               	movlw	0
  8109   002684  6E03               	movwf	(___fldiv@b+2)^0,c
  8110   002686  0E00               	movlw	0
  8111   002688  6E04               	movwf	(___fldiv@b+3)^0,c
  8112   00268A  0E00               	movlw	0
  8113   00268C  6E11               	movwf	___fldiv@sign^0,c
  8114   00268E                     l2957:
  8115   00268E  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8116   002692  A018               	btfss	___fldiv@bexp^0,0,c
  8117   002694  EF4E  F013         	goto	u2891
  8118   002698  EF50  F013         	goto	u2890
  8119   00269C                     u2891:
  8120   00269C  EF53  F013         	goto	l2963
  8121   0026A0                     u2890:
  8122   0026A0  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8123   0026A2  EF54  F013         	goto	l2965
  8124   0026A6                     l2963:
  8125   0026A6  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8126   0026A8                     l2965:
  8127   0026A8  90D8               	bcf	status,0,c
  8128   0026AA  3018               	rrcf	___fldiv@bexp^0,w,c
  8129   0026AC  6E04               	movwf	(___fldiv@b+3)^0,c
  8130   0026AE  EF0A  F012         	goto	l2879
  8131   0026B2                     l769:
  8132   0026B2  0012               	return		;funcret
  8133   0026B4                     __end_of___fldiv:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function _deleteAll *****************
  8137 ;; Defined at:
  8138 ;;		line 284 in file "SPI26K83.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2, status,0
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;Total ram usage:        2 bytes
  8157 ;; Hardware stack levels used: 1
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text33
  8166   003BAA                     __ptext33:
  8167                           	callstack 0
  8168   003BAA                     _deleteAll:
  8169                           	callstack 30
  8170   003BAA                     
  8171                           ;SPI26K83.c: 285:      PORTBbits.RB3 = 1;
  8172   003BAA  86CB               	bsf	203,3,c	;volatile
  8173   003BAC                     
  8174                           ;SPI26K83.c: 286:     SPI1TWIDTH = 0;
  8175   003BAC  0E00               	movlw	0
  8176   003BAE  013D               	movlb	61	; () banked
  8177   003BB0  6F18               	movwf	24,b	;volatile
  8178                           
  8179                           ;SPI26K83.c: 287:     SPI1TCNTL = 1;
  8180   003BB2  0E01               	movlw	1
  8181   003BB4  6F12               	movwf	18,b	;volatile
  8182                           
  8183                           ;SPI26K83.c: 288:     SPI1TCNTH = 0;
  8184   003BB6  0E00               	movlw	0
  8185   003BB8  6F13               	movwf	19,b	;volatile
  8186   003BBA                     
  8187                           ; BSR set to: 61
  8188                           ;SPI26K83.c: 289:     SPI1CON2bits.TXR = 1;
  8189   003BBA  8316               	bsf	22,1,b	;volatile
  8190   003BBC                     
  8191                           ; BSR set to: 61
  8192                           ;SPI26K83.c: 290:     SPI1CON0bits.EN = 1;
  8193   003BBC  8F14               	bsf	20,7,b	;volatile
  8194                           
  8195                           ;SPI26K83.c: 291:     SPI1TXB = 0b10010000;
  8196   003BBE  0E90               	movlw	144
  8197   003BC0  6F11               	movwf	17,b	;volatile
  8198   003BC2                     l181:
  8199                           
  8200                           ; BSR set to: 61
  8201   003BC2  AB17               	btfss	23,5,b	;volatile
  8202   003BC4  EFE6  F01D         	goto	u4391
  8203   003BC8  EFE8  F01D         	goto	u4390
  8204   003BCC                     u4391:
  8205   003BCC  EFE1  F01D         	goto	l181
  8206   003BD0                     u4390:
  8207   003BD0                     
  8208                           ; BSR set to: 61
  8209                           ;SPI26K83.c: 293:     SPI1CON2bits.TXR = 0;
  8210   003BD0  9316               	bcf	22,1,b	;volatile
  8211                           
  8212                           ;SPI26K83.c: 294:     PORTBbits.RB3 = 0;
  8213   003BD2  96CB               	bcf	203,3,c	;volatile
  8214                           
  8215                           ;SPI26K83.c: 295:     SPI1CON0bits.EN = 0;
  8216   003BD4  9F14               	bcf	20,7,b	;volatile
  8217   003BD6                     
  8218                           ; BSR set to: 61
  8219                           ;SPI26K83.c: 296:     PORTBbits.RB4 = !PORTBbits.RB4;
  8220   003BD6  A8CB               	btfss	203,4,c	;volatile
  8221   003BD8  EFF0  F01D         	goto	u4401
  8222   003BDC  EFF4  F01D         	goto	u4400
  8223   003BE0                     u4401:
  8224   003BE0  6A01               	clrf	??_deleteAll^0,c
  8225   003BE2  2A01               	incf	??_deleteAll^0,f,c
  8226   003BE4  EFF5  F01D         	goto	u4418
  8227   003BE8                     u4400:
  8228   003BE8  6A01               	clrf	??_deleteAll^0,c
  8229   003BEA                     u4418:
  8230   003BEA  3A01               	swapf	??_deleteAll^0,f,c
  8231   003BEC  50CB               	movf	203,w,c	;volatile
  8232   003BEE  1801               	xorwf	??_deleteAll^0,w,c
  8233   003BF0  0BEF               	andlw	-17
  8234   003BF2  1801               	xorwf	??_deleteAll^0,w,c
  8235   003BF4  6ECB               	movwf	203,c	;volatile
  8236   003BF6                     
  8237                           ;SPI26K83.c: 297:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8238   003BF6  0E52               	movlw	82
  8239   003BF8  6E02               	movwf	(??_deleteAll+1)^0,c
  8240   003BFA  0E2B               	movlw	43
  8241   003BFC  6E01               	movwf	??_deleteAll^0,c
  8242   003BFE  0E00               	movlw	0
  8243   003C00                     u5107:
  8244   003C00  2EE8               	decfsz	wreg,f,c
  8245   003C02  D7FE               	bra	u5107
  8246   003C04  2E01               	decfsz	??_deleteAll^0,f,c
  8247   003C06  D7FC               	bra	u5107
  8248   003C08  2E02               	decfsz	(??_deleteAll+1)^0,f,c
  8249   003C0A  D7FA               	bra	u5107
  8250   003C0C  D000               	nop2	
  8251   003C0E  0012               	return		;funcret
  8252   003C10                     __end_of_deleteAll:
  8253                           	callstack 0
  8254                           
  8255 ;; *************** function _Lcd_Write_String *****************
  8256 ;; Defined at:
  8257 ;;		line 94 in file "./lcd.h"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  a               1    4[COMRAM] PTR unsigned char 
  8260 ;;		 -> main@ligne1(64), 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  i               2    5[COMRAM] int 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      void 
  8265 ;; Registers used:
  8266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8272 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;Total ram usage:        3 bytes
  8277 ;; Hardware stack levels used: 1
  8278 ;; Hardware stack levels required when called: 2
  8279 ;; This function calls:
  8280 ;;		_Lcd_Write_Char
  8281 ;; This function is called by:
  8282 ;;		_main
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text34
  8287   003EFE                     __ptext34:
  8288                           	callstack 0
  8289   003EFE                     _Lcd_Write_String:
  8290                           	callstack 28
  8291   003EFE                     
  8292                           ;./lcd.h: 94: void Lcd_Write_String(char *a);./lcd.h: 95: {;./lcd.h: 96:  int i;;./lcd.h
      +                          : 97:  for(i=0;a[i]!='\0';i++)
  8293   003EFE  0E00               	movlw	0
  8294   003F00  6E07               	movwf	(Lcd_Write_String@i+1)^0,c
  8295   003F02  0E00               	movlw	0
  8296   003F04  6E06               	movwf	Lcd_Write_String@i^0,c
  8297   003F06  EF8E  F01F         	goto	l3947
  8298   003F0A                     l3943:
  8299                           
  8300                           ;./lcd.h: 98:     Lcd_Write_Char(a[i]);
  8301   003F0A  5005               	movf	Lcd_Write_String@a^0,w,c
  8302   003F0C  2406               	addwf	Lcd_Write_String@i^0,w,c
  8303   003F0E  6ED9               	movwf	fsr2l,c
  8304   003F10  6ADA               	clrf	fsr2h,c
  8305   003F12  50DF               	movf	indf2,w,c
  8306   003F14  EC9B  F01F         	call	_Lcd_Write_Char
  8307   003F18  4A06               	infsnz	Lcd_Write_String@i^0,f,c
  8308   003F1A  2A07               	incf	(Lcd_Write_String@i+1)^0,f,c
  8309   003F1C                     l3947:
  8310   003F1C  5005               	movf	Lcd_Write_String@a^0,w,c
  8311   003F1E  2406               	addwf	Lcd_Write_String@i^0,w,c
  8312   003F20  6ED9               	movwf	fsr2l,c
  8313   003F22  6ADA               	clrf	fsr2h,c
  8314   003F24  50DF               	movf	indf2,w,c
  8315   003F26  A4D8               	btfss	status,2,c
  8316   003F28  EF98  F01F         	goto	u4381
  8317   003F2C  EF9A  F01F         	goto	u4380
  8318   003F30                     u4381:
  8319   003F30  EF85  F01F         	goto	l3943
  8320   003F34                     u4380:
  8321   003F34  0012               	return		;funcret
  8322   003F36                     __end_of_Lcd_Write_String:
  8323                           	callstack 0
  8324                           
  8325 ;; *************** function _Lcd_Write_Char *****************
  8326 ;; Defined at:
  8327 ;;		line 78 in file "./lcd.h"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  a               1    wreg     unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  a               1    3[COMRAM] unsigned char 
  8332 ;;  y               1    2[COMRAM] unsigned char 
  8333 ;;  temp            1    1[COMRAM] unsigned char 
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0, cstack
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;Total ram usage:        3 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; Hardware stack levels required when called: 1
  8350 ;; This function calls:
  8351 ;;		_Lcd_Port
  8352 ;; This function is called by:
  8353 ;;		_Lcd_Write_String
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text35
  8358   003F36                     __ptext35:
  8359                           	callstack 0
  8360   003F36                     _Lcd_Write_Char:
  8361                           	callstack 28
  8362                           
  8363                           ;incstack = 0
  8364                           ;Lcd_Write_Char@a stored from wreg
  8365   003F36  6E04               	movwf	Lcd_Write_Char@a^0,c
  8366   003F38                     
  8367                           ;./lcd.h: 78: void Lcd_Write_Char(char a);./lcd.h: 79: {;./lcd.h: 80:    char temp,y;;./
      +                          lcd.h: 81:    temp = a&0x0F;
  8368   003F38  5004               	movf	Lcd_Write_Char@a^0,w,c
  8369   003F3A  0B0F               	andlw	15
  8370   003F3C  6E02               	movwf	Lcd_Write_Char@temp^0,c
  8371                           
  8372                           ;./lcd.h: 82:    y = a&0xF0;
  8373   003F3E  5004               	movf	Lcd_Write_Char@a^0,w,c
  8374   003F40  0BF0               	andlw	240
  8375   003F42  6E03               	movwf	Lcd_Write_Char@y^0,c
  8376   003F44                     
  8377                           ;./lcd.h: 83:    PORTAbits.RA0 = 1;
  8378   003F44  80CA               	bsf	202,0,c	;volatile
  8379   003F46                     
  8380                           ;./lcd.h: 84:    Lcd_Port(y>>4);
  8381   003F46  3803               	swapf	Lcd_Write_Char@y^0,w,c
  8382   003F48  0B0F               	andlw	15
  8383   003F4A  EC3B  F01E         	call	_Lcd_Port
  8384   003F4E                     
  8385                           ;./lcd.h: 85:    PORTAbits.RA1 = 1;
  8386   003F4E  82CA               	bsf	202,1,c	;volatile
  8387   003F50                     
  8388                           ;./lcd.h: 86:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  8389   003F50  0ED5               	movlw	213
  8390   003F52                     u5117:
  8391   003F52  2EE8               	decfsz	wreg,f,c
  8392   003F54  D7FE               	bra	u5117
  8393   003F56  0000               	nop	
  8394   003F58                     
  8395                           ;./lcd.h: 87:    PORTAbits.RA1 = 0;
  8396   003F58  92CA               	bcf	202,1,c	;volatile
  8397   003F5A                     
  8398                           ;./lcd.h: 88:    Lcd_Port(temp);
  8399   003F5A  5002               	movf	Lcd_Write_Char@temp^0,w,c
  8400   003F5C  EC3B  F01E         	call	_Lcd_Port
  8401   003F60                     
  8402                           ;./lcd.h: 89:    PORTAbits.RA1 = 1;
  8403   003F60  82CA               	bsf	202,1,c	;volatile
  8404   003F62                     
  8405                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  8406   003F62  0ED5               	movlw	213
  8407   003F64                     u5127:
  8408   003F64  2EE8               	decfsz	wreg,f,c
  8409   003F66  D7FE               	bra	u5127
  8410   003F68  0000               	nop	
  8411   003F6A                     
  8412                           ;./lcd.h: 91:    PORTAbits.RA1 = 0;
  8413   003F6A  92CA               	bcf	202,1,c	;volatile
  8414   003F6C  0012               	return		;funcret
  8415   003F6E                     __end_of_Lcd_Write_Char:
  8416                           	callstack 0
  8417                           
  8418 ;; *************** function _Lcd_Set_Cursor *****************
  8419 ;; Defined at:
  8420 ;;		line 38 in file "./lcd.h"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  a               1    wreg     unsigned char 
  8423 ;;  b               1    3[COMRAM] unsigned char 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  a               1    4[COMRAM] unsigned char 
  8426 ;;  temp            1    7[COMRAM] unsigned char 
  8427 ;;  y               1    6[COMRAM] unsigned char 
  8428 ;;  z               1    5[COMRAM] unsigned char 
  8429 ;; Return value:  Size  Location     Type
  8430 ;;                  1    wreg      void 
  8431 ;; Registers used:
  8432 ;;		wreg, status,2, status,0, cstack
  8433 ;; Tracked objects:
  8434 ;;		On entry : 0/0
  8435 ;;		On exit  : 0/0
  8436 ;;		Unchanged: 0/0
  8437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;Total ram usage:        5 bytes
  8443 ;; Hardware stack levels used: 1
  8444 ;; Hardware stack levels required when called: 2
  8445 ;; This function calls:
  8446 ;;		_Lcd_Cmd
  8447 ;; This function is called by:
  8448 ;;		_main
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text36
  8453   003C10                     __ptext36:
  8454                           	callstack 0
  8455   003C10                     _Lcd_Set_Cursor:
  8456                           	callstack 28
  8457                           
  8458                           ;incstack = 0
  8459                           ;Lcd_Set_Cursor@a stored from wreg
  8460   003C10  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  8461   003C12                     
  8462                           ;./lcd.h: 38: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: {;./lcd.h: 40:  char temp
      +                          ,z,y;;./lcd.h: 41:  if(a == 1)
  8463   003C12  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  8464   003C14  A4D8               	btfss	status,2,c
  8465   003C16  EF0F  F01E         	goto	u4361
  8466   003C1A  EF11  F01E         	goto	u4360
  8467   003C1E                     u4361:
  8468   003C1E  EF22  F01E         	goto	l3905
  8469   003C22                     u4360:
  8470   003C22                     
  8471                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
  8472   003C22  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8473   003C24  0F7F               	addlw	127
  8474   003C26  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8475                           
  8476                           ;./lcd.h: 44:   z = temp>>4;
  8477   003C28  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8478   003C2A  0B0F               	andlw	15
  8479   003C2C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8480                           
  8481                           ;./lcd.h: 45:   y = temp & 0x0F;
  8482   003C2E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8483   003C30  0B0F               	andlw	15
  8484   003C32  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8485   003C34                     
  8486                           ;./lcd.h: 46:   Lcd_Cmd(z);
  8487   003C34  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8488   003C36  ECFD  F01F         	call	_Lcd_Cmd
  8489   003C3A                     
  8490                           ;./lcd.h: 47:   Lcd_Cmd(y);
  8491   003C3A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8492   003C3C  ECFD  F01F         	call	_Lcd_Cmd
  8493                           
  8494                           ;./lcd.h: 48:  }
  8495   003C40  EF3A  F01E         	goto	l115
  8496   003C44                     l3905:
  8497   003C44  0E02               	movlw	2
  8498   003C46  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  8499   003C48  A4D8               	btfss	status,2,c
  8500   003C4A  EF29  F01E         	goto	u4371
  8501   003C4E  EF2B  F01E         	goto	u4370
  8502   003C52                     u4371:
  8503   003C52  EF3A  F01E         	goto	l115
  8504   003C56                     u4370:
  8505   003C56                     
  8506                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
  8507   003C56  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  8508   003C58  0FBF               	addlw	191
  8509   003C5A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  8510                           
  8511                           ;./lcd.h: 52:   z = temp>>4;
  8512   003C5C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  8513   003C5E  0B0F               	andlw	15
  8514   003C60  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  8515                           
  8516                           ;./lcd.h: 53:   y = temp & 0x0F;
  8517   003C62  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  8518   003C64  0B0F               	andlw	15
  8519   003C66  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  8520   003C68                     
  8521                           ;./lcd.h: 54:   Lcd_Cmd(z);
  8522   003C68  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  8523   003C6A  ECFD  F01F         	call	_Lcd_Cmd
  8524   003C6E                     
  8525                           ;./lcd.h: 55:   Lcd_Cmd(y);
  8526   003C6E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  8527   003C70  ECFD  F01F         	call	_Lcd_Cmd
  8528   003C74                     l115:
  8529   003C74  0012               	return		;funcret
  8530   003C76                     __end_of_Lcd_Set_Cursor:
  8531                           	callstack 0
  8532                           
  8533 ;; *************** function _Lcd_Init *****************
  8534 ;; Defined at:
  8535 ;;		line 59 in file "./lcd.h"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, status,2, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;Total ram usage:        2 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 2
  8556 ;; This function calls:
  8557 ;;		_Lcd_Cmd
  8558 ;;		_Lcd_Port
  8559 ;; This function is called by:
  8560 ;;		_main
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text37
  8565   003AC8                     __ptext37:
  8566                           	callstack 0
  8567   003AC8                     _Lcd_Init:
  8568                           	callstack 28
  8569   003AC8                     
  8570                           ;./lcd.h: 61:   Lcd_Port(0x00);
  8571   003AC8  0E00               	movlw	0
  8572   003ACA  EC3B  F01E         	call	_Lcd_Port
  8573   003ACE                     
  8574                           ;./lcd.h: 62:    _delay((unsigned long)((20)*(64000000/4000.0)));
  8575   003ACE  0E02               	movlw	2
  8576   003AD0  6E05               	movwf	(??_Lcd_Init+1)^0,c
  8577   003AD2  0EA0               	movlw	160
  8578   003AD4  6E04               	movwf	??_Lcd_Init^0,c
  8579   003AD6  0E92               	movlw	146
  8580   003AD8                     u5137:
  8581   003AD8  2EE8               	decfsz	wreg,f,c
  8582   003ADA  D7FE               	bra	u5137
  8583   003ADC  2E04               	decfsz	??_Lcd_Init^0,f,c
  8584   003ADE  D7FC               	bra	u5137
  8585   003AE0  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  8586   003AE2  D7FA               	bra	u5137
  8587   003AE4  D000               	nop2	
  8588   003AE6                     
  8589                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
  8590   003AE6  0E03               	movlw	3
  8591   003AE8  ECFD  F01F         	call	_Lcd_Cmd
  8592   003AEC                     
  8593                           ;./lcd.h: 64:  _delay((unsigned long)((5)*(64000000/4000.0)));
  8594   003AEC  0E68               	movlw	104
  8595   003AEE  6E04               	movwf	??_Lcd_Init^0,c
  8596   003AF0  0EE4               	movlw	228
  8597   003AF2                     u5147:
  8598   003AF2  2EE8               	decfsz	wreg,f,c
  8599   003AF4  D7FE               	bra	u5147
  8600   003AF6  2E04               	decfsz	??_Lcd_Init^0,f,c
  8601   003AF8  D7FC               	bra	u5147
  8602   003AFA  D000               	nop2	
  8603   003AFC                     
  8604                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  8605   003AFC  0E03               	movlw	3
  8606   003AFE  ECFD  F01F         	call	_Lcd_Cmd
  8607   003B02                     
  8608                           ;./lcd.h: 66:  _delay((unsigned long)((11)*(64000000/4000.0)));
  8609   003B02  0EE5               	movlw	229
  8610   003B04  6E04               	movwf	??_Lcd_Init^0,c
  8611   003B06  0E91               	movlw	145
  8612   003B08                     u5157:
  8613   003B08  2EE8               	decfsz	wreg,f,c
  8614   003B0A  D7FE               	bra	u5157
  8615   003B0C  2E04               	decfsz	??_Lcd_Init^0,f,c
  8616   003B0E  D7FC               	bra	u5157
  8617   003B10  0000               	nop	
  8618   003B12                     
  8619                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  8620   003B12  0E03               	movlw	3
  8621   003B14  ECFD  F01F         	call	_Lcd_Cmd
  8622   003B18                     
  8623                           ;./lcd.h: 69:   Lcd_Cmd(0x02);
  8624   003B18  0E02               	movlw	2
  8625   003B1A  ECFD  F01F         	call	_Lcd_Cmd
  8626   003B1E                     
  8627                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  8628   003B1E  0E02               	movlw	2
  8629   003B20  ECFD  F01F         	call	_Lcd_Cmd
  8630   003B24                     
  8631                           ;./lcd.h: 71:   Lcd_Cmd(0x08);
  8632   003B24  0E08               	movlw	8
  8633   003B26  ECFD  F01F         	call	_Lcd_Cmd
  8634   003B2A                     
  8635                           ;./lcd.h: 72:   Lcd_Cmd(0x00);
  8636   003B2A  0E00               	movlw	0
  8637   003B2C  ECFD  F01F         	call	_Lcd_Cmd
  8638   003B30                     
  8639                           ;./lcd.h: 73:   Lcd_Cmd(0x0C);
  8640   003B30  0E0C               	movlw	12
  8641   003B32  ECFD  F01F         	call	_Lcd_Cmd
  8642   003B36                     
  8643                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  8644   003B36  0E00               	movlw	0
  8645   003B38  ECFD  F01F         	call	_Lcd_Cmd
  8646   003B3C                     
  8647                           ;./lcd.h: 75:   Lcd_Cmd(0x06);
  8648   003B3C  0E06               	movlw	6
  8649   003B3E  ECFD  F01F         	call	_Lcd_Cmd
  8650   003B42  0012               	return		;funcret
  8651   003B44                     __end_of_Lcd_Init:
  8652                           	callstack 0
  8653                           
  8654 ;; *************** function _Lcd_Clear *****************
  8655 ;; Defined at:
  8656 ;;		line 32 in file "./lcd.h"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;		None
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;		None
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  2  108[None  ] int 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, cstack
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;Total ram usage:        0 bytes
  8675 ;; Hardware stack levels used: 1
  8676 ;; Hardware stack levels required when called: 2
  8677 ;; This function calls:
  8678 ;;		_Lcd_Cmd
  8679 ;; This function is called by:
  8680 ;;		_main
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text38
  8685   00401A                     __ptext38:
  8686                           	callstack 0
  8687   00401A                     _Lcd_Clear:
  8688                           	callstack 28
  8689   00401A                     
  8690                           ;./lcd.h: 34:  Lcd_Cmd(0);
  8691   00401A  0E00               	movlw	0
  8692   00401C  ECFD  F01F         	call	_Lcd_Cmd
  8693                           
  8694                           ;./lcd.h: 35:  Lcd_Cmd(1);
  8695   004020  0E01               	movlw	1
  8696   004022  ECFD  F01F         	call	_Lcd_Cmd
  8697   004026  0012               	return		;funcret
  8698   004028                     __end_of_Lcd_Clear:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function _Lcd_Cmd *****************
  8702 ;; Defined at:
  8703 ;;		line 23 in file "./lcd.h"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  a               1    wreg     unsigned char 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  a               1    2[COMRAM] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;Total ram usage:        2 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 1
  8724 ;; This function calls:
  8725 ;;		_Lcd_Port
  8726 ;; This function is called by:
  8727 ;;		_Lcd_Clear
  8728 ;;		_Lcd_Set_Cursor
  8729 ;;		_Lcd_Init
  8730 ;;		_Lcd_Shift_Right
  8731 ;;		_Lcd_Shift_Left
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text39
  8736   003FFA                     __ptext39:
  8737                           	callstack 0
  8738   003FFA                     _Lcd_Cmd:
  8739                           	callstack 28
  8740                           
  8741                           ;incstack = 0
  8742                           ;Lcd_Cmd@a stored from wreg
  8743   003FFA  6E03               	movwf	Lcd_Cmd@a^0,c
  8744   003FFC                     
  8745                           ;./lcd.h: 23: void Lcd_Cmd(char a);./lcd.h: 24: {;./lcd.h: 25:  PORTAbits.RA0 = 0;
  8746   003FFC  90CA               	bcf	202,0,c	;volatile
  8747   003FFE                     
  8748                           ;./lcd.h: 26:  Lcd_Port(a);
  8749   003FFE  5003               	movf	Lcd_Cmd@a^0,w,c
  8750   004000  EC3B  F01E         	call	_Lcd_Port
  8751   004004                     
  8752                           ;./lcd.h: 27:  PORTAbits.RA1 = 1;
  8753   004004  82CA               	bsf	202,1,c	;volatile
  8754   004006                     
  8755                           ;./lcd.h: 28:     _delay((unsigned long)((4)*(64000000/4000.0)));
  8756   004006  0E54               	movlw	84
  8757   004008  6E02               	movwf	??_Lcd_Cmd^0,c
  8758   00400A  0E1C               	movlw	28
  8759   00400C                     u5167:
  8760   00400C  2EE8               	decfsz	wreg,f,c
  8761   00400E  D7FE               	bra	u5167
  8762   004010  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  8763   004012  D7FC               	bra	u5167
  8764   004014  D000               	nop2	
  8765   004016                     
  8766                           ;./lcd.h: 29:     PORTAbits.RA1 = 0;
  8767   004016  92CA               	bcf	202,1,c	;volatile
  8768   004018  0012               	return		;funcret
  8769   00401A                     __end_of_Lcd_Cmd:
  8770                           	callstack 0
  8771                           
  8772 ;; *************** function _Lcd_Port *****************
  8773 ;; Defined at:
  8774 ;;		line 1 in file "./lcd.h"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  a               1    wreg     unsigned char 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  a               1    0[COMRAM] unsigned char 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  1    wreg      void 
  8781 ;; Registers used:
  8782 ;;		wreg
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;Total ram usage:        1 bytes
  8793 ;; Hardware stack levels used: 1
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_Lcd_Cmd
  8798 ;;		_Lcd_Init
  8799 ;;		_Lcd_Write_Char
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text40
  8804   003C76                     __ptext40:
  8805                           	callstack 0
  8806   003C76                     _Lcd_Port:
  8807                           	callstack 28
  8808                           
  8809                           ;incstack = 0
  8810                           ;Lcd_Port@a stored from wreg
  8811   003C76  6E01               	movwf	Lcd_Port@a^0,c
  8812   003C78                     
  8813                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
  8814   003C78  A001               	btfss	Lcd_Port@a^0,0,c
  8815   003C7A  EF41  F01E         	goto	u4031
  8816   003C7E  EF43  F01E         	goto	u4030
  8817   003C82                     u4031:
  8818   003C82  EF46  F01E         	goto	l95
  8819   003C86                     u4030:
  8820   003C86                     
  8821                           ;./lcd.h: 4:   PORTAbits.RA2 = 1;
  8822   003C86  84CA               	bsf	202,2,c	;volatile
  8823   003C88  EF47  F01E         	goto	l3653
  8824   003C8C                     l95:
  8825                           
  8826                           ;./lcd.h: 6:   PORTAbits.RA2 = 0;
  8827   003C8C  94CA               	bcf	202,2,c	;volatile
  8828   003C8E                     l3653:
  8829                           
  8830                           ;./lcd.h: 8:  if(a & 2)
  8831   003C8E  A201               	btfss	Lcd_Port@a^0,1,c
  8832   003C90  EF4C  F01E         	goto	u4041
  8833   003C94  EF4E  F01E         	goto	u4040
  8834   003C98                     u4041:
  8835   003C98  EF51  F01E         	goto	l97
  8836   003C9C                     u4040:
  8837   003C9C                     
  8838                           ;./lcd.h: 9:   PORTAbits.RA3 = 1;
  8839   003C9C  86CA               	bsf	202,3,c	;volatile
  8840   003C9E  EF52  F01E         	goto	l3657
  8841   003CA2                     l97:
  8842                           
  8843                           ;./lcd.h: 11:   PORTAbits.RA3 = 0;
  8844   003CA2  96CA               	bcf	202,3,c	;volatile
  8845   003CA4                     l3657:
  8846                           
  8847                           ;./lcd.h: 13:  if(a & 4)
  8848   003CA4  A401               	btfss	Lcd_Port@a^0,2,c
  8849   003CA6  EF57  F01E         	goto	u4051
  8850   003CAA  EF59  F01E         	goto	u4050
  8851   003CAE                     u4051:
  8852   003CAE  EF5C  F01E         	goto	l99
  8853   003CB2                     u4050:
  8854   003CB2                     
  8855                           ;./lcd.h: 14:   PORTAbits.RA4 = 1;
  8856   003CB2  88CA               	bsf	202,4,c	;volatile
  8857   003CB4  EF5D  F01E         	goto	l3661
  8858   003CB8                     l99:
  8859                           
  8860                           ;./lcd.h: 16:   PORTAbits.RA4 = 0;
  8861   003CB8  98CA               	bcf	202,4,c	;volatile
  8862   003CBA                     l3661:
  8863                           
  8864                           ;./lcd.h: 18:  if(a & 8)
  8865   003CBA  A601               	btfss	Lcd_Port@a^0,3,c
  8866   003CBC  EF62  F01E         	goto	u4061
  8867   003CC0  EF64  F01E         	goto	u4060
  8868   003CC4                     u4061:
  8869   003CC4  EF67  F01E         	goto	l101
  8870   003CC8                     u4060:
  8871   003CC8                     
  8872                           ;./lcd.h: 19:   PORTAbits.RA5 = 1;
  8873   003CC8  8ACA               	bsf	202,5,c	;volatile
  8874   003CCA  EF68  F01E         	goto	l103
  8875   003CCE                     l101:
  8876                           
  8877                           ;./lcd.h: 21:   PORTAbits.RA5 = 0;
  8878   003CCE  9ACA               	bcf	202,5,c	;volatile
  8879   003CD0                     l103:
  8880   003CD0  0012               	return		;funcret
  8881   003CD2                     __end_of_Lcd_Port:
  8882                           	callstack 0
  8883                           
  8884                           	psect	rparam
  8885   000000                     
  8886                           	psect	config
  8887                           
  8888                           ;Config register CONFIG1L @ 0x300000
  8889                           ;	External Oscillator Selection
  8890                           ;	FEXTOSC = OFF, Oscillator not enabled
  8891                           ;	Reset Oscillator Selection
  8892                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  8893   300000                     	org	3145728
  8894   300000  8C                 	db	140
  8895                           
  8896                           ;Config register CONFIG1H @ 0x300001
  8897                           ;	Clock out Enable bit
  8898                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8899                           ;	PRLOCKED One-Way Set Enable bit
  8900                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  8901                           ;	Clock Switch Enable bit
  8902                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8903                           ;	Fail-Safe Clock Monitor Enable bit
  8904                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8905   300001                     	org	3145729
  8906   300001  FD                 	db	253
  8907                           
  8908                           ;Config register CONFIG2L @ 0x300002
  8909                           ;	MCLR Enable bit
  8910                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8911                           ;	Power-up timer selection bits
  8912                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8913                           ;	Multi-vector enable bit
  8914                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  8915                           ;	IVTLOCK bit One-way set enable bit
  8916                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  8917                           ;	Low Power BOR Enable bit
  8918                           ;	LPBOREN = OFF, ULPBOR disabled
  8919                           ;	Brown-out Reset Enable bits
  8920                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8921   300002                     	org	3145730
  8922   300002  E7                 	db	231
  8923                           
  8924                           ;Config register CONFIG2H @ 0x300003
  8925                           ;	Brown-out Reset Voltage Selection bits
  8926                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8927                           ;	ZCD Disable bit
  8928                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8929                           ;	PPSLOCK bit One-Way Set Enable bit
  8930                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  8931                           ;	Stack Full/Underflow Reset Enable bit
  8932                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8933                           ;	Debugger Enable bit
  8934                           ;	DEBUG = OFF, Background debugger disabled
  8935                           ;	Extended Instruction Set Enable bit
  8936                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8937   300003                     	org	3145731
  8938   300003  F7                 	db	247
  8939                           
  8940                           ;Config register CONFIG3L @ 0x300004
  8941                           ;	WDT Period selection bits
  8942                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8943                           ;	WDT operating mode
  8944                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8945   300004                     	org	3145732
  8946   300004  9F                 	db	159
  8947                           
  8948                           ;Config register CONFIG3H @ 0x300005
  8949                           ;	WDT Window Select bits
  8950                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8951                           ;	WDT input clock selector
  8952                           ;	WDTCCS = SC, Software Control
  8953   300005                     	org	3145733
  8954   300005  FF                 	db	255
  8955                           
  8956                           ;Config register CONFIG4L @ 0x300006
  8957                           ;	Boot Block Size selection bits
  8958                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8959                           ;	Boot Block enable bit
  8960                           ;	BBEN = OFF, Boot block disabled
  8961                           ;	Storage Area Flash enable bit
  8962                           ;	SAFEN = OFF, SAF disabled
  8963                           ;	Application Block write protection bit
  8964                           ;	WRTAPP = OFF, Application Block not write protected
  8965   300006                     	org	3145734
  8966   300006  FF                 	db	255
  8967                           
  8968                           ;Config register CONFIG4H @ 0x300007
  8969                           ;	Boot Block Write Protection bit
  8970                           ;	WRTB = OFF, Boot Block not write-protected
  8971                           ;	Configuration Register Write Protection bit
  8972                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  8973                           ;	Data EEPROM Write Protection bit
  8974                           ;	WRTD = OFF, Data EEPROM not write-protected
  8975                           ;	SAF Write protection bit
  8976                           ;	WRTSAF = OFF, SAF not Write Protected
  8977                           ;	Low Voltage Programming Enable bit
  8978                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  8979   300007                     	org	3145735
  8980   300007  DF                 	db	223
  8981                           
  8982                           ;Config register CONFIG5L @ 0x300008
  8983                           ;	PFM and Data EEPROM Code Protection bit
  8984                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8985   300008                     	org	3145736
  8986   300008  FF                 	db	255
  8987                           
  8988                           ;Config register CONFIG5H @ 0x300009
  8989                           ;	unspecified, using default values
  8990   300009                     	org	3145737
  8991   300009  FF                 	db	255
  8992                           tosu	equ	0x3FFF
  8993                           tosh	equ	0x3FFE
  8994                           tosl	equ	0x3FFD
  8995                           stkptr	equ	0x3FFC
  8996                           pclatu	equ	0x3FFB
  8997                           pclath	equ	0x3FFA
  8998                           pcl	equ	0x3FF9
  8999                           tblptru	equ	0x3FF8
  9000                           tblptrh	equ	0x3FF7
  9001                           tblptrl	equ	0x3FF6
  9002                           tablat	equ	0x3FF5
  9003                           prodh	equ	0x3FF4
  9004                           prodl	equ	0x3FF3
  9005                           indf0	equ	0x3FEF
  9006                           postinc0	equ	0x3FEE
  9007                           postdec0	equ	0x3FED
  9008                           preinc0	equ	0x3FEC
  9009                           plusw0	equ	0x3FEB
  9010                           fsr0h	equ	0x3FEA
  9011                           fsr0l	equ	0x3FE9
  9012                           wreg	equ	0x3FE8
  9013                           indf1	equ	0x3FE7
  9014                           postinc1	equ	0x3FE6
  9015                           postdec1	equ	0x3FE5
  9016                           preinc1	equ	0x3FE4
  9017                           plusw1	equ	0x3FE3
  9018                           fsr1h	equ	0x3FE2
  9019                           fsr1l	equ	0x3FE1
  9020                           bsr	equ	0x3FE0
  9021                           indf2	equ	0x3FDF
  9022                           postinc2	equ	0x3FDE
  9023                           postdec2	equ	0x3FDD
  9024                           preinc2	equ	0x3FDC
  9025                           plusw2	equ	0x3FDB
  9026                           fsr2h	equ	0x3FDA
  9027                           fsr2l	equ	0x3FD9
  9028                           status	equ	0x3FD8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     87      95
    BANK0           160    136     141
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 64
		 -> main@ligne1(BANK0[64]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S944$buffer	PTR unsigned char  size(2) Largest target is 0

    S944$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> main@ligne1(BANK0[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[10]), STR_2(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _writeData16->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->_loadData16
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _loadData16->___fldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0   41974
                                             85 COMRAM     2     2      0
                                             56 BANK0     80    80      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fltol
                           ___xxtofl
                          _deleteAll
                         _loadData16
                            _sprintf
                        _writeData16
 ---------------------------------------------------------------------------------
 (1) _writeData16                                         14     8      6    3967
                                             55 COMRAM    14     8      6
                            ___flmul
                            ___fltol
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _writeData                                            7     3      4     392
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   29597
                                             72 COMRAM    13    13      0
                                             50 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   28913
                                             71 COMRAM     1     1      0
                                             47 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   28416
                                             63 COMRAM     8     8      0
                                             44 BANK0      3     0      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   21083
                                             55 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     609
                                             45 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                         _loadData16 (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     9      3    4750
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2959
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _loadData16                                          20    16      4    3189
                                             25 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
                           _loadData
 ---------------------------------------------------------------------------------
 (2) _loadData                                             9     7      2     245
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _deleteAll                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     420
                                              4 COMRAM     3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     532
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
     _loadData16 (ARG)
       ___fldiv
       ___xxtofl
       _loadData
   ___xxtofl
   _deleteAll
   _loadData16
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
   _writeData16
     ___flmul
     ___fltol
     _writeData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     309      0       0      52        0.0%
BITBIGSFRllhhhh    228      0       0      43        0.0%
BITBIGSFRllhhhh    1CA      0       0      38        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      8D       5       88.1%
BITBIGSFRllhhhh     8C      0       0      39        0.0%
BITBIGSFRllhhhl     80      0       0      45        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     57      5F       1      100.0%
BITBIGSFRllhhhh     40      0       0      41        0.0%
BITBIGSFRh          33      0       0      36        0.0%
BITBIGSFRlllh       29      0       0      49        0.0%
BITBIGSFRllhl        F      0       0      48        0.0%
BITBIGSFRllhhlh      D      0       0      46        0.0%
BITBIGSFRllllhl      8      0       0      51        0.0%
BITBIGSFRllhhhh      7      0       0      40        0.0%
BITBIGSFRlh          5      0       0      37        0.0%
BITBIGSFRllhhhl      3      0       0      44        0.0%
BITBIGSFRllhhhh      2      0       0      42        0.0%
BITBIGSFRllllhh      1      0       0      50        0.0%
BITBIGSFRllhhll      1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C      53        0.0%
DATA                 0      0     13C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 15:59:58 2023

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                ___fldiv@sign 0011  
                        l95 3C8C                          l97 3CA2                          l99 3CB8  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l101 3CCE  
                       l103 3CD0                         l121 3F6C                         l106 4018  
                       l115 3C74                         l109 4026                         l141 2786  
                       l118 3B42                         l127 3F34                         l151 363C  
                       l143 2794                         l160 36C6                         l154 366C  
                       l138 2774                         l171 34CA                         l163 3AC6  
                       l172 34D2                         l181 3BC2                         l157 3680  
                       l174 34E0                         l166 34A6                         l183 3BD0  
                       l175 3544                         l431 3776                         l184 3C0E  
                       l168 34B4                         l169 34BC                         l178 397C  
                       l418 3608                         l187 3FF8                         l452 332C  
                       l461 3EFC                         l446 3A26                         l457 3372  
                       l801 1F90                         l810 2222                         l811 2210  
                       l715 1BFA                         l732 1D14                         l724 1ECA  
                       l716 1BE8                         l484 326E                         l805 2318  
                       l741 1DE4                         l717 1BAE                         l902 301E  
                       l742 1DD2                         l904 3026                         l808 21AA  
                       l905 306C                         l842 2E92                         l818 22DA  
                       l930 13A6                         l771 2512                         l780 2558  
                       l916 3168                         l932 11EC                         l845 2FEE  
                       l757 3DC6                         l782 25D0                         l774 24D6  
                       l783 25BE                         l927 1A0A                         l856 2F86  
                       l960 17F0                         l769 26B2                         l849 2F2A  
                       l865 3EC4                         l972 381C                         l894 3B5A  
                       l976 3824                         l984 2C28                         l898 3BA8  
                       _abs 3F6E                         _pad 3B44                ___awmod@sign 0006  
                       wreg 3FE8                ___flmul@aexp 0012                ___flmul@bexp 0013  
              ___flmul@sign 000D                ___flmul@temp 0018                ___flmul@prod 0014  
              ___fltol@exp1 0037                        l1021 3F88                        l1030 2E3A  
                      l1006 3E0A                        l1024 3FA0                        l1016 3470  
                      l1033 2D7E                        l1050 3D2A                        ?_abs 0007  
                      l1044 3D80                        l1062 38D0                        l1070 3E8C  
                      l1073 4028                        l3001 1F6A                        l3003 1F7A  
                      l3021 2004                        l3013 1FC4                        l3005 1F80  
                      l3111 354A                        l3031 2056                        l3023 2020  
                      l3015 1FD4                        l3007 1FA0                        l3103 3D82  
                      l1079 3E4C                        l3121 357A                        l3113 3558  
                      l3201 3A24                        l3041 20B4                        l3033 2066  
                      l3025 202C                        l3017 1FDE                        l3009 1FB0  
                      l3105 3D92                        l3131 35A8                        l3123 357E  
                      l3115 3560                        l3211 32DC                        l3051 2164  
                      l3043 20D4                        l3035 2076                        l3027 2038  
                      l3019 1FF8                        l3141 35DC                        l3133 35B6  
                      l3125 3586                        l3117 3564                        l3109 3546  
                      l3221 336A                        l3213 32EC                        l3205 3270  
                      l3061 21BA                        l3053 2172                        l3045 20E4  
                      l3037 2086                        l3029 2046                        l3301 33FA  
                      l3143 35E2                        l3135 35BC                        l3127 3598  
                      l3119 3572                        l3223 3370                        l3215 32FA  
                      l3207 329E                        l3063 21C8                        l3055 2190  
                      l3047 2104                        l3039 20A4                        l3231 3EEC  
                      l3303 3406                        l3137 35D2                        l3129 35A0  
                      l3145 35E8                        l3161 36E6                        l3153 36C8  
                      l3217 330C                        l3209 32AE                        l3073 2232  
                      l3081 227A                        l3065 21CC                        l3057 219A  
                      l3049 212E                        l3241 3194                        l3313 3468  
                      l3321 3D2C                        l4201 3D10                        l3147 35F8  
                      l3139 35DA                        l3171 371E                        l3163 36F4  
                      l3155 36CC                        l2611 3850                        l4211 3044  
                      l4203 2FF0                        l3219 331A                        l3091 22EE  
                      l3083 2294                        l3075 223E                        l3067 21DA  
                      l3059 21A8                        l3227 3EC6                        l3251 31E2  
                      l3243 31BE                        l3235 316A                        l3307 3412  
                      l3331 2C4A                        l3323 3D3A                        l3149 3600  
                      l3173 372C                        l3181 3756                        l3165 36FC  
                      l3157 36DA                        l2613 386C                        l2605 3826  
                      l4221 307E                        l4213 3054                        l4205 3012  
                      l3093 22FC                        l3085 22A8                        l3077 224C  
                      l3069 2208                        l3229 3EDC                        l2701 1B7A  
                      l2621 1A18                        l3261 320E                        l3245 31C0  
                      l3237 3180                        l3309 3424                        l3341 2D32  
                      l3333 2CA0                        l3325 3D4E                        l3183 3766  
                      l3175 3742                        l3167 370E                        l3159 36E2  
                      l2615 389E                        l2607 3836                        l4223 3084  
                      l4231 30DE                        l4215 3060                        l4207 302E  
                      l3191 39AC                        l3095 22FE                        l3087 22C2  
                      l3079 2276                        l2711 1BCC                        l2703 1B96  
                      l2631 1A58                        l2623 1A26                        l3271 323E  
                      l3247 31D0                        l3351 2E1A                        l3343 2D6E  
                      l3335 2CB4                        l3185 376E                        l3177 374A  
                      l3169 3716                        l2609 3846                        l4241 313A  
                      l4233 30F8                        l4225 30B6                        l4217 3068  
                      l4209 303E                        l3193 39BC                        l3089 22DE  
                      l3097 2304                        l2801 1E6A                        l2721 1C18  
                      l2713 1BDA                        l2705 1BA6                        l2641 1A8A  
                      l2633 1A5A                        l2625 1A28                        l3273 324E  
                      l3257 31FA                        l3249 31D4                        l3353 2E2A  
                      l3337 2CC2                        l3345 2DA2                        l3329 2C2A  
                      l4401 173A                        l4321 12A6                        l4313 11FC  
                      l3179 3750                        l3291 3F6E                        l4171 3E68  
                      l4243 314C                        l4235 310A                        l4227 30BC  
                      l4219 3074                        l3195 39EA                        l3099 2308  
                      l2811 1EA4                        l2803 1E8A                        l2731 1C58  
                      l2715 1BDC                        l2707 1BBC                        l2651 1AB2  
                      l2643 1A8C                        l2627 1A38                        l2635 1A62  
                      l2619 1A0C                        l3275 325E                        l3267 3222  
                      l3259 3204                        l3347 2DDE                        l4411 1802  
                      l4403 1742                        l4323 12E4                        l4315 1202  
                      l4307 119C                        l4251 1036                        l2901 249A  
                      l3293 3F7C                        l4173 3E6C                        l4181 3B76  
                      l4237 3124                        l4229 30C2                        l3197 39FA  
                      l3189 397E                        l2813 1EAA                        l2805 1E8E  
                      l2741 1C82                        l2733 1C64                        l2725 1C2C  
                      l2717 1BE6                        l2709 1BC8                        l2661 1AEC  
                      l2653 1AC2                        l2645 1A92                        l2637 1A72  
                      l2629 1A48                        l3269 322E                        l3349 2DF2  
                      l4421 1832                        l4413 1810                        l4405 174E  
                      l4341 13D2                        l4325 12F8                        l4333 1374  
                      l4317 1236                        l4309 11B6                        l4261 107E  
                      l4253 1044                        l4501 2A94                        l2911 24E0  
                      l2903 24A2                        l4167 3E4E                        l4183 3B7A  
                      l4175 3B44                        l4239 3134                        l3199 3A1E  
                      l2815 1EB8                        l2807 1E9C                        l2751 1CF4  
                      l2735 1C68                        l2727 1C3C                        l2719 1C08  
                      l2743 1C88                        l2671 1B18                        l2663 1AFE  
                      l2655 1AD2                        l2647 1AA0                        l2639 1A78  
                      l3295 3374                        l4191 3CD2                        l4431 1864  
                      l4423 1842                        l4415 1820                        l4407 17C6  
                      l4351 1418                        l4343 13DA                        l4335 13AE  
                      l4327 132C                        l4319 1274                        l4263 108E  
                      l4271 10B6                        l4255 1048                        l4247 1020  
                      l2831 3FF0                        l4503 2A9A                        l4511 2ADC  
                      l2921 2538                        l2913 24FE                        l2905 24B2  
                      l2841 2336                        l4169 3E5A                        l4185 3B98  
                      l4177 3B52                        l2817 1EBA                        l2809 1EA2  
                      l2761 1D4E                        l2745 1CAE                        l2753 1D04  
                      l2737 1C76                        l2729 1C4A                        l2681 1B2C  
                      l2673 1B1C                        l2665 1B0C                        l2657 1AD4  
                      l2649 1AA2                        l3297 3394                        l4193 3CE6  
                      l4441 190C                        l4433 1876                        l4425 1846  
                      l4417 1824                        l4409 17E6                        l4361 145E  
                      l4353 142A                        l4345 13E0                        l4337 13BC  
                      l4329 1334                        l4281 1100                        l4273 10DC  
                      l4265 109E                        l4257 106C                        l4249 1026  
                      l3641 37AC                        l4521 2B8C                        l4513 2AFE  
                      l4505 2AA2                        l3801 36B0                        l4601 276A  
                      l3651 3C86                        l2931 2576                        l2923 253E  
                      l2915 2500                        l2907 24C6                        l2843 2346  
                      l2851 2370                        l2835 231A                        l3811 3472  
                      l4179 3B66                        l2771 1D7E                        l2763 1D58  
                      l2755 1D2A                        l2747 1CE2                        l2739 1C78  
                      l2691 1B40                        l2683 1B30                        l2675 1B20  
                      l2667 1B10                        l2659 1ADC                        l3299 33D2  
                      l4195 3CF6                        l4187 3E0C                        l4451 195A  
                      l4443 1914                        l4435 187A                        l4427 184C  
                      l4419 182A                        l4371 1572                        l4363 14C2  
                      l4347 13F2                        l4355 1432                        l4339 13C8  
                      l4291 1160                        l4283 1114                        l4275 10EE  
                      l4267 10AA                        l4259 1076                        l3643 37CC  
                      l3635 3778                        l4523 2B9A                        l4515 2B30  
                      l4531 2BF6                        l3803 36B4                        l4611 27AC  
                      l4603 276E                        l3661 3CBA                        l3653 3C8E  
                      l3901 3C34                        l2941 25E0                        l2933 257A  
                      l2925 2548                        l2917 2510                        l2909 24D4  
                      l2861 239C                        l2853 2380                        l2845 2356  
                      l2837 2326                        l3821 34B6                        l3813 3482  
                      l2781 1DA6                        l2773 1D82                        l2765 1D66  
                      l2757 1D3A                        l2749 1CE4                        l2693 1B44  
                      l2685 1B34                        l2677 1B24                        l2669 1B14  
                      l4197 3CFA                        l4189 3E14                        l4461 19CE  
                      l4453 1968                        l4437 1880                        l4429 1852  
                      l4445 1918                        l4381 1630                        l4373 15A6  
                      l4365 151A                        l4357 143A                        l4349 1400  
                      l4293 1172                        l4285 111E                        l4277 10F2  
                      l4269 10B2                        l2829 3FD0                        l3645 37EC  
                      l3637 3780                        l4509 2AAA                        l3805 36B6  
                      l4621 2826                        l4613 27C4                        l4605 2770  
                      ?_pad 000F                        l3663 3CC8                        l3655 3C9C  
                      l3911 3C6E                        l3903 3C3A                        l2951 2642  
                      l2943 25EC                        l2935 2588                        l2927 2556  
                      l2919 2522                        l2863 23AC                        l2871 23D6  
                      l2855 2386                        l2847 2366                        l2839 2334  
                      l3831 3510                        l3823 34E6                        l3815 3484  
                      l2791 1E00                        l2783 1DB4                        l2775 1D92  
                      l2767 1D68                        l2695 1B48                        l2687 1B38  
                      l2679 1B28                        l4199 3D0C                        l4463 19E6  
                      l4455 1998                        l4447 1936                        l4439 18D8  
                      l4391 1704                        l4383 1640                        l4375 15D8  
                      l4367 154E                        l4359 144A                        l4295 1176  
                      l4279 10F8                        l3639 37A4                        l3647 37F4  
                      l4519 2B62                        l4471 299A                        l4535 2C04  
                      l3807 36B8                        l4631 2886                        l4623 283E  
                      l4615 27C8                        l4607 2782                        l3657 3CA4  
                      l3649 3C78                        l3761 4006                        l3921 3AFC  
                      l3913 3AC8                        l3905 3C44                        l2961 26A0  
                      l2953 2658                        l2945 25FA                        l2937 25B6  
                      l2929 2568                        l2881 2418                        l2873 23E6  
                      l2865 23BC                        l2857 238C                        l2849 2368  
                      l3841 2E4E                        l3833 3512                        l3825 3508  
                      l3817 3486                        l3809 3472                        l2793 1E0E  
                      l2785 1DCA                        l2769 1D76                        l2777 1D94  
                      l2689 1B3C                        l2697 1B4C                        l4465 19EE  
                      l4457 19A6                        l4449 1952                        l4393 1718  
                      l4385 1674                        l4377 15EE                        l4369 1554  
                      l4297 117C                        l4289 113A                        l4529 2BC8  
                      l4481 29DE                        l4473 29A2                        l4561 3DD0  
                      l4641 28F6                        l4633 288E                        l4625 285A  
                      l4617 27D6                        l4609 279A                        l3659 3CB2  
                      l3763 4016                        l3755 3FFC                        l3931 3B24  
                      l3923 3B02                        l3915 3ACE                        l3907 3C56  
                      l3771 3F4E                        l2963 26A6                        l2955 2672  
                      l2947 2624                        l2875 23FC                        l2867 23CC  
                      l2859 239A                        l3851 2ECC                        l3843 2E5C  
                      l3835 352A                        l3827 350C                        l3819 3488  
                      l2795 1E48                        l2779 1DA2                        l2699 1B50  
                      l4459 19BE                        l4387 16CA                        l4395 171C  
                      l4379 1620                        l4299 1184                        l4491 2A56  
                      l4483 29F2                        l4475 29AE                        l4563 3DE2  
                      l4571 3E96                        l4651 2950                        l4643 291C  
                      l4635 28A6                        l4627 285E                        l4619 280A  
                      l3757 3FFE                        l3933 3B2A                        l3925 3B12  
                      l3917 3AE6                        l3909 3C68                        l3781 3F62  
                      l3773 3F50                        l3765 3F38                        l3941 3EFE  
                      l2965 26A8                        l2957 268E                        l2949 2628  
                      l2893 2450                        l2877 240C                        l2885 242C  
                      l2869 23CE                        l3861 2F20                        l3853 2ED4  
                      l3845 2EA2                        l3829 350E                        l2981 1EF8  
                      l2973 1ECC                        l2789 1DF4                        l2797 1E4A  
                      l4397 172C                        l4389 16D0                        l4493 2A60  
                      l4485 29FE                        l4477 29B2                        l4469 2974  
                      l4565 3E00                        l4573 3E9E                        l4653 2968  
                      l4645 2920                        l4637 28AA                        l4629 287C  
                      l4581 26B4                        l3759 4004                        l3935 3B30  
                      l3927 3B18                        l3919 3AEC                        l3783 3F6A  
                      l3775 3F58                        l3767 3F44                        l3943 3F0A  
                      l2959 2692                        l2895 246A                        l2887 243C  
                      l2879 2414                        l3871 2F96                        l3863 2F5C  
                      l3855 2EE0                        l3847 2EB8                        l3839 2E3E  
                      l2991 1F34                        l2983 1F08                        l2975 1ED8  
                      l2799 1E5A                        l4399 1734                        l4487 2A1C  
                      l4479 29D6                        l4559 3DC8                        l4575 3EA6  
                      l3791 361C                        l3951 3A68                        l4647 293E  
                      l4639 28C2                        l4591 2744                        l4583 26DA  
                      l3937 3B36                        l3929 3B1E                        l3777 3F5A  
                      l3769 3F46                        l3945 3F18                        l2897 247A  
                      l2889 243C                        l3881 2FDE                        l3873 2F9A  
                      l3865 2F68                        l3857 2F12                        l2993 1F3A  
                      l2985 1F18                        l2977 1EE6                        l4745 2ABE  
                      l4497 2A74                        l4489 2A3A                        l4577 3EB8  
                      l4569 3E8E                        l3793 361E                        l3785 360A  
                      l3961 3AB8                        l3953 3A6E                        l4649 2948  
                      l4593 275C                        l4585 273A                        l3939 3B3C  
                      l3779 3F60                        l3947 3F1C                        l2899 248A  
                      l3875 2FBE                        l3867 2F76                        l3859 2F14  
                      l3971 396C                        l3963 38D2                        l2995 1F48  
                      l2987 1F1E                        l2979 1EE8                        l4747 2B76  
                      l4499 2A7E                        l3795 364A                        l3787 360C  
                      l3955 3A92                        l4595 2760                        l4587 273E  
                      l3877 2FCE                        l3869 2F94                        l3965 38FE  
                      l2997 1F4A                        l2989 1F2E                        l4749 2BE8  
                      l3797 367A                        l3789 361A                        l3957 3A96  
                      l3949 3A28                        l4597 2762                        l4589 2742  
                      l3895 401A                        l3991 3BBA                        l3879 2FDC  
                      l3967 3910                        l2999 1F5A                        l3799 368E  
                      l3959 3AA4                        l4599 2766                        l3897 3C12  
                      l3993 3BBC                        l3969 3938                        l3899 3C22  
                      l3995 3BD6                        l3987 3BAA                        l3997 3BF6  
                      l3989 3BAC                        STR_1 100C                        STR_2 1001  
                      STR_3 1016                        STR_6 101A                        u3000 21C8  
                      u3001 21C4                        u3010 21DA                        u3011 21D6  
                      u3100 3572                        u3020 2208                        u2300 1A8A  
                      u3101 356E                        u3021 2204                        u2301 1A86  
                      u3110 3598                        u2230 3836                        u3030 221E  
                      u2310 1AA0                        u3111 3594                        u2231 3832  
                      u3031 221A                        u2311 1A9C                        u3120 35B6  
                      u3200 3766                        u2240 3846                        u3040 2232  
                      u2400 1BDA                        u2320 1AB2                        u3121 35B2  
                      u3201 3762                        u2241 3842                        u3041 222E  
                      u2401 1BD6                        u2321 1AAE                        u3130 35D2  
                      u2250 386C                        u3210 39AC                        u3050 224C  
                      u2410 1BFA                        u2330 1AC2                        u4010 37A4  
                      u3131 35CE                        u2251 3868                        u3211 39A8  
                      u3051 2248                        u2411 1BF6                        u2331 1ABE  
                      u4011 37A0                        u3140 35F8                        u2260 389E  
                      u3220 39EA                        u3060 2294                        u2500 1D3A  
                      u2420 1C08                        u2340 1AFE                        u3300 3180  
                      u4020 381C                        u3141 35F4                        u2261 389A  
                      u3221 39E6                        u3061 2290                        u2501 1D36  
                      u2421 1C04                        u2341 1AFA                        u3301 317C  
                      u4021 3818                        u4030 3C86                        u3150 36DA  
                      u3230 3A1E                        u3070 22C2                        u2510 1D66  
                      u2430 1C18                        u2350 1B0C                        u2270 1A26  
                      u3310 31B4                        u4031 3C82                        u3151 36D6  
                      u3231 3A1A                        u3071 22BE                        u2511 1D62  
                      u2431 1C14                        u2351 1B08                        u2271 1A22  
                      u4040 3C9C                        u4200 34B4                        u3160 36F4  
                      u3240 329E                        u3080 22FC                        u2600 1E48  
                      u2520 1D76                        u2440 1C4A                        u2360 1B7A  
                      u2280 1A38                        u3320 31E2                        u3400 33B4  
                      u4041 3C98                        u4201 34B0                        u3161 36F0  
                      u3241 329A                        u3081 22F8                        u2601 1E44  
                      u2521 1D72                        u2441 1C46                        u2361 1B76  
                      u2281 1A34                        u3321 31DE                        u4050 3CB2  
                      u4210 34CA                        u3090 3558                        u3170 370E  
                      u3250 32DC                        u2610 1E5A                        u2530 1D92  
                      u2450 1C58                        u2370 1B92                        u2290 1A48  
                      u3330 31F6                        u3410 33D2                        u4130 364A  
                      u4051 3CAE                        u4211 34C6                        u3091 3554  
                      u3171 370A                        u3251 32D8                        u2611 1E56  
                      u2531 1D8E                        u2451 1C54                        u2371 1B8C  
                      u2291 1A44                        u3331 31F2                        u3315 31AA  
                      u3411 33CE                        u4131 3646                        u4060 3CC8  
                      u2700 239A                        u4300 2F76                        u4220 34E0  
                      u3180 372C                        u3260 32FA                        u2620 1E6A  
                      u2540 1DA2                        u2460 1C76                        u2380 1B94  
                      u3340 321E                        u3420 33FA                        u3500 2CA0  
                      u4061 3CC4                        u2701 2396                        u4301 2F72  
                      u4221 34DC                        u3181 3728                        u3261 32F6  
                      u2621 1E66                        u2541 1D9E                        u2461 1C72  
                      u3341 321A                        u3421 33F6                        u3405 33AA  
                      u3501 2C9C                        u4125 362A                        u2710 23AC  
                      u4310 2F86                        u4230 34F8                        u3190 3742  
                      u3270 331A                        u2630 1E8A                        u2550 1DB4  
                      u2470 1CAE                        u2390 1BBC                        u3350 323E  
                      u3430 3424                        u3510 2CC2                        u4150 367A  
                      u2711 23A8                        u4311 2F82                        u4231 34F0  
                      u3191 373E                        u3271 3316                        u2631 1E86  
                      u2551 1DB0                        u2471 1CAA                        u2391 1BB8  
                      u3351 323A                        u3431 3420                        u3511 2CBE  
                      u4151 3676                        u5007 274E                        u4400 3BE8  
                      u2800 2556                        u2720 23BC                        u4320 2F94  
                      u3280 336A                        u2640 1E9C                        u2560 1DCA  
                      u2480 1CF4                        u3360 324E                        u4160 368E  
                      u4401 3BE0                        u2801 2552                        u2721 23B8  
                      u4321 2F90                        u3281 3366                        u2641 1E98  
                      u2561 1DC6                        u2481 1CF0                        u3361 324A  
                      u4161 368A                        u4145 3656                        u5017 27B6  
                      u2810 2576                        u2730 23FC                        u4330 2FCE  
                      u4250 2E4E                        u3290 3EDC                        u2650 1EB8  
                      u2570 1DE0                        u2490 1D2A                        u3450 345E  
                      u3530 2D2E                        u4170 36A0                        u5107 3C00  
                      u2811 2572                        u2731 23F8                        u4331 2FCA  
                      u4251 2E4A                        u3291 3ED8                        u2651 1EB4  
                      u2571 1DDC                        u2491 1D26                        u3451 3458  
                      u3531 2D2A                        u4171 3698                        u5027 2830  
                      u2820 2588                        u2740 243C                        u4340 2FDC  
                      u4260 2E5C                        u4500 3000                        u2900 1EE6  
                      u2580 1DF4                        u3460 3460                        u3540 2D52  
                      u5117 3F52                        u2821 2584                        u2741 2438  
                      u4341 2FD8                        u4261 2E58                        u4501 2FFA  
                      u2901 1EE2                        u2581 1DF0                        u3445 3436  
                      u3525 2CD6                        u5037 2898                        u2830 25B6  
                      u2750 24B2                        u2670 2334                        u4270 2EB8  
                      u3390 3F7C                        u4510 3002                        u2910 1EF8  
                      u2590 1E0E                        u3550 2D6E                        u3526 2CE0  
                      u5127 3F64                        u2831 25B2                        u2751 24AE  
                      u2671 2330                        u4271 2EB4                        u3391 3F78  
                      u2911 1EF4                        u2591 1E0A                        u3551 2D6A  
                      u3527 2CF0                        u5047 28B4                        u4360 3C22  
                      u2840 25CC                        u2760 24D4                        u2680 2346  
                      u4280 2F0E                        u4248 34FA                        u4520 3012  
                      u2920 1F08                        u3560 2DC2                        u3480 3D3A  
                      u4600 108E                        u5137 3AD8                        u4361 3C1E  
                      u2841 25C8                        u2761 24D0                        u2681 2342  
                      u4281 2F0A                        u4521 300E                        u2921 1F04  
                      u3545 2D48                        u3481 3D36                        u4601 108A  
                      u5057 295A                        u4370 3C56                        u4418 3BEA  
                      u2850 25E0                        u2770 24FE                        u2690 2356  
                      u4290 2F58                        u4450 3E8C                        u4530 303E  
                      u2930 1F48                        u3570 2DDE                        u3490 2C72  
                      u4610 109E                        u5147 3AF2                        u4371 3C52  
                      u2851 25DC                        u2771 24FA                        u2691 2352  
                      u4291 2F54                        u4195 3494                        u4451 3E88  
                      u4531 303A                        u2931 1F44                        u3571 2DDA  
                      u4611 109A                        u5067 3A9C                        u4380 3F34  
                      u2860 25FA                        u2780 2522                        u4460 3B52  
                      u4540 3054                        u2940 1F5A                        u3580 2E1A  
                      u4700 1370                        u4620 10DC                        u4188 36A2  
                      u5157 3B08                        u4381 3F30                        u2861 25F6  
                      u2781 251E                        u4461 3B4E                        u4541 3050  
                      u2941 1F56                        u3581 2E16                        u3565 2DB8  
                      u4701 136C                        u4621 10D8                        u5077 3ABE  
                      u4390 3BD0                        u2870 2642                        u2790 2538  
                      u4470 3B98                        u4550 30F8                        u2950 1F6A  
                      u4710 13A6                        u4630 10EE                        u5167 400C  
                      u4391 3BCC                        u2871 263E                        u2791 2534  
                      u4471 3B94                        u4551 30F4                        u2951 1F66  
                      u3495 2C68                        u4711 13A2                        u4631 10EA  
                      u5087 36BE                        u2880 2672                        u4560 310A  
                      u2960 1FA0                        u4480 3E4C                        u4800 16CA  
                      u4720 13BC                        u4640 1160                        u2881 266E  
                      u5097 351C                        u4561 3106                        u2961 1F9C  
                      u4481 3E48                        u4801 16C6                        u4721 13B8  
                      u4641 115C                        u2890 26A0                        u4570 3124  
                      u2970 1FB0                        u4490 3D2A                        u4810 1718  
                      u4730 13F2                        u4650 1172                        u2891 269C  
                      u4571 3120                        u2971 1FAC                        u4491 3D26  
                      u4811 1714                        u4731 13EE                        u4651 116E  
                      u4580 3134                        u2980 214E                        u4900 19CE  
                      u4820 17C6                        u4740 1400                        u4660 11E8  
                      u4581 3130                        u4901 19CA                        u4821 17C2  
                      u4741 13FC                        u4661 11E4                        u2990 21A8  
                      u4830 1802                        u4750 142A                        u4670 1274  
                      u4590 1044                        u4910 299A                        u2991 21A4  
                      u4831 17FE                        u4751 1426                        u4671 1270  
                      u4591 1040                        u4911 2996                        u4840 1810  
                      u4760 1572                        u4680 12A6                        u4920 29D6  
                      u2985 2144                        u4841 180C                        u4761 156E  
                      u4681 12A2                        u4921 29D2                        u4850 1864  
                      u4770 15D8                        u4690 12E4                        u4930 2A1C  
                      u4851 1860                        u4771 15D4                        u4691 12E0  
                      u4931 2A18                        u4860 1936                        u4780 1620  
                      u4940 2A3A                        u4861 1932                        u4781 161C  
                      u4941 2A36                        u4870 1952                        u4790 1630  
                      u4950 2AFA                        u4871 194E                        u4791 162C  
                      u4951 2AF6                        u4880 19B8                        u4960 3E00  
                      u4881 19B2                        u4961 3DFC                        u4890 19BA  
                      u4970 2782                        u4971 277E                        u4980 2794  
                      u4981 2790                        u4990 27D6                        u4991 27D2  
                      abs@a 0007           ?_Lcd_Write_String 0005                        _dbuf 0100  
                      _labs 3D2C                        _main 26B4                        _dtoa 2FF0  
                      _prec 005E                        pad@i 0015                        pad@p 0012  
                      fsr1h 3FE2                        fsr2h 3FDA                        indf2 3FDF  
                      fsr1l 3FE1                        fsr2l 3FD9               ___fpclassifyf 3374  
                      prodh 3FF4                        prodl 3FF3                        start FFFC  
        ??_Lcd_Write_String 0006             ___fldiv@new_exp 0012             __end_of_Lcd_Cmd 401A  
            _SPI1STATUSbits 3D17                ___param_bank 0000                       ??_abs 0009  
                     ??_pad 0014                 _writeData16 3A28               ___fltol@sign1 0036  
                     ?_labs 0001             __end_of___fladd 1ECC                       ?_main 0001  
                     ?_dtoa 0017             __end_of___fldiv 26B4             __end_of___awdiv 360A  
           __end_of___flneg 3EFE             __end_of___awmod 3778             __end_of___flmul 231A  
           __end_of___flsub 3DC8             __end_of___fltol 3270             ___awdiv@divisor 0003  
                     _U1BRG 3DF5             ___awdiv@counter 0005                vfpfcnvrt@fmt 008D  
                     _PORTB 3FCB                       _PORTC 3FCC                       _TRISA 3FC2  
                     _TRISB 3FC3                       _TRISC 3FC4                       _flags 00EC  
       read_prec_or_width@c 0009         read_prec_or_width@n 000A                       _fputc 3826  
                     _fputs 3E4E                       labs@a 0001                       pad@fp 000F  
                     _width 005C                       _putch 4028                       dtoa@d 0018  
                     dtoa@i 0021                       dtoa@p 001E                       dtoa@s 0020  
                     dtoa@w 001C                       tablat 3FF5                       status 3FD8  
           __end_of_sprintf 3EC6              ?___fpclassifyf 0001               main@affiche16 00D8  
          __end_of_Lcd_Init 3B44            __end_of_Lcd_Port 3CD2             __initialization 3FA2  
              __end_of_labs 3D82                __end_of_main 2974                __end_of_dtoa 316A  
                    ??_labs 0005                      ??_main 0056                      ??_dtoa 001A  
           loadData@address 0001               __activetblptr 0002  __end_of_read_prec_or_width 3826  
                    ?_fputc 0001                      ?_fputs 0009            ___awdiv@dividend 0001  
                    _ANSELA 3A40                      ?_putch 0001                      _ANSELB 3A50  
                    _ANSELC 3A60                      _U1CON0 3DF2                      _U1CON1 3DF3  
                    _U1CON2 3DF4                      _RB1PPS 3A09                      _RB2PPS 3A0A  
                    _RC3PPS 3A13                      _RC5PPS 3A15                      _ODCONB 3A52  
                    _RC6PPS 3A16                   ??_Lcd_Cmd 0002            __end_of___xxtofl 2FF0  
              vfprintf@cfmt 0048                      ___flge 3270                      ___fleq 397E  
                 ??___fladd 0009                      ___wmul 3FD0                   ??___fldiv 0009  
                 ??___awdiv 0005                   ??___flneg 0005                   ??___awmod 0005  
                 ??___flmul 0009                   ??___flsub 0022                   ??___fltol 0032  
          __end_of_loadData 3546                      _efgtoa 1020                      _floorf 2C2A  
                    _memcpy 3CD2        read_prec_or_width@ap 0008                      clear_0 3FA8  
                    clear_1 3FC0            ___awdiv@quotient 0007             ___awmod@divisor 0003  
                    isa$std 0001             ___awmod@counter 0005                      pad@buf 0010  
                    dtoa@fp 0017                      _strcpy 3E0C           loadData16@address 001A  
                    fputc@c 0001                      fputs@c 000C                      fputs@i 000D  
                    fputs@s 0009             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                      tblptrh 3FF7  
                    tblptrl 3FF6                      tblptru 3FF8                      putch@c 0001  
          __end_of_vfprintf 3E0C                   ??_sprintf 0049             Lcd_Set_Cursor@a 0005  
           Lcd_Set_Cursor@b 0004             Lcd_Set_Cursor@y 0007             Lcd_Set_Cursor@z 0006  
                ___flge@ff1 001A                  ___flge@ff2 001E             ??___fpclassifyf 0005  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 3FC6                  ___flneg@f1 0001           __end_of_Lcd_Clear 4028  
             ___rparam_used 0001                  ___fltol@f1 002E              __pcstackCOMRAM 0001  
             __end_of_fputc 38D2               __end_of_fputs 3E8E               __end_of_putch 402A  
            _Lcd_Set_Cursor 3C10                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00E8                  __pbssBANK1 0100                     ?___flge 001A  
                   ?___fleq 0001                     _I2C2CLK 3D65                     ?___wmul 0001  
        loadData@valEEPROM2 0007          loadData@valEEPROM3 0008            writeData@address 0003  
                   ?_efgtoa 0038                ?_writeData16 0038                     ?_floorf 001A  
                   ?_memcpy 0001      __end_of_Lcd_Set_Cursor 3C76                     ?_strcpy 0001  
                   _U1RXPPS 3AE7                   ?___xxtofl 0001                     _SPI1CLK 3D1C  
                   _SPI1RXB 3D10                     _SPI1TXB 3D11                  ??_Lcd_Init 0004  
                ??_Lcd_Port 0001                   ?_loadData 0001              _Lcd_Write_Char 3F36  
                   _Lcd_Cmd 3FFA           __end_of_deleteAll 3C10                  _loadData16 38D2  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 1A0C  
                   ___fldiv 231A                     ___awdiv 3546                     ___flneg 3EC6  
                   ___awmod 36C8                     ___flmul 1ECC                     ___flsub 3D82  
                   ___fltol 316A                   ?_vfprintf 008F                __psmallconst 1000  
                   __pcinit 3FA2                     __ramtop 1000             ?_Lcd_Set_Cursor 0004  
                   __ptext0 26B4                     __ptext1 3A28                     __ptext2 360A  
                   __ptext3 3E8E                     __ptext4 3DC8                     __ptext5 2974  
                   __ptext6 3778                     __ptext7 3FD0                     __ptext8 1020  
                   __ptext9 3E0C       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
          ___awmod@dividend 0001                     efgtoa@c 003D                     efgtoa@d 006B  
                   efgtoa@e 006F                     efgtoa@f 0039                     efgtoa@g 0082  
                   efgtoa@h 0079                     efgtoa@i 0077                     efgtoa@l 007D  
                   efgtoa@m 006D                     efgtoa@n 0086                     efgtoa@p 0062  
                   efgtoa@t 0064                     efgtoa@u 0088                     efgtoa@w 0071  
            main@valeurTest 00E4                     _sprintf 3E8E      __end_of_Lcd_Write_Char 3F6E  
      end_of_initialization 3FC6                     floorf@e 0028                     floorf@m 0024  
                   floorf@u 002A                     floorf@x 001A                  ??_loadData 0003  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 3778           __end_of_vfpfcnvrt 2C2A                  efgtoa@mode 0069  
                efgtoa@sign 0081                   _SPI1TCNTH 3D13                   _SPI1TCNTL 3D12  
                   postdec2 3FDD         ?_read_prec_or_width 0007                     postinc0 3FEE  
                   postinc1 3FE6                     postinc2 3FDE            vfpfcnvrt@convarg 0042  
                 Lcd_Port@a 0001                  ??_vfprintf 0048                     strcpy@d 0005  
                 _PORTAbits 3FCA                   _PORTBbits 3FCB                   _PORTCbits 3FCC  
         __end_of_writeData 36C8                 ___fladd@grs 0010               ___xxtofl@sign 0009  
      ??_read_prec_or_width 0009                 ___fldiv@grs 0014                 ___fldiv@rem 000D  
           ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0005           Lcd_Write_String@i 0006  
             loadData16@val 002C                 ___flmul@grs 000E                  main@ligne1 0098  
               ?_loadData16 001A                   _Lcd_Clear 401A              __end_of___flge 3374  
            __end_of___fleq 3A28                 vfpfcnvrt@ap 008E                 vfpfcnvrt@cp 0047  
               vfpfcnvrt@fp 008C              __end_of___wmul 3FFA            _Lcd_Write_String 3EFE  
            __end_of_efgtoa 1A0C              __end_of_floorf 2E3C              __end_of_memcpy 3D2C  
                floorf@F521 00E8              __end_of_strcpy 3E4E         start_initialization 3FA2  
               __end_of_abs 3FA2                 __end_of_pad 3BAA       __end_of___fpclassifyf 3472  
           main@deletedData 00DC                 vfprintf@fmt 0090                  ?_Lcd_Clear 0001  
                  ??___flge 0022                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 003E                    ??_floorf 001E                    ??_memcpy 0007  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                    ??_strcpy 0004  
           writeData16@data 0044             writeData16@high 0042                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
                 ___flmul@a 0005                   ___flmul@b 0001                 __pbssCOMRAM 0058  
                 ___flsub@a 001E                   ___flsub@b 001A               __pcstackBANK0 0060  
                  ?_Lcd_Cmd 0001                 _efgtoa$1085 0066                   _main$1406 00E0  
                 _deleteAll 3BAA                   _dtoa$1054 001A            ??_Lcd_Set_Cursor 0005  
         loadData@valEEPROM 0006                    ?___fladd 0001                    ?___fldiv 0001  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 0001                    ?___flsub 001A                    ?___fltol 002E  
 loadData16@addressLowValue 0028                    _I2C2CON0 3D5D                 __smallconst 1000  
                  ?_sprintf 0092                  _I2C2SDAPPS 3AE6                  _I2C2SCLPPS 3AE5  
            ___wmul@product 0005                _SPI1CON0bits 3D14                _SPI1CON2bits 3D16  
                ?_deleteAll 0001                    Lcd_Cmd@a 0003                    _SPI1BAUD 3D19  
                  _SPI1CON0 3D14                    _SPI1CON1 3D15                 ??_Lcd_Clear 0004  
                 _vfpfcnvrt 2974           ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002  
                  _Lcd_Init 3AC8                   _writeData 360A                    _Lcd_Port 3C76  
                vfpfcnvrt@c 0046    __end_of_Lcd_Write_String 3F36                ??_loadData16 001E  
                  __Hrparam 0000                   memcpy@tmp 0007                  vfprintf@ap 0091  
                  __Lrparam 0000                  vfprintf@fp 008F              writeData16@low 0040  
                ?_vfpfcnvrt 008C          ___fpclassifyf@F465 0058                  sprintf@fmt 0093  
                  ___xxtofl 2E3C          __end_of_loadData16 397E                  ?_writeData 0001  
                  __ptext10 3CD2                    __ptext11 3D2C                    __ptext20 397E  
                  __ptext12 2C2A                    __ptext21 2FF0                    __ptext13 3374  
                  __ptext30 3472                    __ptext22 3B44                    __ptext14 316A  
                  __ptext31 2E3C                    __ptext23 3E4E                    __ptext15 3D82  
                  __ptext40 3C76                    __ptext32 231A                    __ptext24 3826  
                  __ptext16 1A0C                    __ptext33 3BAA                    __ptext25 4028  
                  __ptext17 3EC6                    __ptext34 3EFE                    __ptext26 3F6E  
                  __ptext18 1ECC                    __ptext35 3F36                    __ptext27 36C8  
                  __ptext19 3270                    __ptext36 3C10                    __ptext28 3546  
                  __ptext37 3AC8                    __ptext29 38D2                    __ptext38 401A  
                  __ptext39 3FFA                  _U1CON0bits 3DF2                  _U1FIFObits 3DF7  
                strcpy@dest 0001                    _loadData 3472                 ??_deleteAll 0001  
      loadData16@floatValue 0020                    efgtoa@fp 0038                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0073                    isa$xinst 0000  
             ??_writeData16 003E                    _vfprintf 3DC8                    memcpy@d1 0001  
                  memcpy@s1 0003  loadData16@addressHighValue 002A        writeData16@floatData 0038  
        Lcd_Write_Char@temp 0002                   sprintf@ap 0049               writeData@data 0001  
                 strcpy@src 0003                 efgtoa@nmode 006A                  _SPI1SDIPPS 3AE1  
                _SPI1TWIDTH 3D18                 ??_vfpfcnvrt 0040          Lcd_Set_Cursor@temp 0008  
                  sprintf@f 004A                    sprintf@s 0092         loadData16@valFinale 0024  
       __end_of_writeData16 3AC8          writeData16@address 003C                 ??_writeData 0005  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
